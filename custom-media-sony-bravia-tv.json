[
    {
        "id": "ede0e4a8.c75608",
        "type": "tab",
        "label": "SONY BRAVIA TV",
        "disabled": false,
        "info": ""
    },
    {
        "id": "fea592fb.da2be",
        "type": "group",
        "z": "ede0e4a8.c75608",
        "name": "CUSTOM MEDIA CONTROL FOR SONY BRAVIA TV",
        "style": {
            "label": true
        },
        "nodes": [
            "85bef22b.df308",
            "ea828323.493a3",
            "609bd41f.ee898c",
            "b381ee73.7e76c",
            "10267387.681a1c",
            "d64316eb.f37278",
            "8898449e.71ed98",
            "a1bd23ff.2b006",
            "de35bdee.4366a",
            "4eb63e63.2e88c",
            "80706a22.66d388",
            "c034401e.24b1f",
            "e6af9b4d.f07328",
            "30ad502d.3c82c",
            "cf6c1833.0e0498",
            "f0627e2.7f1a28",
            "c2380a04.e273b8",
            "7ea29d67.bb09b4",
            "3e365506.1b020a",
            "fcf7e178.c91ad",
            "b8ca74f4.5e7928",
            "16e2bea6.a72f71",
            "885bb24d.5e026",
            "86f27631.0f78c8",
            "99739530.1b38a8",
            "c04503bf.c9998",
            "a11f6df0.b2902",
            "cbce7955.5c80b8",
            "c943e147.5c3d9",
            "e4545bcd.cf30f8",
            "8ec86b48.30c688",
            "30c1b4b5.8aa0ec",
            "e0517ebc.d1ab",
            "84a29ca8.dfdb",
            "4168504b.f597b",
            "6a1e5f60.3fc43",
            "81e98d55.bd463",
            "a53d449d.f08948",
            "8f86e557.14f6c8",
            "4cdc98cd.817c58",
            "85a9548e.60e7f8",
            "d606503f.11eb7",
            "fce3835e.9c789",
            "c88aabc5.165128",
            "aaacc33d.e1368",
            "8fccaddc.461b8",
            "ad4fb110.b24b1",
            "77a56aaa.d528a4",
            "7a5d8541.f4099c",
            "a9494f49.ba033",
            "1be6f592.c8c57a",
            "22216f21.faf7e",
            "d8eb27c2.805808",
            "59c0f981.9e1578",
            "d5935d57.65b1e",
            "9ab4b22e.33ed1",
            "ddc71f25.e3e8b",
            "a7374bc0.e25338",
            "dca37f4c.c98a7",
            "c8b42966.778bf8",
            "90c66b0a.11a7c8",
            "bc9e8a8.6b43b78",
            "9b334800.ddd908",
            "8766fe2f.b0c6a",
            "180e3e09.9efe12",
            "73d47dda.061014",
            "9671c5fb.c0f5e8",
            "b1bac6a8.8c5e28",
            "82e0514a.d3a35",
            "341b520f.4f9d6e",
            "db34a2db.c4c13",
            "bdbee8a5.6520b8",
            "64043405.b895ec",
            "4756cd3e.91a3e4",
            "98296177.5eea8",
            "2e6f2fe2.f3693",
            "10da5726.3a3d39",
            "f083a73f.533df8",
            "453c1d4b.85fe64",
            "91f33049.07aeb",
            "98f87c98.d57f3",
            "1a3b012.504d0ff",
            "c505fcb8.f7f33",
            "6299e74d.1cf918",
            "7acc941.5955f6c",
            "b3d35727.487a18",
            "a50fb464.14f348",
            "836d392b.e03518",
            "e703bf82.db3ff",
            "51fa5a6b.d7e334",
            "f2699a89.2dde78",
            "9ff6d55.cff9128",
            "9922fac5.cfbea8",
            "bbddba56.44ed58",
            "8f2e835c.1476b",
            "ded851d4.780cb",
            "ae55ee0b.38d97"
        ],
        "x": 149,
        "y": 34,
        "w": 1027,
        "h": 1697
    },
    {
        "id": "85bef22b.df308",
        "type": "http in",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "GET /tvfavorites",
        "url": "/tvfavorites",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 280,
        "y": 1690,
        "wires": [
            [
                "ea828323.493a3"
            ]
        ]
    },
    {
        "id": "ea828323.493a3",
        "type": "function",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "get(\"tvFavorites\");",
        "func": "var tvFavorites = global.get(\"tvFavorites\");\nmsg.payload = {\"tvfavorites\": \"false\"};\nif(tvFavorites !== undefined){\n    msg.payload = JSON.stringify(tvFavorites);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 415,
        "y": 1690,
        "wires": [
            [
                "aaacc33d.e1368"
            ]
        ],
        "l": false
    },
    {
        "id": "609bd41f.ee898c",
        "type": "mqtt in",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "next",
        "topic": "hermes/intent/ProKNX:next",
        "qos": "2",
        "datatype": "auto",
        "broker": "6ea95f55.5ee86",
        "x": 246,
        "y": 1430,
        "wires": [
            [
                "8898449e.71ed98"
            ]
        ]
    },
    {
        "id": "b381ee73.7e76c",
        "type": "mqtt in",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "previous",
        "topic": "hermes/intent/ProKNX:previous",
        "qos": "2",
        "datatype": "auto",
        "broker": "6ea95f55.5ee86",
        "x": 256,
        "y": 1470,
        "wires": [
            [
                "8898449e.71ed98"
            ]
        ]
    },
    {
        "id": "10267387.681a1c",
        "type": "mqtt in",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "hotword off",
        "topic": "hermes/hotword/toggleOn",
        "qos": "2",
        "datatype": "auto",
        "broker": "6ea95f55.5ee86",
        "x": 250,
        "y": 490,
        "wires": [
            [
                "4eb63e63.2e88c"
            ]
        ]
    },
    {
        "id": "d64316eb.f37278",
        "type": "mqtt in",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "hotword on",
        "topic": "hermes/hotword/default/detected",
        "qos": "2",
        "datatype": "auto",
        "broker": "6ea95f55.5ee86",
        "x": 250,
        "y": 441,
        "wires": [
            [
                "a1bd23ff.2b006"
            ]
        ]
    },
    {
        "id": "8898449e.71ed98",
        "type": "function",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "Filter",
        "func": "// Sample code : control of TV set\n\nfunction findObjectByKey(array, key, value) {\n\titems = [];\n\tvar cpt = 0;\n\tfor (var i = 0; i < array.length; i++) {\n\t\tif (array[i][key] === value) {\n\t\t\titems[cpt] = array[i];\n\t\t\tcpt++;\n\t\t}\n\t}\n\tif (items[0] !== undefined) {\n\t\treturn items;\n\t} else {\n\t\treturn null;\n\t}\n}\n\nvar lang = global.get(\"msgLang\");\nvar defaultSpeaker = global.get(\"defaultSpeaker\");\nvar tvFavorites = global.get(\"tvFavorites\");\nvar siteIdTv = global.get(\"siteIdTv\");\nif(defaultSpeaker === undefined){\n    defaultSpeaker = \"speaker\";\n}\nmsg.cmd={};\nmsg.payload = JSON.parse(msg.payload);\nmsg.cmd.siteId = msg.payload.siteId.replace(/_\\d+$/, \"\").trim();\nvar doAllRooms = false;\nvar intent = msg.payload.intent.intentName;\nif (intent === undefined) \n    return null;\n\nif(msg.payload.input.toLowerCase().includes(\"snips\") === true){\n    //node.warn(\"send to snips: includes 'snips'\");\n    return null;   \n}\n\nvar rawRoom = findObjectByKey(msg.payload.slots, 'slotName', 'room');\nvar rawFavorite = findObjectByKey(msg.payload.slots, 'entity', 'FavoriteType');\nvar rawSpeaker = findObjectByKey(msg.payload.slots, 'entity', 'SpeakerType');\n\n//node.warn(msg.payload);\n//node.warn(\"rawRoom: \"+ JSON.stringify(rawRoom) );\nvar theRoom = msg.payload.siteId;\n\nif (rawRoom !== null) {\n\tmsg.cmd.room = [];\n\tfor (var i = 0; i < rawRoom.length; i++) {\n\t\tmsg.cmd.room[i] = rawRoom[i].value.value.toLowerCase();\n\t\t//node.warn(\"msg.cmd.room[i]: \"+msg.cmd.room[i] + \"   msg.payload.siteId: \"+msg.payload.siteId);\n\t\tif (msg.cmd.room[i] === \"here\" || msg.cmd.room[i] === \"hier\" || msg.cmd.room[i] === \"ici\") {\n\t\t\ttheRoom = msg.payload.siteId;\n\t\t} else {\n    \t\tif (msg.cmd.room[i] === \"all\" || msg.cmd.room[i] === \"everywhere\" || msg.cmd.room[i] === \"ueberall\" || msg.cmd.room[i] === \"partout\") {\n    \t\t    doAllRooms = true;\n    \t\t} else {\n    \t\t    theRoom = msg.cmd.room[i].replace(/ /g, \"_\");\n    \t\t}\n\t\t}\n\t}\n}\n\nif (rawSpeaker !== null) {\n    //node.warn(\"rawSpeaker: \"+JSON.stringify(rawSpeaker));\n    msg.payload.speaker = rawSpeaker[0].value.value.trim().toLowerCase();\n} else {\n    msg.payload.speaker = defaultSpeaker.trim().toLowerCase();\n}\n\nmsg.payload.siteId = theRoom;\n\nif(msg.payload.siteId.toLowerCase().replace(/_\\d+$/,\"\").replace(/_/g,\"\") !== siteIdTv.toLowerCase().replace(/_\\d+$/,\"\").replace(/ /g,\"\")){\n    return null;\n}\n\nif (rawFavorite !== null) {\n    //node.warn(\"rawFavorite: \"+JSON.stringify(rawFavorite));\n    msg.payload.favorite = rawFavorite[0].value.value.trim().toLowerCase();\n    node.warn(\"msg.payload.favorite: \"+msg.payload.favorite);\n}\n\n\n//node.warn(\"msg.payload.speaker: \"+msg.payload.speaker);\n    \nif (msg.payload.intent.confidenceScore < 0.6){\n    return null;\n}\n\n//node.warn(\"msg.payload.speaker = \" + msg.payload.speaker);\n\nif(msg.payload.speaker !== undefined){\n    if(msg.payload.speaker === \"tv\") {\n        \n        global.set(\"defaultSpeaker\", \"tv\");\n        //node.warn(\"intent \" + intent);\n        switch (intent) {\n            case \"ProKNX:next\": return [msg, null, null, null, null];\n            case \"ProKNX:previous\": return [null, msg, null, null, null];\n        }\n        \n        if (msg.payload.asrTokens[0].length <= 1){\n            return null;\n        }else{\n            switch(intent){\n            case \"ProKNX:increaseVolume\": return [null, null, msg, null, null];\n            case \"ProKNX:decreaseVolume\": return [null, null, null, msg, null];\n            case \"ProKNX:setVolume\": flow.set(\"rawLoudness\", findObjectByKey(msg.payload.slots, 'slotName', 'loudness')); flow.set(\"rawMin\", findObjectByKey(msg.payload.slots, 'slotName', 'min'));\n                                    flow.set(\"rawMax\", findObjectByKey(msg.payload.slots, 'slotName', 'max')); return [null, null, null, null, msg];\n            }\n        }\n    }\n}",
        "outputs": 5,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 394,
        "y": 1515,
        "wires": [
            [
                "f2699a89.2dde78"
            ],
            [
                "bbddba56.44ed58"
            ],
            [
                "8f86e557.14f6c8"
            ],
            [
                "4cdc98cd.817c58"
            ],
            [
                "d606503f.11eb7"
            ]
        ],
        "outputLabels": [
            "pause",
            "play",
            "next",
            "previous",
            "incvol"
        ]
    },
    {
        "id": "a1bd23ff.2b006",
        "type": "json",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 365,
        "y": 441,
        "wires": [
            [
                "de35bdee.4366a"
            ]
        ],
        "l": false
    },
    {
        "id": "de35bdee.4366a",
        "type": "delay",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 414,
        "y": 441,
        "wires": [
            [
                "b1bac6a8.8c5e28"
            ]
        ],
        "l": false
    },
    {
        "id": "4eb63e63.2e88c",
        "type": "json",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 365,
        "y": 490,
        "wires": [
            [
                "82e0514a.d3a35"
            ]
        ],
        "l": false
    },
    {
        "id": "80706a22.66d388",
        "type": "comment",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "Info - readme",
        "info": "The following nodes let you implement custom media control for Sony Bravia TV,\n\nIMPORTANT: To avoid your custom code is removed on flow update it is recommended to copy paste the nodes below to a new Tab\n\nTo apply this function it to your tv, you need to change the ip address of the tv\n\nTo change, go to configurations nodes and find SONY BRAVIA TV node and double click it\nChange the host to your tv's ip address and type in the PSK and save\n",
        "x": 245,
        "y": 75,
        "wires": []
    },
    {
        "id": "c034401e.24b1f",
        "type": "inject",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "French favorites (samples)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "20",
        "topic": "",
        "payload": "[\"Canal un\",\"Canal deux\",\"Canal trois\",\"Canal quatre\",\"Canal cinq\",\"Channel six\",\"Canal sept\",\"Canal huit\",\"Canal neuf\",\"Play Store\",\"YouTube\",\"Youtube Music\",\"Recorded Title List\",\"Media Player\",\"TV\",\"Prime Video\",\"Apple TV\",\"Play Games\",\"Play Movies\",\"Netflix\",\"Bonus Offer\",\"Sony Select\",\"Timers\",\"Internet Browser\",\"Disney+\",\"Molotov\",\"ProKNX\"]",
        "payloadType": "json",
        "x": 320,
        "y": 250,
        "wires": [
            [
                "30ad502d.3c82c"
            ]
        ]
    },
    {
        "id": "e6af9b4d.f07328",
        "type": "inject",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "German favorites (samples)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "20",
        "topic": "",
        "payload": "[\"Kanal eins\",\"Kanal zwei\",\"Kanal drei\",\"Kanal vier\",\"Kanal fünf\",\"Kanal sechs\",\"Kanal sieben\",\"Kanal acht\",\"Kanal neun\",\"Play Store\",\"YouTube\",\"Youtube Music\",\"Recorded Title List\",\"Media Player\",\"TV\",\"Prime Video\",\"Apple TV\",\"Play Games\",\"Play Movies\",\"Netflix\",\"Bonus Offer\",\"Sony Select\",\"Timers\",\"Internet Browser\",\"Disney+\",\"Molotov\"]",
        "payloadType": "json",
        "x": 320,
        "y": 290,
        "wires": [
            [
                "cf6c1833.0e0498"
            ]
        ]
    },
    {
        "id": "30ad502d.3c82c",
        "type": "function",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "lang?",
        "func": "var lang = global.get(\"msgLang\");\nif(lang.toLowerCase().includes(\"fr\")){\n    return msg;\n}\nelse {\n    //do nothing\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 560,
        "y": 250,
        "wires": [
            [
                "f0627e2.7f1a28"
            ]
        ]
    },
    {
        "id": "cf6c1833.0e0498",
        "type": "function",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "lang?",
        "func": "var lang = global.get(\"msgLang\");\nif(lang.toLowerCase().includes(\"de\")){\n    return msg;\n}\nelse {\n    //do nothing\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 560,
        "y": 290,
        "wires": [
            [
                "f0627e2.7f1a28"
            ]
        ]
    },
    {
        "id": "f0627e2.7f1a28",
        "type": "change",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "Save",
        "rules": [
            {
                "t": "set",
                "p": "tvFavorites",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "useTvFavorites",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 290,
        "wires": [
            []
        ]
    },
    {
        "id": "c2380a04.e273b8",
        "type": "inject",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "English favorites (samples)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "20",
        "topic": "",
        "payload": "[\"Channel one\",\"Channel two\",\"Channel three\",\"Channel four\",\"Channel five\",\"Channel six\",\"Channel seven\",\"Channel eight\",\"Channel nine\",\"Play Store\",\"YouTube\",\"Youtube Music\",\"Recorded Title List\",\"Media Player\",\"TV\",\"Prime Video\",\"Apple TV\",\"Play Games\",\"Play Movies\",\"Netflix\",\"Bonus Offer\",\"Sony Select\",\"Timers\",\"Internet Browser\",\"Disney Plus\",\"Molotov\"]",
        "payloadType": "json",
        "x": 320,
        "y": 330,
        "wires": [
            [
                "7ea29d67.bb09b4"
            ]
        ]
    },
    {
        "id": "7ea29d67.bb09b4",
        "type": "function",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "lang?",
        "func": "var lang = global.get(\"msgLang\");\nif(lang.toLowerCase().includes(\"en\")){\n    return msg;\n}\nelse {\n    //do nothing\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 560,
        "y": 330,
        "wires": [
            [
                "f0627e2.7f1a28"
            ]
        ]
    },
    {
        "id": "3e365506.1b020a",
        "type": "mqtt in",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "incVol",
        "topic": "hermes/intent/ProKNX:increaseVolume",
        "qos": "2",
        "datatype": "auto",
        "broker": "6ea95f55.5ee86",
        "x": 245,
        "y": 1515,
        "wires": [
            [
                "8898449e.71ed98"
            ]
        ]
    },
    {
        "id": "fcf7e178.c91ad",
        "type": "mqtt in",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "decVol",
        "topic": "hermes/intent/ProKNX:decreaseVolume",
        "qos": "2",
        "datatype": "auto",
        "broker": "6ea95f55.5ee86",
        "x": 245,
        "y": 1555,
        "wires": [
            [
                "8898449e.71ed98"
            ]
        ]
    },
    {
        "id": "b8ca74f4.5e7928",
        "type": "mqtt in",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "setVol",
        "topic": "hermes/intent/ProKNX:setVolume",
        "qos": "2",
        "datatype": "auto",
        "broker": "6ea95f55.5ee86",
        "x": 245,
        "y": 1595,
        "wires": [
            [
                "8898449e.71ed98"
            ]
        ]
    },
    {
        "id": "16e2bea6.a72f71",
        "type": "bravia-ircc",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "tv": "204aae5a.40fb72",
        "ircc": "Next",
        "name": "Next",
        "x": 690,
        "y": 1350,
        "wires": []
    },
    {
        "id": "885bb24d.5e026",
        "type": "bravia-ircc",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "tv": "204aae5a.40fb72",
        "ircc": "Prev",
        "name": "Previous",
        "x": 700,
        "y": 1430,
        "wires": []
    },
    {
        "id": "86f27631.0f78c8",
        "type": "mqtt in",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "play",
        "topic": "hermes/intent/ProKNX:play",
        "qos": "2",
        "datatype": "auto",
        "broker": "6ea95f55.5ee86",
        "x": 239,
        "y": 640,
        "wires": [
            [
                "99739530.1b38a8"
            ]
        ]
    },
    {
        "id": "99739530.1b38a8",
        "type": "function",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "Play",
        "func": "\nfunction findObjectByKey(array, key, value) {\n\titems = [];\n\tvar cpt = 0;\n\tfor (var i = 0; i < array.length; i++) {\n\t\tif (array[i][key] === value) {\n\t\t\titems[cpt] = array[i];\n\t\t\tcpt++;\n\t\t}\n\t}\n\tif (items[0] !== undefined) {\n\t\treturn items;\n\t} else {\n\t\treturn null;\n\t}\n}\n\nvar lang = global.get(\"msgLang\");\nvar defaultSpeaker = global.get(\"defaultSpeaker\");\nvar tvFavorites = global.get(\"tvFavorites\");\nvar siteIdTv = global.get(\"siteIdTv\");\nif(defaultSpeaker === undefined){\n    defaultSpeaker = \"speaker\";\n}\nmsg.cmd={};\nmsg.payload = JSON.parse(msg.payload);\nmsg.cmd.siteId = msg.payload.siteId.replace(/_\\d+$/, \"\").trim();\nvar doAllRooms = false;\nvar intent = msg.payload.intent.intentName;\nif (intent === undefined) \n    return null;\n\nvar rawRoom = findObjectByKey(msg.payload.slots, 'slotName', 'room');\nvar rawFavorite = findObjectByKey(msg.payload.slots, 'entity', 'FavoriteType');\nvar rawSpeaker = findObjectByKey(msg.payload.slots, 'entity', 'SpeakerType');\n\n//node.warn(msg.payload);\n//node.warn(\"rawRoom: \"+ JSON.stringify(rawRoom) );\nvar theRoom = msg.payload.siteId;\n\nif (rawRoom !== null) {\n\tmsg.cmd.room = [];\n\tfor (var i = 0; i < rawRoom.length; i++) {\n\t\tmsg.cmd.room[i] = rawRoom[i].value.value.toLowerCase();\n\t\t//node.warn(\"msg.cmd.room[i]: \"+msg.cmd.room[i] + \"   msg.payload.siteId: \"+msg.payload.siteId);\n\t\tif (msg.cmd.room[i] === \"here\" || msg.cmd.room[i] === \"hier\" || msg.cmd.room[i] === \"ici\") {\n\t\t\ttheRoom = msg.payload.siteId;\n\t\t} else {\n    \t\tif (msg.cmd.room[i] === \"all\" || msg.cmd.room[i] === \"everywhere\" || msg.cmd.room[i] === \"ueberall\" || msg.cmd.room[i] === \"partout\") {\n    \t\t    doAllRooms = true;\n    \t\t} else {\n    \t\t    theRoom = msg.cmd.room[i].replace(/ /g, \"_\");\n    \t\t}\n\t\t}\n\t}\n}\n\nif (rawSpeaker !== null) {\n    //node.warn(\"rawSpeaker: \"+JSON.stringify(rawSpeaker));\n    msg.payload.speaker = rawSpeaker[0].value.value.trim().toLowerCase();\n} else {\n    msg.payload.speaker = defaultSpeaker.trim().toLowerCase();\n}\n\nmsg.payload.siteId = theRoom;\n\nif(msg.payload.siteId.toLowerCase().replace(/_\\d+$/,\"\").replace(/_/g,\"\") !== siteIdTv.toLowerCase().replace(/_\\d+$/,\"\").replace(/ /g,\"\")){\n    return null;\n}\n\n//node.warn(\" Will use msg.payload.siteId: \"+msg.payload.siteId);\n//global.set(\"siteIdTv\", msg.payload.siteId);\n\nif (rawFavorite !== null) {\n    //node.warn(\"rawFavorite: \"+JSON.stringify(rawFavorite));\n    msg.payload.favorite = rawFavorite[0].value.value.trim().toLowerCase();\n\n    global.set(\"msg.payload.favorite\", msg.payload.favorite);\n    \n    var found = tvFavorites.find(\n            function(str) { return str.toLowerCase() == msg.payload.favorite.toLowerCase(); }\n        );\n        \n    \n    if (found !== undefined) {\n        \n        global.set(\"defaultSpeaker\", \"tv\");\n        return [null, msg];\n        \n    }\n}\n\n//var msgFavorite = msg;\nvar sonosPlaylists = global.get(\"sonosPlaylists\");\nvar sonosFavorites = global.get(\"sonosFavorites\");  \n\nif(msg.payload.favorite !== undefined){\n\n    var searchItem = msg.payload.favorite;\n    //node.warn(\"searchItem : \"+searchItem);\n    \n    var found1 = sonosPlaylists.find(\n        function(str) { return str.toLowerCase() == searchItem.toLowerCase(); }\n        );\n    \n    var found2 = sonosFavorites.find(\n            function(str) { return str.toLowerCase() == searchItem.toLowerCase(); }\n        );\n    \n    if(found1 !== undefined || found2 !== undefined){\n        return null;\n    }\n}\n\n//node.warn(\"msg.payload.speaker: \"+msg.payload.speaker);\n    \nif (msg.payload.intent.confidenceScore < 0.6 || msg.payload.asrTokens!== undefined && msg.payload.asrTokens[0].length <= 1){\n    return null;\n}\n\nif(msg.payload.speaker === \"tv\"){\n    \n    global.set(\"defaultSpeaker\", \"tv\");\n    return [msg, null];\n    \n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 369,
        "y": 640,
        "wires": [
            [
                "59c0f981.9e1578",
                "e0517ebc.d1ab"
            ],
            [
                "59c0f981.9e1578",
                "180e3e09.9efe12"
            ]
        ]
    },
    {
        "id": "c04503bf.c9998",
        "type": "mqtt in",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "pause",
        "topic": "hermes/intent/ProKNX:pause",
        "qos": "2",
        "datatype": "auto",
        "broker": "6ea95f55.5ee86",
        "x": 239,
        "y": 1223,
        "wires": [
            [
                "cbce7955.5c80b8"
            ]
        ]
    },
    {
        "id": "a11f6df0.b2902",
        "type": "mqtt in",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "hermes/asr/textCaptured",
        "topic": "hermes/asr/textCaptured",
        "qos": "2",
        "datatype": "auto",
        "broker": "6ea95f55.5ee86",
        "x": 299,
        "y": 1140,
        "wires": [
            [
                "c943e147.5c3d9"
            ]
        ]
    },
    {
        "id": "cbce7955.5c80b8",
        "type": "function",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "Pause",
        "func": "\nfunction findObjectByKey(array, key, value) {\n\titems = [];\n\tvar cpt = 0;\n\tfor (var i = 0; i < array.length; i++) {\n\t\tif (array[i][key] === value) {\n\t\t\titems[cpt] = array[i];\n\t\t\tcpt++;\n\t\t}\n\t}\n\tif (items[0] !== undefined) {\n\t\treturn items;\n\t} else {\n\t\treturn null;\n\t}\n}\n\nvar lang = global.get(\"msgLang\");\nvar defaultSpeaker = global.get(\"defaultSpeaker\");\nvar tvFavorites = global.get(\"tvFavorites\");\nvar siteIdTv = global.get(\"siteIdTv\");\nif(defaultSpeaker === undefined){\n    defaultSpeaker = \"speaker\";\n}\nmsg.cmd={};\nmsg.payload = JSON.parse(msg.payload);\nmsg.cmd.siteId = msg.payload.siteId.replace(/_\\d+$/, \"\").trim();\nvar doAllRooms = false;\nvar intent = msg.payload.intent.intentName;\nif (intent === undefined) \n    return null;\n\nvar rawRoom = findObjectByKey(msg.payload.slots, 'slotName', 'room');\nvar rawFavorite = findObjectByKey(msg.payload.slots, 'entity', 'FavoriteType');\nvar rawSpeaker = findObjectByKey(msg.payload.slots, 'entity', 'SpeakerType');\n\n//node.warn(msg.payload);\n//node.warn(\"rawRoom: \"+ JSON.stringify(rawRoom) );\nvar theRoom = msg.payload.siteId;\n\nif (rawRoom !== null) {\n\tmsg.cmd.room = [];\n\tfor (var i = 0; i < rawRoom.length; i++) {\n\t\tmsg.cmd.room[i] = rawRoom[i].value.value.toLowerCase();\n\t\t//node.warn(\"msg.cmd.room[i]: \"+msg.cmd.room[i] + \"   msg.payload.siteId: \"+msg.payload.siteId);\n\t\tif (msg.cmd.room[i] === \"here\" || msg.cmd.room[i] === \"hier\" || msg.cmd.room[i] === \"ici\") {\n\t\t\ttheRoom = msg.payload.siteId;\n\t\t} else {\n    \t\tif (msg.cmd.room[i] === \"all\" || msg.cmd.room[i] === \"everywhere\" || msg.cmd.room[i] === \"ueberall\" || msg.cmd.room[i] === \"partout\") {\n    \t\t    doAllRooms = true;\n    \t\t} else {\n    \t\t    theRoom = msg.cmd.room[i].replace(/ /g, \"_\");\n    \t\t}\n\t\t}\n\t}\n}\n\nif (rawSpeaker !== null) {\n    //node.warn(\"rawSpeaker: \"+JSON.stringify(rawSpeaker));\n    msg.payload.speaker = rawSpeaker[0].value.value.trim().toLowerCase();\n} else {\n    msg.payload.speaker = defaultSpeaker.trim().toLowerCase();\n}\n\nmsg.payload.siteId = theRoom;\n\nif(msg.payload.siteId.toLowerCase().replace(/_\\d+$/,\"\").replace(/_/g,\"\") !== siteIdTv.toLowerCase().replace(/_\\d+$/,\"\").replace(/ /g,\"\")){\n    return null;\n}\n\n//node.warn(\" Will use msg.payload.siteId: \"+msg.payload.siteId);\n//global.set(\"siteIdTv\", msg.payload.siteId);\n\nif (rawFavorite !== null) {\n    //node.warn(\"rawFavorite: \"+JSON.stringify(rawFavorite));\n    msg.payload.favorite = rawFavorite[0].value.value.trim().toLowerCase();\n}\n\n//var msgFavorite = msg;\nvar sonosPlaylists = global.get(\"sonosPlaylists\");\nvar sonosFavorites = global.get(\"sonosFavorites\");  \n\nif(msg.payload.favorite !== undefined){\n\n    var searchItem = msg.payload.favorite;\n    //node.warn(\"searchItem : \"+searchItem);\n    \n    var found1 = sonosPlaylists.find(\n        function(str) { return str.toLowerCase() == searchItem.toLowerCase(); }\n        );\n    \n    var found2 = sonosFavorites.find(\n            function(str) { return str.toLowerCase() == searchItem.toLowerCase(); }\n        );\n    \n    if(found1 !== undefined || found2 !== undefined){\n        return null;\n    }\n}\n\n//node.warn(\"msg.payload.speaker: \"+msg.payload.speaker);\n    \nif (msg.payload.intent.confidenceScore < 0.6 || msg.payload.asrTokens!== undefined && msg.payload.asrTokens[0].length <= 1){\n    return null;\n}\n\nvar messageTv = flow.get(\"messageTv\");\n\nif(msg.payload.speaker === \"tv\" ){\n    \n    global.set(\"defaultSpeaker\", \"tv\");\n    \n    if(messageTv === \"off\"){\n        return [null, msg];\n    }else{\n        return [msg, null];\n    }\n\n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 379,
        "y": 1223,
        "wires": [
            [
                "85a9548e.60e7f8"
            ],
            [
                "98296177.5eea8"
            ]
        ]
    },
    {
        "id": "c943e147.5c3d9",
        "type": "function",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "Filter",
        "func": "msg.payload = JSON.parse(msg.payload);\nmsg.cmd = {};\nmsg.cmd.lang = global.get(\"msgLang\");\n\nif(msg.cmd.lang === \"de\"){\n    \n    if(msg.payload.text.includes(\"pause\")){\n            \n        flow.set(\"messageTv\", \"off\");\n    }else{\n        flow.set(\"messageTv\", \"on\");\n    }\n    \n    if(msg.payload.text.includes(\"kanal\")){\n        \n        flow.set(\"setScreen\", \"channel\");\n        global.set(\"defaultSpeaker\", \"tv\");\n    }else{\n        flow.set(\"setScreen\", \"media\");\n    }\n    \n    \n        \n    \n} else if(msg.cmd.lang === \"fr\"){\n    \n    if(msg.payload.text.includes(\"pause\")){\n            \n            flow.set(\"messageTv\", \"off\");\n            \n    }else{\n        flow.set(\"messageTv\", \"on\");\n    }\n    \n    if(msg.payload.text.includes(\"canal\")){\n        \n        flow.set(\"setScreen\", \"channel\");\n        global.set(\"defaultSpeaker\", \"tv\");\n    }else{\n        flow.set(\"setScreen\", \"media\");\n    }\n    \n}else{\n    \n    if(msg.payload.text.includes(\"pause\")){\n            \n        flow.set(\"messageTv\", \"off\");\n            \n    }else{\n        flow.set(\"messageTv\", \"on\");\n    }\n    \n    if(msg.payload.text.includes(\"channel\")){\n        \n        flow.set(\"setScreen\", \"channel\");\n        global.set(\"defaultSpeaker\", \"tv\");\n    }else{\n        flow.set(\"setScreen\", \"media\");\n    }\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 490,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "e4545bcd.cf30f8",
        "type": "bravia-api",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "tv": "204aae5a.40fb72",
        "method": "audio:1.2:setAudioVolume",
        "payload": "{\"target\":\"speaker\", \"volume\":\"+6\"}",
        "name": "Volume up",
        "x": 725,
        "y": 1495,
        "wires": [
            []
        ]
    },
    {
        "id": "8ec86b48.30c688",
        "type": "bravia-api",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "tv": "204aae5a.40fb72",
        "method": "audio:1.2:setAudioVolume",
        "payload": "{\"target\":\"speaker\", \"volume\":\"-6\"}",
        "name": "Volume down",
        "x": 715,
        "y": 1555,
        "wires": [
            []
        ]
    },
    {
        "id": "30c1b4b5.8aa0ec",
        "type": "bravia-api",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "tv": "204aae5a.40fb72",
        "method": "system:1.0:setPowerStatus",
        "payload": "{\"status\":true}",
        "name": "Power on",
        "x": 760,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "e0517ebc.d1ab",
        "type": "bravia-api",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "tv": "204aae5a.40fb72",
        "method": "system:1.0:getPowerStatus",
        "payload": "",
        "name": "TV status",
        "x": 555,
        "y": 600,
        "wires": [
            [
                "84a29ca8.dfdb"
            ]
        ],
        "l": false
    },
    {
        "id": "84a29ca8.dfdb",
        "type": "switch",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "Is TV On?",
        "property": "payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "standby",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "active",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 615,
        "y": 600,
        "wires": [
            [
                "30c1b4b5.8aa0ec"
            ],
            [
                "4168504b.f597b"
            ]
        ],
        "l": false
    },
    {
        "id": "4168504b.f597b",
        "type": "bravia-ircc",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "tv": "204aae5a.40fb72",
        "ircc": "Confirm",
        "name": "Play",
        "x": 770,
        "y": 600,
        "wires": []
    },
    {
        "id": "6a1e5f60.3fc43",
        "type": "bravia-api",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "tv": "204aae5a.40fb72",
        "method": "audio:1.0:setAudioMute",
        "payload": "{\"status\":true}",
        "name": "Mute",
        "x": 730,
        "y": 441,
        "wires": [
            []
        ]
    },
    {
        "id": "81e98d55.bd463",
        "type": "bravia-api",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "tv": "204aae5a.40fb72",
        "method": "audio:1.0:setAudioMute",
        "payload": "{\"status\":false}",
        "name": "Unmute",
        "x": 740,
        "y": 489,
        "wires": [
            []
        ]
    },
    {
        "id": "a53d449d.f08948",
        "type": "bravia-api",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "tv": "204aae5a.40fb72",
        "method": "audio:1.2:setAudioVolume",
        "payload": "",
        "name": "Set volume",
        "x": 874,
        "y": 1615,
        "wires": [
            []
        ]
    },
    {
        "id": "8f86e557.14f6c8",
        "type": "bravia-api",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "tv": "204aae5a.40fb72",
        "method": "audio:1.0:setAudioMute",
        "payload": "{\"status\":false}",
        "name": "Unmute",
        "x": 545,
        "y": 1495.6000061035156,
        "wires": [
            [
                "e4545bcd.cf30f8"
            ]
        ]
    },
    {
        "id": "4cdc98cd.817c58",
        "type": "bravia-api",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "tv": "204aae5a.40fb72",
        "method": "audio:1.0:setAudioMute",
        "payload": "{\"status\":false}",
        "name": "Unmute",
        "x": 544,
        "y": 1555,
        "wires": [
            [
                "8ec86b48.30c688"
            ]
        ]
    },
    {
        "id": "85a9548e.60e7f8",
        "type": "bravia-api",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "tv": "204aae5a.40fb72",
        "method": "system:1.0:setPowerStatus",
        "payload": "{\"status\":false}",
        "name": "Power off",
        "x": 540,
        "y": 1203,
        "wires": [
            []
        ]
    },
    {
        "id": "d606503f.11eb7",
        "type": "bravia-api",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "tv": "204aae5a.40fb72",
        "method": "audio:1.0:setAudioMute",
        "payload": "{\"status\":false}",
        "name": "Unmute",
        "x": 404,
        "y": 1615,
        "wires": [
            [
                "c88aabc5.165128"
            ]
        ]
    },
    {
        "id": "fce3835e.9c789",
        "type": "function",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "Set volume",
        "func": "const minLoudness = msg.payload[0].minVolume;\nconst maxLoudness = msg.payload[0].maxVolume;\nvar rawLoudness = flow.get(\"rawLoudness\");\nvar rawMin = flow.get(\"rawMin\");\nvar rawMax = flow.get(\"rawMax\");\nvar loudness = 1;\nvar nbrLoudness = '1';\n\n\nif(rawLoudness!==null){\n    loudness = rawLoudness[0].value.value;\n    nbrLoudness = Number(loudness);\n    if(loudness === undefined || rawLoudness[0].value.kind !== 'Number' || isNaN(nbrLoudness) === true){\n        node.warn(\"Skipping invalid volume\");\n        return;\n    }\n}\nif(rawMax!==null){\n    loudness = maxLoudness;\n}\nif(rawMin!==null){\n    loudness = minLoudness;\n}\nif(nbrLoudness>Number(maxLoudness)){\n    loudness = maxLoudness;\n}\n\nif(nbrLoudness<Number(minLoudness)){\n    loudness = minLoudness;    \n}\n\nloudness = String(loudness);\n\nmsg.payload = {\"target\":\"speaker\",\"volume\":loudness};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 714,
        "y": 1615,
        "wires": [
            [
                "a53d449d.f08948"
            ]
        ]
    },
    {
        "id": "c88aabc5.165128",
        "type": "bravia-api",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "tv": "204aae5a.40fb72",
        "method": "audio:1.0:getVolumeInformation",
        "payload": "",
        "name": "Volume info",
        "x": 554,
        "y": 1615,
        "wires": [
            [
                "fce3835e.9c789"
            ]
        ]
    },
    {
        "id": "aaacc33d.e1368",
        "type": "http response",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 475,
        "y": 1690,
        "wires": [],
        "l": false
    },
    {
        "id": "8fccaddc.461b8",
        "type": "function",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "ChannelTvFavorites",
        "func": "function findObjectByKey(array, key, value) {\n\titems = [];\n\tvar cpt = 0;\n\tfor (var i = 0; i < array.length; i++) {\n\t\tif (array[i][key] === value) {\n\t\t\titems[cpt] = array[i];\n\t\t\tcpt++;\n\t\t}\n\t}\n\tif (items[0] !== undefined) {\n\t\treturn items;\n\t} else {\n\t\treturn null;\n\t}\n}\n\nvar lang = global.get(\"msgLang\");\nvar defaultSpeaker = global.get(\"defaultSpeaker\");\nif(defaultSpeaker === undefined){\n    defaultSpeaker = \"speaker\";\n}\nmsg.cmd={};\nmsg.payload = JSON.parse(msg.payload);\nvar doAllRooms = false;\nvar intent = msg.payload.intent.intentName;\nif (intent === undefined) \n    return null;\n\nvar rawRoom = findObjectByKey(msg.payload.slots, 'slotName', 'room');\nvar rawFavorite = findObjectByKey(msg.payload.slots, 'entity', 'FavoriteType');\nvar rawSpeaker = findObjectByKey(msg.payload.slots, 'entity', 'SpeakerType');\n\n//node.warn(msg.payload);\n//node.warn(\"rawRoom: \"+ JSON.stringify(rawRoom) );\nvar theRoom = msg.payload.siteId;\n\nif (rawRoom !== null) {\n\tmsg.cmd.room = [];\n\tfor (var i = 0; i < rawRoom.length; i++) {\n\t\tmsg.cmd.room[i] = rawRoom[i].value.value.toLowerCase();\n\t\t//node.warn(\"msg.cmd.room[i]: \"+msg.cmd.room[i] + \"   msg.payload.siteId: \"+msg.payload.siteId);\n\t\tif (msg.cmd.room[i] === \"here\" || msg.cmd.room[i] === \"hier\" || msg.cmd.room[i] === \"ici\") {\n\t\t\ttheRoom = msg.payload.siteId;\n\t\t} else {\n    \t\tif (msg.cmd.room[i] === \"all\" || msg.cmd.room[i] === \"everywhere\" || msg.cmd.room[i] === \"ueberall\" || msg.cmd.room[i] === \"partout\") {\n    \t\t    doAllRooms = true;\n    \t\t} else {\n    \t\t    theRoom = msg.cmd.room[i].replace(/ /g, \"_\");\n    \t\t}\n\t\t}\n\t}\n} \nmsg.payload.siteId = theRoom;\n//node.warn(\" Will use msg.payload.siteId: \"+msg.payload.siteId);\n//global.set(\"siteIdTv\", msg.payload.siteId);\n\nif (rawFavorite !== null) {\n    //node.warn(\"rawFavorite: \"+JSON.stringify(rawFavorite));\n    msg.payload.favorite = rawFavorite[0].value.value.trim().toLowerCase();\n    //node.warn(\"msg.payload.favorite: \"+msg.payload.favorite);\n}\n\n\nif (rawSpeaker !== null) {\n    //node.warn(\"rawSpeaker: \"+JSON.stringify(rawSpeaker));\n    msg.payload.speaker = rawSpeaker[0].value.value.trim().toLowerCase();\n} else {\n    msg.payload.speaker = defaultSpeaker;\n}\n\n//node.warn(\"msg.payload.speaker: \"+msg.payload.speaker);\n\n\nvar msgFav = msg.payload.favorite;\nvar tvFavorites = global.get(\"tvFavorites\");\nvar out = [];\n\nif(msg.payload.favorite === undefined){\n    return ;\n    \n} else {\n\n    for(var i = 0; i<tvFavorites.length; i++){\n        if(msgFav.toLowerCase() == tvFavorites[i].toLowerCase()){\n            out.push([msg]);\n        }else{\n            out.push([]);\n        }\n    }\n    return out;\n}\n\n",
        "outputs": 9,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 580,
        "y": 900,
        "wires": [
            [
                "c505fcb8.f7f33"
            ],
            [
                "6299e74d.1cf918"
            ],
            [
                "7acc941.5955f6c"
            ],
            [
                "7a5d8541.f4099c"
            ],
            [
                "b3d35727.487a18"
            ],
            [
                "a50fb464.14f348"
            ],
            [
                "836d392b.e03518"
            ],
            [
                "e703bf82.db3ff"
            ],
            [
                "51fa5a6b.d7e334"
            ]
        ]
    },
    {
        "id": "ad4fb110.b24b1",
        "type": "bravia-ircc",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "tv": "204aae5a.40fb72",
        "ircc": "Num1",
        "name": "Num 1",
        "x": 890,
        "y": 760,
        "wires": []
    },
    {
        "id": "77a56aaa.d528a4",
        "type": "bravia-ircc",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "tv": "204aae5a.40fb72",
        "ircc": "Num2",
        "name": "Num 2",
        "x": 890,
        "y": 800,
        "wires": []
    },
    {
        "id": "7a5d8541.f4099c",
        "type": "bravia-ircc",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "tv": "204aae5a.40fb72",
        "ircc": "Num4",
        "name": "Num 4",
        "x": 890,
        "y": 880,
        "wires": []
    },
    {
        "id": "a9494f49.ba033",
        "type": "bravia-ircc",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "tv": "204aae5a.40fb72",
        "ircc": "Num3",
        "name": "Num 3",
        "x": 890,
        "y": 840,
        "wires": []
    },
    {
        "id": "1be6f592.c8c57a",
        "type": "bravia-api",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "tv": "204aae5a.40fb72",
        "method": "appControl:1.0:getApplicationList",
        "payload": "",
        "name": "App List",
        "x": 500,
        "y": 1020,
        "wires": [
            [
                "d8eb27c2.805808"
            ]
        ]
    },
    {
        "id": "22216f21.faf7e",
        "type": "inject",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 235,
        "y": 1040,
        "wires": [
            [
                "1be6f592.c8c57a",
                "9ab4b22e.33ed1"
            ]
        ],
        "l": false
    },
    {
        "id": "d8eb27c2.805808",
        "type": "file",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "AppList",
        "filename": "AppList",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 640,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "59c0f981.9e1578",
        "type": "json",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 435,
        "y": 540,
        "wires": [
            [
                "d5935d57.65b1e"
            ]
        ],
        "l": false
    },
    {
        "id": "d5935d57.65b1e",
        "type": "file",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "tvPlay",
        "filename": "tvPlay",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 536,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "9ab4b22e.33ed1",
        "type": "bravia-api",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "tv": "204aae5a.40fb72",
        "method": "system:1.0:getRemoteControllerInfo",
        "payload": "",
        "name": "Remote Controller Info",
        "x": 460,
        "y": 1060,
        "wires": [
            [
                "ddc71f25.e3e8b"
            ]
        ]
    },
    {
        "id": "ddc71f25.e3e8b",
        "type": "file",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "RemoteInfo",
        "filename": "RemoteInfo",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 650,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "a7374bc0.e25338",
        "type": "function",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "AppTvFavorites",
        "func": "function findObjectByKey(array, key, value) {\n\titems = [];\n\tvar cpt = 0;\n\tfor (var i = 0; i < array.length; i++) {\n\t\tif (array[i][key].toLowerCase() === value.toLowerCase()) {\n\t\t\titems[cpt] = array[i];\n\t\t\tcpt++;\n\t\t}\n\t}\n\tif (items[0] !== undefined) {\n\t\treturn items;\n\t} else {\n\t\treturn null;\n\t}\n}\n\nmsg.cmd={};\nmsg.payload = JSON.parse(msg.payload);\nvar find = global.get(\"msg.payload.favorite\");\n\nif(find === \"disney plus\"){\n    find = \"Disney+\";\n}\n\nvar app = findObjectByKey(msg.payload, 'title', find);\n\n//node.warn(app);\n\nif(app === null){\n    \n    return [null, msg];\n    \n}else {\n    msg.payload = \"{\\\"uri\\\":\\\"\" + app[0].uri + \"\\\"}\";\n    return [msg, null];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 820,
        "wires": [
            [
                "c8b42966.778bf8"
            ],
            [
                "9b334800.ddd908"
            ]
        ]
    },
    {
        "id": "dca37f4c.c98a7",
        "type": "file in",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "AppList",
        "filename": "AppList",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 235,
        "y": 820,
        "wires": [
            [
                "a7374bc0.e25338"
            ]
        ],
        "l": false
    },
    {
        "id": "c8b42966.778bf8",
        "type": "bravia-api",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "tv": "204aae5a.40fb72",
        "method": "appControl:1.0:setActiveApp",
        "payload": "",
        "name": "setActiveApp",
        "x": 550,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "90c66b0a.11a7c8",
        "type": "file in",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "tvPlay",
        "filename": "tvPlay",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 435,
        "y": 900,
        "wires": [
            [
                "8fccaddc.461b8"
            ]
        ],
        "l": false
    },
    {
        "id": "bc9e8a8.6b43b78",
        "type": "bravia-api",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "tv": "204aae5a.40fb72",
        "method": "system:1.0:setPowerStatus",
        "payload": "{\"status\":true}",
        "name": "Power on",
        "x": 675,
        "y": 640,
        "wires": [
            [
                "ae55ee0b.38d97"
            ]
        ],
        "l": false
    },
    {
        "id": "9b334800.ddd908",
        "type": "bravia-api",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "tv": "204aae5a.40fb72",
        "method": "appControl:1.0:terminateApps",
        "payload": "",
        "name": "Terminate App",
        "x": 320,
        "y": 900,
        "wires": [
            [
                "90c66b0a.11a7c8"
            ]
        ]
    },
    {
        "id": "8766fe2f.b0c6a",
        "type": "switch",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "Is TV On?",
        "property": "payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "standby",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "active",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 615,
        "y": 660,
        "wires": [
            [
                "bc9e8a8.6b43b78"
            ],
            [
                "dca37f4c.c98a7"
            ]
        ],
        "l": false
    },
    {
        "id": "180e3e09.9efe12",
        "type": "bravia-api",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "tv": "204aae5a.40fb72",
        "method": "system:1.0:getPowerStatus",
        "payload": "",
        "name": "TV status",
        "x": 555,
        "y": 660,
        "wires": [
            [
                "8766fe2f.b0c6a"
            ]
        ],
        "l": false
    },
    {
        "id": "73d47dda.061014",
        "type": "function",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "",
        "func": "//set siteIdTv\n\nvar siteIdTv = msg.payload;\n\nString.prototype.sansAccent = function() {\n    var accent = [\n        /[\\300-\\306]/g, /[\\340-\\346]/g, // A, a\n        /[\\310-\\313]/g, /[\\350-\\353]/g, // E, e\n        /[\\314-\\317]/g, /[\\354-\\357]/g, // I, i\n        /[\\322-\\330]/g, /[\\362-\\370]/g, // O, o\n        /[\\331-\\334]/g, /[\\371-\\374]/g, // U, u\n        /[\\321]/g, /[\\361]/g, // N, n\n        /[\\307]/g, /[\\347]/g, // C, c\n    ];\n    var noaccent = ['A','a','E','e','I','i','O','o','U','u','N','n','C','c'];\n         \n    var str = this;\n    for(var i = 0; i < accent.length; i++){\n        str = str.replace(\"ä\", \"ae\");\n        str = str.replace(\"ü\", \"ue\");\n        str = str.replace(\"ö\", \"oe\");        \n        str = str.replace(accent[i], noaccent[i]);\n    }\n    return str;\n};\n\n\nglobal.set(\"siteIdTv\", siteIdTv.sansAccent()); \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 490,
        "y": 165,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "9671c5fb.c0f5e8",
        "type": "inject",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "Set the TV room here !",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "Living room",
        "payloadType": "str",
        "x": 300,
        "y": 165,
        "wires": [
            [
                "73d47dda.061014"
            ]
        ]
    },
    {
        "id": "b1bac6a8.8c5e28",
        "type": "function",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "GET /siteIdTv ",
        "func": "var siteIdTv = global.get(\"siteIdTv\");\n\nif(msg.payload.siteId.toLowerCase().replace(/_\\d+$/,\"\").replace(/_/g,\"\") !== siteIdTv.toLowerCase().replace(/_\\d+$/,\"\").replace(/ /g,\"\")){\n    return null;\n}else{\n    return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 475,
        "y": 441,
        "wires": [
            [
                "bdbee8a5.6520b8"
            ]
        ],
        "l": false
    },
    {
        "id": "82e0514a.d3a35",
        "type": "function",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "GET /siteIdTv ",
        "func": "var siteIdTv = global.get(\"siteIdTv\");\n\nif(msg.payload.siteId.toLowerCase().replace(/_\\d+$/,\"\").replace(/_/g,\"\") !== siteIdTv.toLowerCase().replace(/_\\d+$/,\"\").replace(/ /g,\"\")){\n    return null;\n}else{\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 435,
        "y": 490,
        "wires": [
            [
                "64043405.b895ec"
            ]
        ],
        "l": false
    },
    {
        "id": "341b520f.4f9d6e",
        "type": "comment",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "IMPORTANT Manually set the siteIdTv  IMPORTANT ",
        "info": "It is strongly recommended to set a valid siteId for the TV (siteIdTv), the place where you place your TV. (eg: bedroom, office, living room)\n\nThe siteIdTv's must be an existing room from your installation see PRATGLAD or Aragon application. (e.g PRATGLAD's user interface -> Configure -> no. 3 -> Settings -> Rooms)",
        "x": 380,
        "y": 130,
        "wires": []
    },
    {
        "id": "db34a2db.c4c13",
        "type": "switch",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "Is TV On?",
        "property": "payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "standby",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "active",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 615,
        "y": 441,
        "wires": [
            [],
            [
                "6a1e5f60.3fc43"
            ]
        ],
        "l": false
    },
    {
        "id": "bdbee8a5.6520b8",
        "type": "bravia-api",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "tv": "204aae5a.40fb72",
        "method": "system:1.0:getPowerStatus",
        "payload": "",
        "name": "TV status",
        "x": 555,
        "y": 441,
        "wires": [
            [
                "db34a2db.c4c13"
            ]
        ],
        "l": false
    },
    {
        "id": "64043405.b895ec",
        "type": "bravia-api",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "tv": "204aae5a.40fb72",
        "method": "system:1.0:getPowerStatus",
        "payload": "",
        "name": "TV status",
        "x": 535,
        "y": 490,
        "wires": [
            [
                "4756cd3e.91a3e4"
            ]
        ],
        "l": false
    },
    {
        "id": "4756cd3e.91a3e4",
        "type": "switch",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "Is TV On?",
        "property": "payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "standby",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "active",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 615,
        "y": 490,
        "wires": [
            [],
            [
                "81e98d55.bd463"
            ]
        ],
        "l": false
    },
    {
        "id": "98296177.5eea8",
        "type": "bravia-ircc",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "tv": "204aae5a.40fb72",
        "ircc": "Pause",
        "name": "Pause",
        "x": 530,
        "y": 1263,
        "wires": []
    },
    {
        "id": "2e6f2fe2.f3693",
        "type": "comment",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "IMPORTANT Define the TV Favorites here IMPORTANT ",
        "info": "",
        "x": 385,
        "y": 210,
        "wires": []
    },
    {
        "id": "fd87ba97.85d698",
        "type": "debug",
        "z": "ede0e4a8.c75608",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 825,
        "y": 165,
        "wires": [],
        "l": false
    },
    {
        "id": "7ff82758.a1bf98",
        "type": "catch",
        "z": "ede0e4a8.c75608",
        "name": "",
        "scope": [
            "47a2cbc8.397b54",
            "3f355eac.3c4d62",
            "f132aee9.29ff58",
            "98df55b7.8846",
            "283824eb.6200f4",
            "eab2d7ab.ac4dd8",
            "6ad1ec67.33f874",
            "908e7fbd.62d008",
            "d154cb4b.a6e388",
            "2977b83.e482e48",
            "d5e99277.88637",
            "9549c556.6329f",
            "7be10ed0.2f4d7",
            "9b5ce168.60872",
            "ffab644e.b32bd",
            "f708a811.caa248",
            "efe7c9b7.b46d18",
            "c92dede.27dab1",
            "39f2aa12.6db8a6",
            "c166f5ae.b3d158",
            "261cf9fa.ea3cb6",
            "400b2a00.de02ec",
            "2921b1a.a98f34e",
            "ebfb48c9.b36338",
            "587ce7d8.0f8bb",
            "25b9d7cf.36579",
            "825f29e3.928a98",
            "c57220e2.8fe278"
        ],
        "uncaught": false,
        "x": 725,
        "y": 165,
        "wires": [
            [
                "fd87ba97.85d698"
            ]
        ]
    },
    {
        "id": "10da5726.3a3d39",
        "type": "comment",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "DEBUG Sony Bravia",
        "info": "",
        "x": 755,
        "y": 130,
        "wires": []
    },
    {
        "id": "f083a73f.533df8",
        "type": "bravia-ircc",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "tv": "204aae5a.40fb72",
        "ircc": "Num5",
        "name": "Num 5",
        "x": 890,
        "y": 920,
        "wires": []
    },
    {
        "id": "453c1d4b.85fe64",
        "type": "bravia-ircc",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "tv": "204aae5a.40fb72",
        "ircc": "Num6",
        "name": "Num 6",
        "x": 890,
        "y": 960,
        "wires": []
    },
    {
        "id": "91f33049.07aeb",
        "type": "bravia-ircc",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "tv": "204aae5a.40fb72",
        "ircc": "Num7",
        "name": "Num 7",
        "x": 890,
        "y": 1000,
        "wires": []
    },
    {
        "id": "98f87c98.d57f3",
        "type": "bravia-ircc",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "tv": "204aae5a.40fb72",
        "ircc": "Num8",
        "name": "Num 8",
        "x": 890,
        "y": 1040,
        "wires": []
    },
    {
        "id": "1a3b012.504d0ff",
        "type": "bravia-ircc",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "tv": "204aae5a.40fb72",
        "ircc": "Num9",
        "name": "Num 9",
        "x": 890,
        "y": 1080,
        "wires": []
    },
    {
        "id": "c505fcb8.f7f33",
        "type": "delay",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 795,
        "y": 760,
        "wires": [
            [
                "ad4fb110.b24b1",
                "ded851d4.780cb"
            ]
        ],
        "l": false
    },
    {
        "id": "6299e74d.1cf918",
        "type": "delay",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 795,
        "y": 800,
        "wires": [
            [
                "77a56aaa.d528a4",
                "ded851d4.780cb"
            ]
        ],
        "l": false
    },
    {
        "id": "7acc941.5955f6c",
        "type": "delay",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 795,
        "y": 840,
        "wires": [
            [
                "a9494f49.ba033",
                "ded851d4.780cb"
            ]
        ],
        "l": false
    },
    {
        "id": "2701a885.426678",
        "type": "delay",
        "z": "ede0e4a8.c75608",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 795,
        "y": 880,
        "wires": [
            [
                "ded851d4.780cb"
            ]
        ],
        "l": false
    },
    {
        "id": "b3d35727.487a18",
        "type": "delay",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 795,
        "y": 920,
        "wires": [
            [
                "f083a73f.533df8",
                "ded851d4.780cb"
            ]
        ],
        "l": false
    },
    {
        "id": "a50fb464.14f348",
        "type": "delay",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 795,
        "y": 960,
        "wires": [
            [
                "453c1d4b.85fe64",
                "ded851d4.780cb"
            ]
        ],
        "l": false
    },
    {
        "id": "836d392b.e03518",
        "type": "delay",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 795,
        "y": 1000,
        "wires": [
            [
                "91f33049.07aeb",
                "ded851d4.780cb"
            ]
        ],
        "l": false
    },
    {
        "id": "e703bf82.db3ff",
        "type": "delay",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 795,
        "y": 1040,
        "wires": [
            [
                "98f87c98.d57f3",
                "ded851d4.780cb"
            ]
        ],
        "l": false
    },
    {
        "id": "51fa5a6b.d7e334",
        "type": "delay",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 795,
        "y": 1080,
        "wires": [
            [
                "1a3b012.504d0ff",
                "ded851d4.780cb"
            ]
        ],
        "l": false
    },
    {
        "id": "f2699a89.2dde78",
        "type": "function",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "Filter",
        "func": "// to filter which type of media ; channel or video?\n\nvar setScreen = flow.get(\"setScreen\");\n\n    if(setScreen === \"channel\"){\n        return [msg, null];\n    }else{\n        return [null, msg];\n    }",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 550,
        "y": 1330,
        "wires": [
            [
                "9ff6d55.cff9128"
            ],
            [
                "16e2bea6.a72f71"
            ]
        ]
    },
    {
        "id": "9ff6d55.cff9128",
        "type": "bravia-ircc",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "tv": "204aae5a.40fb72",
        "ircc": "ChannelUp",
        "name": "Channel Up",
        "x": 710,
        "y": 1310,
        "wires": []
    },
    {
        "id": "9922fac5.cfbea8",
        "type": "bravia-ircc",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "tv": "204aae5a.40fb72",
        "ircc": "ChannelDown",
        "name": "Channel Down",
        "x": 720,
        "y": 1390,
        "wires": []
    },
    {
        "id": "bbddba56.44ed58",
        "type": "function",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "Filter",
        "func": "// to filter which type of media ; channel or video?\n\nvar setScreen = flow.get(\"setScreen\");\n\n    if(setScreen === \"channel\"){\n        return [msg, null];\n    }else{\n        return [null, msg];\n    }",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 550,
        "y": 1410,
        "wires": [
            [
                "9922fac5.cfbea8"
            ],
            [
                "885bb24d.5e026"
            ]
        ]
    },
    {
        "id": "8f2e835c.1476b",
        "type": "bravia-ircc",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "tv": "204aae5a.40fb72",
        "ircc": "Confirm",
        "name": "Confirm",
        "x": 1090,
        "y": 885,
        "wires": []
    },
    {
        "id": "ded851d4.780cb",
        "type": "delay",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 990,
        "y": 885,
        "wires": [
            [
                "8f2e835c.1476b"
            ]
        ],
        "l": false
    },
    {
        "id": "ae55ee0b.38d97",
        "type": "delay",
        "z": "ede0e4a8.c75608",
        "g": "fea592fb.da2be",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 735,
        "y": 640,
        "wires": [
            [
                "dca37f4c.c98a7"
            ]
        ],
        "l": false
    },
    {
        "id": "6d90e46d.f7da7c",
        "type": "ui_form",
        "z": "ede0e4a8.c75608",
        "name": "Channel's favorites",
        "label": "",
        "group": "3dc4f1ef.49c0ee",
        "order": 0,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Add a channel name",
                "value": "ChName",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Add a channel number",
                "value": "ChNum",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "ChName": "",
            "ChNum": ""
        },
        "payload": "",
        "submit": "Add",
        "cancel": "Cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "x": 195,
        "y": 1780,
        "wires": [
            [
                "1193022d.cb11ee"
            ]
        ],
        "l": false
    },
    {
        "id": "970d57e.4f738a8",
        "type": "debug",
        "z": "ede0e4a8.c75608",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 495,
        "y": 1780,
        "wires": [],
        "l": false
    },
    {
        "id": "e8d86d5.cc7dd9",
        "type": "ui_toast",
        "z": "ede0e4a8.c75608",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": true,
        "topic": "",
        "name": "",
        "x": 315,
        "y": 1780,
        "wires": [
            [
                "7ed6032.dfe91fc"
            ]
        ],
        "l": false
    },
    {
        "id": "1193022d.cb11ee",
        "type": "template",
        "z": "ede0e4a8.c75608",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<div ng-bind-html=\"msg.payload\">\n  <p>Are you sure ?</p>\n  <p>Assign {{payload.ChName}} to channel {{payload.ChNum}}</p>\n</div>",
        "output": "str",
        "x": 255,
        "y": 1780,
        "wires": [
            [
                "e8d86d5.cc7dd9"
            ]
        ],
        "l": false
    },
    {
        "id": "7ed6032.dfe91fc",
        "type": "switch",
        "z": "ede0e4a8.c75608",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 375,
        "y": 1780,
        "wires": [
            [
                "970d57e.4f738a8"
            ]
        ],
        "l": false
    },
    {
        "id": "6ea95f55.5ee86",
        "type": "mqtt-broker",
        "z": "ede0e4a8.c75608",
        "name": "-",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "info": "-"
    },
    {
        "id": "204aae5a.40fb72",
        "type": "bravia-tv",
        "name": "SONY BRAVIA TV",
        "host": "192.168.1.55",
        "port": "80",
        "psk": "1111",
        "timeout": "5000"
    },
    {
        "id": "3dc4f1ef.49c0ee",
        "type": "ui_group",
        "name": "Assigned Channel",
        "tab": "ede12bab.17c328",
        "order": 1,
        "disp": true,
        "width": "11",
        "collapse": false
    },
    {
        "id": "ede12bab.17c328",
        "type": "ui_tab",
        "name": "SONY TV BRAVIA",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]
