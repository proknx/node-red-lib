[
    {
        "id": "411bf1b5.ed387",
        "type": "tab",
        "label": "SONY BRAVIA TV",
        "disabled": false,
        "info": ""
    },
    {
        "id": "7d2c9805.210088",
        "type": "group",
        "z": "411bf1b5.ed387",
        "name": "CUSTOM MEDIA CONTROL FOR SONY BRAVIA TV",
        "style": {
            "label": true
        },
        "nodes": [
            "1df526be.25c9f9",
            "af49979f.70e8f8",
            "7674098a.1b4fa8",
            "f870ee42.a1c8b",
            "7df47de8.63c5a4",
            "9fd0119.e9a3bf",
            "98b855d9.c96de8",
            "e86504f2.57cc58",
            "ba2d5d96.263c7",
            "3177ecc7.4dc164",
            "49fadd85.f65804",
            "3d9a268a.f0bd0a",
            "fcfc4b11.3c17f8",
            "c065a002.46f48",
            "ead93dac.96b84",
            "30e83835.7879b8",
            "953f749e.86f8a8",
            "26894507.962d7a",
            "38205517.f45a5a",
            "97562114.67269",
            "b3734238.575",
            "c20bc3cc.9b59f",
            "5d2c4c59.4cbdf4",
            "a586ca75.9c8df8",
            "eb770827.d06dd8",
            "579ef833.869b48",
            "25678333.f6f2fc",
            "ce225f79.e817b",
            "aa846483.d91648",
            "b5a5b5a2.51d288",
            "37a9be51.d917d2",
            "7626dfe8.df034",
            "8dee3799.34ffb8",
            "58d41d46.e03dc4",
            "936c688d.18e548",
            "6f7319b.974c1e8",
            "993aca19.aa78b8",
            "431f85ba.61446c",
            "9a1f9280.db40b",
            "3fc32fce.46e57",
            "39b08539.9f249a",
            "8b7a371a.87c378",
            "fbed8092.52ea6",
            "bcc0b598.f1b408",
            "e5007d44.75d76",
            "f6a94488.96f338",
            "cca7274f.f71098",
            "8e4fb368.f54b8",
            "e2abc940.a44c98",
            "4d769c43.d829a4",
            "d3f142f8.848ec",
            "cdd19aa6.de4538",
            "1b73040.2e174fc",
            "dfc8ac27.7cf86",
            "7cabe546.2b80bc",
            "775ce1a9.0895e",
            "7c4230ef.ee219",
            "c3d2ef91.d4a39",
            "9c797648.377408",
            "7bfa5c49.27da74",
            "998cbafc.863998",
            "be863d4.32008c",
            "f9d20cd7.73678",
            "901976c4.b6a848",
            "2859a883.fd72f8",
            "f901aa82.895028",
            "15c2758a.1e7bba",
            "1b390bf0.da0bf4",
            "45abe297.5b8b2c",
            "c91f8b2f.517a88",
            "a96e7c4c.0b38b",
            "970e8bef.678aa8",
            "46128af1.9eb1f4",
            "e7f8366d.e0c798",
            "d52435a.640bcc8",
            "c1b86056.6308",
            "b1ae94fa.d7f4c8",
            "cc52cd78.bbb11",
            "c8ed3d6a.59c7",
            "eba711de.46203",
            "15f1ec6e.61b094",
            "aab32aaa.209d38",
            "22f17c84.4566d4"
        ],
        "x": 149,
        "y": 34,
        "w": 826,
        "h": 1702
    },
    {
        "id": "1df526be.25c9f9",
        "type": "http in",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "name": "GET /tvfavorites",
        "url": "/tvfavorites",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 285,
        "y": 1695,
        "wires": [
            [
                "af49979f.70e8f8"
            ]
        ]
    },
    {
        "id": "af49979f.70e8f8",
        "type": "function",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "name": "get(\"tvFavorites\");",
        "func": "var tvFavorites = global.get(\"tvFavorites\");\nmsg.payload = {\"tvfavorites\": \"false\"};\nif(tvFavorites !== undefined){\n    msg.payload = JSON.stringify(tvFavorites);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 420,
        "y": 1695,
        "wires": [
            [
                "e2abc940.a44c98"
            ]
        ],
        "l": false
    },
    {
        "id": "7674098a.1b4fa8",
        "type": "mqtt in",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "name": "next",
        "topic": "hermes/intent/ProKNX:next",
        "qos": "2",
        "datatype": "auto",
        "broker": "3e78409e.2eaa2",
        "x": 250,
        "y": 1440,
        "wires": [
            [
                "98b855d9.c96de8"
            ]
        ]
    },
    {
        "id": "f870ee42.a1c8b",
        "type": "mqtt in",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "name": "previous",
        "topic": "hermes/intent/ProKNX:previous",
        "qos": "2",
        "datatype": "auto",
        "broker": "3e78409e.2eaa2",
        "x": 260,
        "y": 1480,
        "wires": [
            [
                "98b855d9.c96de8"
            ]
        ]
    },
    {
        "id": "7df47de8.63c5a4",
        "type": "mqtt in",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "name": "hotword off",
        "topic": "hermes/hotword/toggleOn",
        "qos": "2",
        "datatype": "auto",
        "broker": "3e78409e.2eaa2",
        "x": 250,
        "y": 490,
        "wires": [
            [
                "3177ecc7.4dc164"
            ]
        ]
    },
    {
        "id": "9fd0119.e9a3bf",
        "type": "mqtt in",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "name": "hotword on",
        "topic": "hermes/hotword/default/detected",
        "qos": "2",
        "datatype": "auto",
        "broker": "3e78409e.2eaa2",
        "x": 250,
        "y": 441,
        "wires": [
            [
                "e86504f2.57cc58"
            ]
        ]
    },
    {
        "id": "98b855d9.c96de8",
        "type": "function",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "name": "Filter",
        "func": "// Sample code : control of TV set\n\nfunction findObjectByKey(array, key, value) {\n\titems = [];\n\tvar cpt = 0;\n\tfor (var i = 0; i < array.length; i++) {\n\t\tif (array[i][key] === value) {\n\t\t\titems[cpt] = array[i];\n\t\t\tcpt++;\n\t\t}\n\t}\n\tif (items[0] !== undefined) {\n\t\treturn items;\n\t} else {\n\t\treturn null;\n\t}\n}\n\nvar lang = global.get(\"msgLang\");\nvar defaultSpeaker = global.get(\"defaultSpeaker\");\nvar tvFavorites = global.get(\"tvFavorites\");\nvar siteIdTv = global.get(\"siteIdTv\");\nif(defaultSpeaker === undefined){\n    defaultSpeaker = \"speaker\";\n}\nmsg.cmd={};\nmsg.payload = JSON.parse(msg.payload);\nmsg.cmd.siteId = msg.payload.siteId.replace(/_\\d+$/, \"\").trim();\nvar doAllRooms = false;\nvar intent = msg.payload.intent.intentName;\nif (intent === undefined) \n    return null;\n\nif(msg.payload.input.toLowerCase().includes(\"snips\") === true){\n    //node.warn(\"send to snips: includes 'snips'\");\n    return null;   \n}\n\nvar rawRoom = findObjectByKey(msg.payload.slots, 'slotName', 'room');\nvar rawFavorite = findObjectByKey(msg.payload.slots, 'entity', 'FavoriteType');\nvar rawSpeaker = findObjectByKey(msg.payload.slots, 'entity', 'SpeakerType');\n\n//node.warn(msg.payload);\n//node.warn(\"rawRoom: \"+ JSON.stringify(rawRoom) );\nvar theRoom = msg.payload.siteId;\n\nif (rawRoom !== null) {\n\tmsg.cmd.room = [];\n\tfor (var i = 0; i < rawRoom.length; i++) {\n\t\tmsg.cmd.room[i] = rawRoom[i].value.value.toLowerCase();\n\t\t//node.warn(\"msg.cmd.room[i]: \"+msg.cmd.room[i] + \"   msg.payload.siteId: \"+msg.payload.siteId);\n\t\tif (msg.cmd.room[i] === \"here\" || msg.cmd.room[i] === \"hier\" || msg.cmd.room[i] === \"ici\") {\n\t\t\ttheRoom = msg.payload.siteId;\n\t\t} else {\n    \t\tif (msg.cmd.room[i] === \"all\" || msg.cmd.room[i] === \"everywhere\" || msg.cmd.room[i] === \"ueberall\" || msg.cmd.room[i] === \"partout\") {\n    \t\t    doAllRooms = true;\n    \t\t} else {\n    \t\t    theRoom = msg.cmd.room[i].replace(/ /g, \"_\");\n    \t\t}\n\t\t}\n\t}\n}\n\nif (rawSpeaker !== null) {\n    //node.warn(\"rawSpeaker: \"+JSON.stringify(rawSpeaker));\n    msg.payload.speaker = rawSpeaker[0].value.value.trim().toLowerCase();\n} else {\n    msg.payload.speaker = defaultSpeaker.trim().toLowerCase();\n}\n\nmsg.payload.siteId = theRoom;\n\nif(msg.payload.siteId.toLowerCase().replace(/_\\d+$/,\"\").replace(/_/g,\"\") !== siteIdTv.toLowerCase().replace(/_\\d+$/,\"\").replace(/ /g,\"\")){\n    return null;\n}\n\nif (rawFavorite !== null) {\n    //node.warn(\"rawFavorite: \"+JSON.stringify(rawFavorite));\n    msg.payload.favorite = rawFavorite[0].value.value.trim().toLowerCase();\n    node.warn(\"msg.payload.favorite: \"+msg.payload.favorite);\n}\n\n\n//node.warn(\"msg.payload.speaker: \"+msg.payload.speaker);\n    \nif (msg.payload.intent.confidenceScore < 0.6){\n    return null;\n}\n\n//node.warn(\"msg.payload.speaker = \" + msg.payload.speaker);\n\nif(msg.payload.speaker !== undefined){\n    if(msg.payload.speaker === \"tv\") {\n        \n        global.set(\"defaultSpeaker\", \"tv\");\n        //node.warn(\"intent \" + intent);\n        switch (intent) {\n            case \"ProKNX:next\": return [msg, null, null, null, null];\n            case \"ProKNX:previous\": return [null, msg, null, null, null];\n        }\n        \n        if (msg.payload.asrTokens[0].length <= 1){\n            return null;\n        }else{\n            switch(intent){\n            case \"ProKNX:increaseVolume\": return [null, null, msg, null, null];\n            case \"ProKNX:decreaseVolume\": return [null, null, null, msg, null];\n            case \"ProKNX:setVolume\": flow.set(\"rawLoudness\", findObjectByKey(msg.payload.slots, 'slotName', 'loudness')); flow.set(\"rawMin\", findObjectByKey(msg.payload.slots, 'slotName', 'min'));\n                                    flow.set(\"rawMax\", findObjectByKey(msg.payload.slots, 'slotName', 'max')); return [null, null, null, null, msg];\n            }\n        }\n    }\n}",
        "outputs": 5,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 399,
        "y": 1520,
        "wires": [
            [
                "eb770827.d06dd8",
                "38205517.f45a5a"
            ],
            [
                "579ef833.869b48",
                "97562114.67269"
            ],
            [
                "fbed8092.52ea6"
            ],
            [
                "bcc0b598.f1b408"
            ],
            [
                "f6a94488.96f338"
            ]
        ],
        "outputLabels": [
            "pause",
            "play",
            "next",
            "previous",
            "incvol"
        ]
    },
    {
        "id": "e86504f2.57cc58",
        "type": "json",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 365,
        "y": 441,
        "wires": [
            [
                "ba2d5d96.263c7"
            ]
        ],
        "l": false
    },
    {
        "id": "ba2d5d96.263c7",
        "type": "delay",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 414,
        "y": 441,
        "wires": [
            [
                "46128af1.9eb1f4"
            ]
        ],
        "l": false
    },
    {
        "id": "3177ecc7.4dc164",
        "type": "json",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 365,
        "y": 490,
        "wires": [
            [
                "e7f8366d.e0c798"
            ]
        ],
        "l": false
    },
    {
        "id": "49fadd85.f65804",
        "type": "comment",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "name": "Info - readme",
        "info": "The following nodes let you implement custom media control for Sony Bravia TV,\n\nIMPORTANT: To avoid your custom code is removed on flow update it is recommended to copy paste the nodes below to a new Tab\n\nTo apply this function it to your tv, you need to change the ip address of the tv\n\nTo change, go to configurations nodes and find SONY BRAVIA TV node and double click it\nChange the host to your tv's ip address and type in the PSK and save\n",
        "x": 245,
        "y": 75,
        "wires": []
    },
    {
        "id": "3d9a268a.f0bd0a",
        "type": "inject",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "name": "French favorites (samples)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "20",
        "topic": "",
        "payload": "[\"TF1\",\"France 2\",\"France 3\",\"Canal plus\",\"France 5\",\"Arte\",\"Play Store\",\"YouTube\",\"Youtube Music\",\"Recorded Title List\",\"Media Player\",\"TV\",\"Prime Video\",\"Apple TV\",\"Play Games\",\"Play Movies\",\"Netflix\",\"Bonus Offer\",\"Sony Select\",\"Timers\",\"Internet Browser\",\"Disney+\",\"Molotov\",\"ProKNX\"]",
        "payloadType": "json",
        "x": 320,
        "y": 250,
        "wires": [
            [
                "c065a002.46f48"
            ]
        ]
    },
    {
        "id": "fcfc4b11.3c17f8",
        "type": "inject",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "name": "German favorites (samples)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "20",
        "topic": "",
        "payload": "[\"Bayerischer Rundfunk\",\"Das Erste\",\"Rundfunk Berlin-Brandenburg\",\"tset day eff\",\"Sky Deutschland\",\"Arte\",\"Play Store\",\"YouTube\",\"Youtube Music\",\"Recorded Title List\",\"Media Player\",\"TV\",\"Prime Video\",\"Apple TV\",\"Play Games\",\"Play Movies\",\"Netflix\",\"Bonus Offer\",\"Sony Select\",\"Timers\",\"Internet Browser\",\"Disney+\",\"Molotov\"]",
        "payloadType": "json",
        "x": 320,
        "y": 290,
        "wires": [
            [
                "ead93dac.96b84"
            ]
        ]
    },
    {
        "id": "c065a002.46f48",
        "type": "function",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "name": "lang?",
        "func": "var lang = global.get(\"msgLang\");\nif(lang.toLowerCase().includes(\"fr\")){\n    return msg;\n}\nelse {\n    //do nothing\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 560,
        "y": 250,
        "wires": [
            [
                "30e83835.7879b8"
            ]
        ]
    },
    {
        "id": "ead93dac.96b84",
        "type": "function",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "name": "lang?",
        "func": "var lang = global.get(\"msgLang\");\nif(lang.toLowerCase().includes(\"de\")){\n    return msg;\n}\nelse {\n    //do nothing\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 560,
        "y": 290,
        "wires": [
            [
                "30e83835.7879b8"
            ]
        ]
    },
    {
        "id": "30e83835.7879b8",
        "type": "change",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "name": "Save",
        "rules": [
            {
                "t": "set",
                "p": "tvFavorites",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "useTvFavorites",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 290,
        "wires": [
            []
        ]
    },
    {
        "id": "953f749e.86f8a8",
        "type": "inject",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "name": "English favorites (samples)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "20",
        "topic": "",
        "payload": "[\"Bee bee cee World News\",\"France twenty four\",\"Cee enn bee cee\",\"Sky News\",\"Play Store\",\"YouTube\",\"Youtube Music\",\"Recorded Title List\",\"Media Player\",\"TV\",\"Prime Video\",\"Apple TV\",\"Play Games\",\"Play Movies\",\"Netflix\",\"Bonus Offer\",\"Sony Select\",\"Timers\",\"Internet Browser\",\"Disney Plus\",\"Molotov\"]",
        "payloadType": "json",
        "x": 320,
        "y": 330,
        "wires": [
            [
                "26894507.962d7a"
            ]
        ]
    },
    {
        "id": "26894507.962d7a",
        "type": "function",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "name": "lang?",
        "func": "var lang = global.get(\"msgLang\");\nif(lang.toLowerCase().includes(\"en\")){\n    return msg;\n}\nelse {\n    //do nothing\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 560,
        "y": 330,
        "wires": [
            [
                "30e83835.7879b8"
            ]
        ]
    },
    {
        "id": "38205517.f45a5a",
        "type": "debug",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "name": "HANDLE NEXT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 624,
        "y": 1380,
        "wires": [],
        "l": false
    },
    {
        "id": "97562114.67269",
        "type": "debug",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "name": "HANDLE PREV",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 644,
        "y": 1440,
        "wires": [],
        "l": false
    },
    {
        "id": "b3734238.575",
        "type": "mqtt in",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "name": "incVol",
        "topic": "hermes/intent/ProKNX:increaseVolume",
        "qos": "2",
        "datatype": "auto",
        "broker": "3e78409e.2eaa2",
        "x": 250,
        "y": 1520,
        "wires": [
            [
                "98b855d9.c96de8"
            ]
        ]
    },
    {
        "id": "c20bc3cc.9b59f",
        "type": "mqtt in",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "name": "decVol",
        "topic": "hermes/intent/ProKNX:decreaseVolume",
        "qos": "2",
        "datatype": "auto",
        "broker": "3e78409e.2eaa2",
        "x": 250,
        "y": 1560,
        "wires": [
            [
                "98b855d9.c96de8"
            ]
        ]
    },
    {
        "id": "5d2c4c59.4cbdf4",
        "type": "mqtt in",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "name": "setVol",
        "topic": "hermes/intent/ProKNX:setVolume",
        "qos": "2",
        "datatype": "auto",
        "broker": "3e78409e.2eaa2",
        "x": 250,
        "y": 1600,
        "wires": [
            [
                "98b855d9.c96de8"
            ]
        ]
    },
    {
        "id": "a586ca75.9c8df8",
        "type": "comment",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "name": "TV or Speaker?",
        "info": "The target media is available in msg.payload.speaker\nThe value of msg.payload.speaker is either \"tv\" or \"speaker\".\n\nUse the following code snippet to filter out tv commands:\nif(msg.payload.speaker === \"tv\") {\n    // tv commands only\n}\n",
        "x": 407,
        "y": 1420,
        "wires": []
    },
    {
        "id": "eb770827.d06dd8",
        "type": "bravia-ircc",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "tv": "204aae5a.40fb72",
        "ircc": "Next",
        "name": "Next",
        "x": 539,
        "y": 1380,
        "wires": []
    },
    {
        "id": "579ef833.869b48",
        "type": "bravia-ircc",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "tv": "204aae5a.40fb72",
        "ircc": "Prev",
        "name": "Previous",
        "x": 550,
        "y": 1440.6000061035156,
        "wires": []
    },
    {
        "id": "25678333.f6f2fc",
        "type": "mqtt in",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "name": "play",
        "topic": "hermes/intent/ProKNX:play",
        "qos": "2",
        "datatype": "auto",
        "broker": "3e78409e.2eaa2",
        "x": 239,
        "y": 640,
        "wires": [
            [
                "ce225f79.e817b"
            ]
        ]
    },
    {
        "id": "ce225f79.e817b",
        "type": "function",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "name": "Play",
        "func": "\nfunction findObjectByKey(array, key, value) {\n\titems = [];\n\tvar cpt = 0;\n\tfor (var i = 0; i < array.length; i++) {\n\t\tif (array[i][key] === value) {\n\t\t\titems[cpt] = array[i];\n\t\t\tcpt++;\n\t\t}\n\t}\n\tif (items[0] !== undefined) {\n\t\treturn items;\n\t} else {\n\t\treturn null;\n\t}\n}\n\nvar lang = global.get(\"msgLang\");\nvar defaultSpeaker = global.get(\"defaultSpeaker\");\nvar tvFavorites = global.get(\"tvFavorites\");\nvar siteIdTv = global.get(\"siteIdTv\");\nif(defaultSpeaker === undefined){\n    defaultSpeaker = \"speaker\";\n}\nmsg.cmd={};\nmsg.payload = JSON.parse(msg.payload);\nmsg.cmd.siteId = msg.payload.siteId.replace(/_\\d+$/, \"\").trim();\nvar doAllRooms = false;\nvar intent = msg.payload.intent.intentName;\nif (intent === undefined) \n    return null;\n\nvar rawRoom = findObjectByKey(msg.payload.slots, 'slotName', 'room');\nvar rawFavorite = findObjectByKey(msg.payload.slots, 'entity', 'FavoriteType');\nvar rawSpeaker = findObjectByKey(msg.payload.slots, 'entity', 'SpeakerType');\n\n//node.warn(msg.payload);\n//node.warn(\"rawRoom: \"+ JSON.stringify(rawRoom) );\nvar theRoom = msg.payload.siteId;\n\nif (rawRoom !== null) {\n\tmsg.cmd.room = [];\n\tfor (var i = 0; i < rawRoom.length; i++) {\n\t\tmsg.cmd.room[i] = rawRoom[i].value.value.toLowerCase();\n\t\t//node.warn(\"msg.cmd.room[i]: \"+msg.cmd.room[i] + \"   msg.payload.siteId: \"+msg.payload.siteId);\n\t\tif (msg.cmd.room[i] === \"here\" || msg.cmd.room[i] === \"hier\" || msg.cmd.room[i] === \"ici\") {\n\t\t\ttheRoom = msg.payload.siteId;\n\t\t} else {\n    \t\tif (msg.cmd.room[i] === \"all\" || msg.cmd.room[i] === \"everywhere\" || msg.cmd.room[i] === \"ueberall\" || msg.cmd.room[i] === \"partout\") {\n    \t\t    doAllRooms = true;\n    \t\t} else {\n    \t\t    theRoom = msg.cmd.room[i].replace(/ /g, \"_\");\n    \t\t}\n\t\t}\n\t}\n}\n\nif (rawSpeaker !== null) {\n    //node.warn(\"rawSpeaker: \"+JSON.stringify(rawSpeaker));\n    msg.payload.speaker = rawSpeaker[0].value.value.trim().toLowerCase();\n} else {\n    msg.payload.speaker = defaultSpeaker.trim().toLowerCase();\n}\n\nmsg.payload.siteId = theRoom;\n\nif(msg.payload.siteId.toLowerCase().replace(/_\\d+$/,\"\").replace(/_/g,\"\") !== siteIdTv.toLowerCase().replace(/_\\d+$/,\"\").replace(/ /g,\"\")){\n    return null;\n}\n\n//node.warn(\" Will use msg.payload.siteId: \"+msg.payload.siteId);\n//global.set(\"siteIdTv\", msg.payload.siteId);\n\nif (rawFavorite !== null) {\n    //node.warn(\"rawFavorite: \"+JSON.stringify(rawFavorite));\n    msg.payload.favorite = rawFavorite[0].value.value.trim().toLowerCase();\n\n    global.set(\"msg.payload.favorite\", msg.payload.favorite);\n    \n    var found = tvFavorites.find(\n            function(str) { return str.toLowerCase() == msg.payload.favorite.toLowerCase(); }\n        );\n        \n    \n    if (found !== undefined) {\n        \n        global.set(\"defaultSpeaker\", \"tv\");\n        return [null, msg];\n        \n    }\n}\n\n//var msgFavorite = msg;\nvar sonosPlaylists = global.get(\"sonosPlaylists\");\nvar sonosFavorites = global.get(\"sonosFavorites\");  \n\nif(msg.payload.favorite !== undefined){\n\n    var searchItem = msg.payload.favorite;\n    //node.warn(\"searchItem : \"+searchItem);\n    \n    var found1 = sonosPlaylists.find(\n        function(str) { return str.toLowerCase() == searchItem.toLowerCase(); }\n        );\n    \n    var found2 = sonosFavorites.find(\n            function(str) { return str.toLowerCase() == searchItem.toLowerCase(); }\n        );\n    \n    if(found1 !== undefined || found2 !== undefined){\n        return null;\n    }\n}\n\n//node.warn(\"msg.payload.speaker: \"+msg.payload.speaker);\n    \nif (msg.payload.intent.confidenceScore < 0.6 || msg.payload.asrTokens!== undefined && msg.payload.asrTokens[0].length <= 1){\n    return null;\n}\n\nif(msg.payload.speaker === \"tv\"){\n    \n    global.set(\"defaultSpeaker\", \"tv\");\n    return [msg, null];\n    \n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 369,
        "y": 640,
        "wires": [
            [
                "c3d2ef91.d4a39",
                "993aca19.aa78b8"
            ],
            [
                "c3d2ef91.d4a39",
                "c91f8b2f.517a88"
            ]
        ]
    },
    {
        "id": "aa846483.d91648",
        "type": "mqtt in",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "name": "pause",
        "topic": "hermes/intent/ProKNX:pause",
        "qos": "2",
        "datatype": "auto",
        "broker": "3e78409e.2eaa2",
        "x": 239,
        "y": 1240,
        "wires": [
            [
                "7626dfe8.df034"
            ]
        ]
    },
    {
        "id": "b5a5b5a2.51d288",
        "type": "debug",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "name": "HANDLE OFF",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 655,
        "y": 1220,
        "wires": [],
        "l": false
    },
    {
        "id": "37a9be51.d917d2",
        "type": "mqtt in",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "name": "hermes/asr/textCaptured",
        "topic": "hermes/asr/textCaptured",
        "qos": "2",
        "datatype": "auto",
        "broker": "3e78409e.2eaa2",
        "x": 350,
        "y": 1120,
        "wires": [
            [
                "8dee3799.34ffb8"
            ]
        ]
    },
    {
        "id": "7626dfe8.df034",
        "type": "function",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "name": "Pause",
        "func": "\nfunction findObjectByKey(array, key, value) {\n\titems = [];\n\tvar cpt = 0;\n\tfor (var i = 0; i < array.length; i++) {\n\t\tif (array[i][key] === value) {\n\t\t\titems[cpt] = array[i];\n\t\t\tcpt++;\n\t\t}\n\t}\n\tif (items[0] !== undefined) {\n\t\treturn items;\n\t} else {\n\t\treturn null;\n\t}\n}\n\nvar lang = global.get(\"msgLang\");\nvar defaultSpeaker = global.get(\"defaultSpeaker\");\nvar tvFavorites = global.get(\"tvFavorites\");\nvar siteIdTv = global.get(\"siteIdTv\");\nif(defaultSpeaker === undefined){\n    defaultSpeaker = \"speaker\";\n}\nmsg.cmd={};\nmsg.payload = JSON.parse(msg.payload);\nmsg.cmd.siteId = msg.payload.siteId.replace(/_\\d+$/, \"\").trim();\nvar doAllRooms = false;\nvar intent = msg.payload.intent.intentName;\nif (intent === undefined) \n    return null;\n\nvar rawRoom = findObjectByKey(msg.payload.slots, 'slotName', 'room');\nvar rawFavorite = findObjectByKey(msg.payload.slots, 'entity', 'FavoriteType');\nvar rawSpeaker = findObjectByKey(msg.payload.slots, 'entity', 'SpeakerType');\n\n//node.warn(msg.payload);\n//node.warn(\"rawRoom: \"+ JSON.stringify(rawRoom) );\nvar theRoom = msg.payload.siteId;\n\nif (rawRoom !== null) {\n\tmsg.cmd.room = [];\n\tfor (var i = 0; i < rawRoom.length; i++) {\n\t\tmsg.cmd.room[i] = rawRoom[i].value.value.toLowerCase();\n\t\t//node.warn(\"msg.cmd.room[i]: \"+msg.cmd.room[i] + \"   msg.payload.siteId: \"+msg.payload.siteId);\n\t\tif (msg.cmd.room[i] === \"here\" || msg.cmd.room[i] === \"hier\" || msg.cmd.room[i] === \"ici\") {\n\t\t\ttheRoom = msg.payload.siteId;\n\t\t} else {\n    \t\tif (msg.cmd.room[i] === \"all\" || msg.cmd.room[i] === \"everywhere\" || msg.cmd.room[i] === \"ueberall\" || msg.cmd.room[i] === \"partout\") {\n    \t\t    doAllRooms = true;\n    \t\t} else {\n    \t\t    theRoom = msg.cmd.room[i].replace(/ /g, \"_\");\n    \t\t}\n\t\t}\n\t}\n}\n\nif (rawSpeaker !== null) {\n    //node.warn(\"rawSpeaker: \"+JSON.stringify(rawSpeaker));\n    msg.payload.speaker = rawSpeaker[0].value.value.trim().toLowerCase();\n} else {\n    msg.payload.speaker = defaultSpeaker.trim().toLowerCase();\n}\n\nmsg.payload.siteId = theRoom;\n\nif(msg.payload.siteId.toLowerCase().replace(/_\\d+$/,\"\").replace(/_/g,\"\") !== siteIdTv.toLowerCase().replace(/_\\d+$/,\"\").replace(/ /g,\"\")){\n    return null;\n}\n\n//node.warn(\" Will use msg.payload.siteId: \"+msg.payload.siteId);\n//global.set(\"siteIdTv\", msg.payload.siteId);\n\nif (rawFavorite !== null) {\n    //node.warn(\"rawFavorite: \"+JSON.stringify(rawFavorite));\n    msg.payload.favorite = rawFavorite[0].value.value.trim().toLowerCase();\n}\n\n//var msgFavorite = msg;\nvar sonosPlaylists = global.get(\"sonosPlaylists\");\nvar sonosFavorites = global.get(\"sonosFavorites\");  \n\nif(msg.payload.favorite !== undefined){\n\n    var searchItem = msg.payload.favorite;\n    //node.warn(\"searchItem : \"+searchItem);\n    \n    var found1 = sonosPlaylists.find(\n        function(str) { return str.toLowerCase() == searchItem.toLowerCase(); }\n        );\n    \n    var found2 = sonosFavorites.find(\n            function(str) { return str.toLowerCase() == searchItem.toLowerCase(); }\n        );\n    \n    if(found1 !== undefined || found2 !== undefined){\n        return null;\n    }\n}\n\n//node.warn(\"msg.payload.speaker: \"+msg.payload.speaker);\n    \nif (msg.payload.intent.confidenceScore < 0.6 || msg.payload.asrTokens!== undefined && msg.payload.asrTokens[0].length <= 1){\n    return null;\n}\n\nvar messageTv = flow.get(\"messageTv\");\n\nif(msg.payload.speaker === \"tv\" ){\n    \n    global.set(\"defaultSpeaker\", \"tv\");\n    \n    if(messageTv === \"off\"){\n        return [null, msg];\n    }else{\n        return [msg, null];\n    }\n\n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 379,
        "y": 1240,
        "wires": [
            [
                "e5007d44.75d76"
            ],
            [
                "15f1ec6e.61b094",
                "eba711de.46203"
            ]
        ]
    },
    {
        "id": "8dee3799.34ffb8",
        "type": "function",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "name": "Filter",
        "func": "msg.payload = JSON.parse(msg.payload);\nmsg.cmd = {};\nmsg.cmd.lang = global.get(\"msgLang\");\n\nif(msg.cmd.lang === \"de\"){\n    \n    if(msg.payload.text.includes(\"pause\")){\n            \n            flow.set(\"messageTv\", \"off\");\n    }else{\n        flow.set(\"messageTv\", \"on\");\n    }\n        \n    \n} else if(msg.cmd.lang === \"fr\"){\n    \n    if(msg.payload.text.includes(\"pause\")){\n            \n            flow.set(\"messageTv\", \"off\");\n            \n    }else{\n        flow.set(\"messageTv\", \"on\");\n    }\n    \n}else{\n    \n    if(msg.payload.text.includes(\"pause\")){\n            \n        flow.set(\"messageTv\", \"off\");\n            \n    }else{\n        flow.set(\"messageTv\", \"on\");\n    }\n    \n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 541,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "58d41d46.e03dc4",
        "type": "bravia-api",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "tv": "204aae5a.40fb72",
        "method": "audio:1.2:setAudioVolume",
        "payload": "{\"target\":\"speaker\", \"volume\":\"+6\"}",
        "name": "Volume up",
        "x": 730,
        "y": 1500,
        "wires": [
            []
        ]
    },
    {
        "id": "936c688d.18e548",
        "type": "bravia-api",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "tv": "204aae5a.40fb72",
        "method": "audio:1.2:setAudioVolume",
        "payload": "{\"target\":\"speaker\", \"volume\":\"-6\"}",
        "name": "Volume down",
        "x": 720,
        "y": 1560,
        "wires": [
            []
        ]
    },
    {
        "id": "6f7319b.974c1e8",
        "type": "bravia-api",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "tv": "204aae5a.40fb72",
        "method": "system:1.0:setPowerStatus",
        "payload": "{\"status\":true}",
        "name": "Power on",
        "x": 760,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "993aca19.aa78b8",
        "type": "bravia-api",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "tv": "204aae5a.40fb72",
        "method": "system:1.0:getPowerStatus",
        "payload": "",
        "name": "TV status",
        "x": 555,
        "y": 600,
        "wires": [
            [
                "431f85ba.61446c"
            ]
        ],
        "l": false
    },
    {
        "id": "431f85ba.61446c",
        "type": "switch",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "name": "Is TV On?",
        "property": "payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "standby",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "active",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 615,
        "y": 600,
        "wires": [
            [
                "6f7319b.974c1e8"
            ],
            [
                "9a1f9280.db40b",
                "f901aa82.895028"
            ]
        ],
        "l": false
    },
    {
        "id": "9a1f9280.db40b",
        "type": "bravia-ircc",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "tv": "204aae5a.40fb72",
        "ircc": "Confirm",
        "name": "Play",
        "x": 770,
        "y": 600,
        "wires": []
    },
    {
        "id": "3fc32fce.46e57",
        "type": "bravia-api",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "tv": "204aae5a.40fb72",
        "method": "audio:1.0:setAudioMute",
        "payload": "{\"status\":true}",
        "name": "Mute",
        "x": 730,
        "y": 441,
        "wires": [
            []
        ]
    },
    {
        "id": "39b08539.9f249a",
        "type": "bravia-api",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "tv": "204aae5a.40fb72",
        "method": "audio:1.0:setAudioMute",
        "payload": "{\"status\":false}",
        "name": "Unmute",
        "x": 740,
        "y": 489,
        "wires": [
            []
        ]
    },
    {
        "id": "8b7a371a.87c378",
        "type": "bravia-api",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "tv": "204aae5a.40fb72",
        "method": "audio:1.2:setAudioVolume",
        "payload": "",
        "name": "Set volume",
        "x": 879,
        "y": 1620,
        "wires": [
            []
        ]
    },
    {
        "id": "fbed8092.52ea6",
        "type": "bravia-api",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "tv": "204aae5a.40fb72",
        "method": "audio:1.0:setAudioMute",
        "payload": "{\"status\":false}",
        "name": "Unmute",
        "x": 550,
        "y": 1500.6000061035156,
        "wires": [
            [
                "58d41d46.e03dc4"
            ]
        ]
    },
    {
        "id": "bcc0b598.f1b408",
        "type": "bravia-api",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "tv": "204aae5a.40fb72",
        "method": "audio:1.0:setAudioMute",
        "payload": "{\"status\":false}",
        "name": "Unmute",
        "x": 549,
        "y": 1560,
        "wires": [
            [
                "936c688d.18e548"
            ]
        ]
    },
    {
        "id": "e5007d44.75d76",
        "type": "bravia-api",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "tv": "204aae5a.40fb72",
        "method": "system:1.0:setPowerStatus",
        "payload": "{\"status\":false}",
        "name": "Power off",
        "x": 540,
        "y": 1220,
        "wires": [
            [
                "b5a5b5a2.51d288"
            ]
        ]
    },
    {
        "id": "f6a94488.96f338",
        "type": "bravia-api",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "tv": "204aae5a.40fb72",
        "method": "audio:1.0:setAudioMute",
        "payload": "{\"status\":false}",
        "name": "Unmute",
        "x": 409,
        "y": 1620,
        "wires": [
            [
                "8e4fb368.f54b8"
            ]
        ]
    },
    {
        "id": "cca7274f.f71098",
        "type": "function",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "name": "Set volume",
        "func": "const minLoudness = msg.payload[0].minVolume;\nconst maxLoudness = msg.payload[0].maxVolume;\nvar rawLoudness = flow.get(\"rawLoudness\");\nvar rawMin = flow.get(\"rawMin\");\nvar rawMax = flow.get(\"rawMax\");\nvar loudness = 1;\nvar nbrLoudness = '1';\n\n\nif(rawLoudness!==null){\n    loudness = rawLoudness[0].value.value;\n    nbrLoudness = Number(loudness);\n    if(loudness === undefined || rawLoudness[0].value.kind !== 'Number' || isNaN(nbrLoudness) === true){\n        node.warn(\"Skipping invalid volume\");\n        return;\n    }\n}\nif(rawMax!==null){\n    loudness = maxLoudness;\n}\nif(rawMin!==null){\n    loudness = minLoudness;\n}\nif(nbrLoudness>Number(maxLoudness)){\n    loudness = maxLoudness;\n}\n\nif(nbrLoudness<Number(minLoudness)){\n    loudness = minLoudness;    \n}\n\nloudness = String(loudness);\n\nmsg.payload = {\"target\":\"speaker\",\"volume\":loudness};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 719,
        "y": 1620,
        "wires": [
            [
                "8b7a371a.87c378"
            ]
        ]
    },
    {
        "id": "8e4fb368.f54b8",
        "type": "bravia-api",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "tv": "204aae5a.40fb72",
        "method": "audio:1.0:getVolumeInformation",
        "payload": "",
        "name": "Volume info",
        "x": 559,
        "y": 1620,
        "wires": [
            [
                "cca7274f.f71098"
            ]
        ]
    },
    {
        "id": "e2abc940.a44c98",
        "type": "http response",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 480,
        "y": 1695,
        "wires": [],
        "l": false
    },
    {
        "id": "4d769c43.d829a4",
        "type": "function",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "name": "ChannelTvFavorites",
        "func": "function findObjectByKey(array, key, value) {\n\titems = [];\n\tvar cpt = 0;\n\tfor (var i = 0; i < array.length; i++) {\n\t\tif (array[i][key] === value) {\n\t\t\titems[cpt] = array[i];\n\t\t\tcpt++;\n\t\t}\n\t}\n\tif (items[0] !== undefined) {\n\t\treturn items;\n\t} else {\n\t\treturn null;\n\t}\n}\n\nvar lang = global.get(\"msgLang\");\nvar defaultSpeaker = global.get(\"defaultSpeaker\");\nif(defaultSpeaker === undefined){\n    defaultSpeaker = \"speaker\";\n}\nmsg.cmd={};\nmsg.payload = JSON.parse(msg.payload);\nvar doAllRooms = false;\nvar intent = msg.payload.intent.intentName;\nif (intent === undefined) \n    return null;\n\nvar rawRoom = findObjectByKey(msg.payload.slots, 'slotName', 'room');\nvar rawFavorite = findObjectByKey(msg.payload.slots, 'entity', 'FavoriteType');\nvar rawSpeaker = findObjectByKey(msg.payload.slots, 'entity', 'SpeakerType');\n\n//node.warn(msg.payload);\n//node.warn(\"rawRoom: \"+ JSON.stringify(rawRoom) );\nvar theRoom = msg.payload.siteId;\n\nif (rawRoom !== null) {\n\tmsg.cmd.room = [];\n\tfor (var i = 0; i < rawRoom.length; i++) {\n\t\tmsg.cmd.room[i] = rawRoom[i].value.value.toLowerCase();\n\t\t//node.warn(\"msg.cmd.room[i]: \"+msg.cmd.room[i] + \"   msg.payload.siteId: \"+msg.payload.siteId);\n\t\tif (msg.cmd.room[i] === \"here\" || msg.cmd.room[i] === \"hier\" || msg.cmd.room[i] === \"ici\") {\n\t\t\ttheRoom = msg.payload.siteId;\n\t\t} else {\n    \t\tif (msg.cmd.room[i] === \"all\" || msg.cmd.room[i] === \"everywhere\" || msg.cmd.room[i] === \"ueberall\" || msg.cmd.room[i] === \"partout\") {\n    \t\t    doAllRooms = true;\n    \t\t} else {\n    \t\t    theRoom = msg.cmd.room[i].replace(/ /g, \"_\");\n    \t\t}\n\t\t}\n\t}\n} \nmsg.payload.siteId = theRoom;\n//node.warn(\" Will use msg.payload.siteId: \"+msg.payload.siteId);\n//global.set(\"siteIdTv\", msg.payload.siteId);\n\nif (rawFavorite !== null) {\n    //node.warn(\"rawFavorite: \"+JSON.stringify(rawFavorite));\n    msg.payload.favorite = rawFavorite[0].value.value.trim().toLowerCase();\n    //node.warn(\"msg.payload.favorite: \"+msg.payload.favorite);\n}\n\n\nif (rawSpeaker !== null) {\n    //node.warn(\"rawSpeaker: \"+JSON.stringify(rawSpeaker));\n    msg.payload.speaker = rawSpeaker[0].value.value.trim().toLowerCase();\n} else {\n    msg.payload.speaker = defaultSpeaker;\n}\n\n//node.warn(\"msg.payload.speaker: \"+msg.payload.speaker);\n\n\nvar msgFav = msg.payload.favorite;\nvar tvFavorites = global.get(\"tvFavorites\");\nvar out = [];\n\nif(msg.payload.favorite === undefined){\n    return ;\n    \n} else {\n\n    for(var i = 0; i<tvFavorites.length; i++){\n        if(msgFav.toLowerCase() == tvFavorites[i].toLowerCase()){\n            out.push([msg]);\n        }else{\n            out.push([]);\n        }\n    }\n    return out;\n}\n\n",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 580,
        "y": 900,
        "wires": [
            [
                "d3f142f8.848ec"
            ],
            [
                "cdd19aa6.de4538"
            ],
            [
                "dfc8ac27.7cf86"
            ],
            [
                "1b73040.2e174fc"
            ]
        ]
    },
    {
        "id": "d3f142f8.848ec",
        "type": "bravia-ircc",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "tv": "204aae5a.40fb72",
        "ircc": "Num1",
        "name": "Num 1",
        "x": 850,
        "y": 840,
        "wires": []
    },
    {
        "id": "cdd19aa6.de4538",
        "type": "bravia-ircc",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "tv": "204aae5a.40fb72",
        "ircc": "Num2",
        "name": "Num 2",
        "x": 850,
        "y": 880,
        "wires": []
    },
    {
        "id": "1b73040.2e174fc",
        "type": "bravia-ircc",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "tv": "204aae5a.40fb72",
        "ircc": "Num4",
        "name": "Num 4",
        "x": 850,
        "y": 960,
        "wires": []
    },
    {
        "id": "dfc8ac27.7cf86",
        "type": "bravia-ircc",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "tv": "204aae5a.40fb72",
        "ircc": "Num3",
        "name": "Num 3",
        "x": 850,
        "y": 920,
        "wires": []
    },
    {
        "id": "7cabe546.2b80bc",
        "type": "bravia-api",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "tv": "204aae5a.40fb72",
        "method": "appControl:1.0:getApplicationList",
        "payload": "",
        "name": "App List",
        "x": 520,
        "y": 1000,
        "wires": [
            [
                "7c4230ef.ee219"
            ]
        ]
    },
    {
        "id": "775ce1a9.0895e",
        "type": "inject",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 255,
        "y": 1020,
        "wires": [
            [
                "7cabe546.2b80bc",
                "7bfa5c49.27da74"
            ]
        ],
        "l": false
    },
    {
        "id": "7c4230ef.ee219",
        "type": "file",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "name": "AppList",
        "filename": "AppList",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 660,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "c3d2ef91.d4a39",
        "type": "json",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 435,
        "y": 540,
        "wires": [
            [
                "9c797648.377408"
            ]
        ],
        "l": false
    },
    {
        "id": "9c797648.377408",
        "type": "file",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "name": "tvPlay",
        "filename": "tvPlay",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 536,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "7bfa5c49.27da74",
        "type": "bravia-api",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "tv": "204aae5a.40fb72",
        "method": "system:1.0:getRemoteControllerInfo",
        "payload": "",
        "name": "Remote Controller Info",
        "x": 480,
        "y": 1040,
        "wires": [
            [
                "998cbafc.863998"
            ]
        ]
    },
    {
        "id": "998cbafc.863998",
        "type": "file",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "name": "RemoteInfo",
        "filename": "RemoteInfo",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 670,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "be863d4.32008c",
        "type": "function",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "name": "AppTvFavorites",
        "func": "function findObjectByKey(array, key, value) {\n\titems = [];\n\tvar cpt = 0;\n\tfor (var i = 0; i < array.length; i++) {\n\t\tif (array[i][key].toLowerCase() === value.toLowerCase()) {\n\t\t\titems[cpt] = array[i];\n\t\t\tcpt++;\n\t\t}\n\t}\n\tif (items[0] !== undefined) {\n\t\treturn items;\n\t} else {\n\t\treturn null;\n\t}\n}\n\nmsg.cmd={};\nmsg.payload = JSON.parse(msg.payload);\nvar find = global.get(\"msg.payload.favorite\");\n\nif(find === \"disney plus\"){\n    find = \"Disney+\";\n}\n\nvar app = findObjectByKey(msg.payload, 'title', find);\n\n//node.warn(app);\n\nif(app === null){\n    \n    return [null, msg];\n    \n}else {\n    msg.payload = \"{\\\"uri\\\":\\\"\" + app[0].uri + \"\\\"}\";\n    return [msg, null];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 820,
        "wires": [
            [
                "901976c4.b6a848"
            ],
            [
                "1b390bf0.da0bf4"
            ]
        ]
    },
    {
        "id": "f9d20cd7.73678",
        "type": "file in",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "name": "AppList",
        "filename": "AppList",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 235,
        "y": 820,
        "wires": [
            [
                "be863d4.32008c"
            ]
        ],
        "l": false
    },
    {
        "id": "901976c4.b6a848",
        "type": "bravia-api",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "tv": "204aae5a.40fb72",
        "method": "appControl:1.0:setActiveApp",
        "payload": "",
        "name": "setActiveApp",
        "x": 550,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "2859a883.fd72f8",
        "type": "file in",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "name": "tvPlay",
        "filename": "tvPlay",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 435,
        "y": 900,
        "wires": [
            [
                "4d769c43.d829a4"
            ]
        ],
        "l": false
    },
    {
        "id": "f901aa82.895028",
        "type": "debug",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "name": "HANDLE PLAY",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 875,
        "y": 600,
        "wires": [],
        "l": false
    },
    {
        "id": "15c2758a.1e7bba",
        "type": "bravia-api",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "tv": "204aae5a.40fb72",
        "method": "system:1.0:setPowerStatus",
        "payload": "{\"status\":true}",
        "name": "Power on",
        "x": 675,
        "y": 640,
        "wires": [
            [
                "f9d20cd7.73678"
            ]
        ],
        "l": false
    },
    {
        "id": "1b390bf0.da0bf4",
        "type": "bravia-api",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "tv": "204aae5a.40fb72",
        "method": "appControl:1.0:terminateApps",
        "payload": "",
        "name": "Terminate App",
        "x": 320,
        "y": 900,
        "wires": [
            [
                "2859a883.fd72f8"
            ]
        ]
    },
    {
        "id": "45abe297.5b8b2c",
        "type": "switch",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "name": "Is TV On?",
        "property": "payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "standby",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "active",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 615,
        "y": 660,
        "wires": [
            [
                "15c2758a.1e7bba"
            ],
            [
                "f9d20cd7.73678"
            ]
        ],
        "l": false
    },
    {
        "id": "c91f8b2f.517a88",
        "type": "bravia-api",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "tv": "204aae5a.40fb72",
        "method": "system:1.0:getPowerStatus",
        "payload": "",
        "name": "TV status",
        "x": 555,
        "y": 660,
        "wires": [
            [
                "45abe297.5b8b2c"
            ]
        ],
        "l": false
    },
    {
        "id": "a96e7c4c.0b38b",
        "type": "function",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "name": "",
        "func": "//set siteIdTv\n\nvar siteIdTv = msg.payload;\n\nString.prototype.sansAccent = function() {\n    var accent = [\n        /[\\300-\\306]/g, /[\\340-\\346]/g, // A, a\n        /[\\310-\\313]/g, /[\\350-\\353]/g, // E, e\n        /[\\314-\\317]/g, /[\\354-\\357]/g, // I, i\n        /[\\322-\\330]/g, /[\\362-\\370]/g, // O, o\n        /[\\331-\\334]/g, /[\\371-\\374]/g, // U, u\n        /[\\321]/g, /[\\361]/g, // N, n\n        /[\\307]/g, /[\\347]/g, // C, c\n    ];\n    var noaccent = ['A','a','E','e','I','i','O','o','U','u','N','n','C','c'];\n         \n    var str = this;\n    for(var i = 0; i < accent.length; i++){\n        str = str.replace(\"ä\", \"ae\");\n        str = str.replace(\"ü\", \"ue\");\n        str = str.replace(\"ö\", \"oe\");        \n        str = str.replace(accent[i], noaccent[i]);\n    }\n    return str;\n};\n\n\nglobal.set(\"siteIdTv\", siteIdTv.sansAccent()); \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 490,
        "y": 165,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "970e8bef.678aa8",
        "type": "inject",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "name": "Set the TV room here !",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "Living room",
        "payloadType": "str",
        "x": 300,
        "y": 165,
        "wires": [
            [
                "a96e7c4c.0b38b"
            ]
        ]
    },
    {
        "id": "46128af1.9eb1f4",
        "type": "function",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "name": "GET /siteIdTv ",
        "func": "var siteIdTv = global.get(\"siteIdTv\");\n\nif(msg.payload.siteId.toLowerCase().replace(/_\\d+$/,\"\").replace(/_/g,\"\") !== siteIdTv.toLowerCase().replace(/_\\d+$/,\"\").replace(/ /g,\"\")){\n    return null;\n}else{\n    return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 475,
        "y": 441,
        "wires": [
            [
                "b1ae94fa.d7f4c8"
            ]
        ],
        "l": false
    },
    {
        "id": "e7f8366d.e0c798",
        "type": "function",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "name": "GET /siteIdTv ",
        "func": "var siteIdTv = global.get(\"siteIdTv\");\n\nif(msg.payload.siteId.toLowerCase().replace(/_\\d+$/,\"\").replace(/_/g,\"\") !== siteIdTv.toLowerCase().replace(/_\\d+$/,\"\").replace(/ /g,\"\")){\n    return null;\n}else{\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 435,
        "y": 490,
        "wires": [
            [
                "cc52cd78.bbb11"
            ]
        ],
        "l": false
    },
    {
        "id": "d52435a.640bcc8",
        "type": "comment",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "name": "IMPORTANT Manually set the siteIdTv  IMPORTANT ",
        "info": "It is strongly recommended to set a valid siteId for the TV (siteIdTv), the place where you place your TV. (eg: bedroom, office, living room)\n\nThe siteIdTv's must be an existing room from your installation see PRATGLAD or Aragon application. (e.g PRATGLAD's user interface -> Configure -> no. 3 -> Settings -> Rooms)",
        "x": 380,
        "y": 130,
        "wires": []
    },
    {
        "id": "c1b86056.6308",
        "type": "switch",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "name": "Is TV On?",
        "property": "payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "standby",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "active",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 615,
        "y": 441,
        "wires": [
            [],
            [
                "3fc32fce.46e57"
            ]
        ],
        "l": false
    },
    {
        "id": "b1ae94fa.d7f4c8",
        "type": "bravia-api",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "tv": "204aae5a.40fb72",
        "method": "system:1.0:getPowerStatus",
        "payload": "",
        "name": "TV status",
        "x": 555,
        "y": 441,
        "wires": [
            [
                "c1b86056.6308"
            ]
        ],
        "l": false
    },
    {
        "id": "cc52cd78.bbb11",
        "type": "bravia-api",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "tv": "204aae5a.40fb72",
        "method": "system:1.0:getPowerStatus",
        "payload": "",
        "name": "TV status",
        "x": 535,
        "y": 490,
        "wires": [
            [
                "c8ed3d6a.59c7"
            ]
        ],
        "l": false
    },
    {
        "id": "c8ed3d6a.59c7",
        "type": "switch",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "name": "Is TV On?",
        "property": "payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "standby",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "active",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 615,
        "y": 490,
        "wires": [
            [],
            [
                "39b08539.9f249a"
            ]
        ],
        "l": false
    },
    {
        "id": "eba711de.46203",
        "type": "debug",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "name": "HANDLE PAUSE",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 655,
        "y": 1280,
        "wires": [],
        "l": false
    },
    {
        "id": "15f1ec6e.61b094",
        "type": "bravia-ircc",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "tv": "204aae5a.40fb72",
        "ircc": "Pause",
        "name": "Pause",
        "x": 530,
        "y": 1280,
        "wires": []
    },
    {
        "id": "aab32aaa.209d38",
        "type": "comment",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "name": "IMPORTANT Define the TV Favorites here IMPORTANT ",
        "info": "",
        "x": 385,
        "y": 210,
        "wires": []
    },
    {
        "id": "e0f256bf.80ad88",
        "type": "debug",
        "z": "411bf1b5.ed387",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 825,
        "y": 165,
        "wires": [],
        "l": false
    },
    {
        "id": "83b73794.6925f8",
        "type": "catch",
        "z": "411bf1b5.ed387",
        "name": "",
        "scope": [
            "47a2cbc8.397b54",
            "3f355eac.3c4d62",
            "f132aee9.29ff58",
            "98df55b7.8846",
            "283824eb.6200f4",
            "eab2d7ab.ac4dd8",
            "6ad1ec67.33f874",
            "908e7fbd.62d008",
            "d154cb4b.a6e388",
            "2977b83.e482e48",
            "d5e99277.88637",
            "9549c556.6329f",
            "7be10ed0.2f4d7",
            "9b5ce168.60872",
            "ffab644e.b32bd",
            "f708a811.caa248",
            "efe7c9b7.b46d18",
            "c92dede.27dab1",
            "39f2aa12.6db8a6",
            "c166f5ae.b3d158",
            "261cf9fa.ea3cb6",
            "400b2a00.de02ec",
            "2921b1a.a98f34e",
            "ebfb48c9.b36338",
            "587ce7d8.0f8bb",
            "25b9d7cf.36579",
            "825f29e3.928a98",
            "c57220e2.8fe278"
        ],
        "uncaught": false,
        "x": 725,
        "y": 165,
        "wires": [
            [
                "e0f256bf.80ad88"
            ]
        ]
    },
    {
        "id": "22f17c84.4566d4",
        "type": "comment",
        "z": "411bf1b5.ed387",
        "g": "7d2c9805.210088",
        "name": "DEBUG Sony Bravia",
        "info": "",
        "x": 755,
        "y": 130,
        "wires": []
    },
    {
        "id": "3e78409e.2eaa2",
        "type": "mqtt-broker",
        "z": "411bf1b5.ed387",
        "name": "-",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "info": "-"
    },
    {
        "id": "204aae5a.40fb72",
        "type": "bravia-tv",
        "name": "SONY BRAVIA TV",
        "host": "192.168.1.55",
        "port": "80",
        "psk": "1111",
        "timeout": "5000"
    }
]
