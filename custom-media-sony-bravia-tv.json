[
    {
        "id": "3ff699d2.ba1696",
        "type": "tab",
        "label": "SONY BRAVIA TV",
        "disabled": false,
        "info": ""
    },
    {
        "id": "c953472.cc5afb8",
        "type": "group",
        "z": "3ff699d2.ba1696",
        "name": "CUSTOM MEDIA CONTROL FOR SONY BRAVIA TV",
        "style": {
            "label": true
        },
        "nodes": [
            "cc872597.6f34a8",
            "133fc7a7.482d28",
            "a59764f4.ba3ac8",
            "be460012.1faa7",
            "4ec230aa.d7f0e",
            "19c615d3.6af45a",
            "b6ed37c4.1b8538",
            "2ea11d03.e63032",
            "5fc32f8f.becf9",
            "271fc4ad.d47d3c",
            "eb3ff927.db1cc8",
            "c78bac17.9063b",
            "c0b579d8.41bf88",
            "3225ec6b.044e24",
            "d28cac40.65f4b",
            "19640df4.811762",
            "8088a897.4050f8",
            "8d7bc5ca.01e9c8",
            "a56a9d6a.6f741",
            "3a14e224.d1485e",
            "cd9192a6.11b32",
            "1d6269d6.b162d6",
            "652fdd6c.536ce4",
            "b156bf92.85176",
            "c96b1c3a.5abe8",
            "96e7ee3.9e5441",
            "938d0ea7.7c8be",
            "6d01f5f0.588ffc",
            "5047bb5e.4636d4",
            "fccd5183.1935b",
            "1c7cc162.d07ebf",
            "2b29eb98.04ec64",
            "8334af69.4007c",
            "8ab36445.d235b8",
            "6476fadc.7df324",
            "dac7ce68.29874",
            "47b5b7f2.c20298",
            "f51376d0.cd7048",
            "875a786c.7265c8",
            "78c36ec.827669",
            "70b113e1.5d88fc",
            "1ef782d4.76412d",
            "160dd2f1.80dbed",
            "21dfd053.29284",
            "9092034e.efa21",
            "8d9d727a.14565",
            "791516c8.bbbd98",
            "c825d679.936b48",
            "5ad3c5d8.6be7cc",
            "61ab07e7.590f38",
            "5427dadf.69e2b4",
            "373a9e06.357932",
            "692c2c14.f98664",
            "4f471823.53c328",
            "b485c5b.3bae338",
            "3bc50d00.590ff4",
            "dd3fc3db.87d6a",
            "ea457e19.953f6",
            "efa211b1.c1cdd",
            "7d54c2f1.ea0a5c",
            "48a932d.f3877cc",
            "ef5a952d.1a9598",
            "988024e7.082e38",
            "b5422185.7c14e",
            "43c000dc.c066e",
            "992060df.ab554",
            "e7f7daa.3062728",
            "7ce145d7.ff44cc",
            "8f15c1fb.886be",
            "4087eb67.a5a534",
            "66743754.667fe8",
            "116ef070.290f8",
            "7c54ae2.b7a755",
            "b770a743.febc88",
            "e94234b4.05c088",
            "e9a3d96f.392798",
            "5acad99a.eecc18",
            "4686c67.80d8938",
            "a38b97fa.ae8f08",
            "f837ff73.f6394",
            "eefa953f.dc3438",
            "ed85831.1b99e8",
            "6bba9f17.c4897",
            "56005e67.6f577",
            "d439b3d3.329f2",
            "d0f2cd7.cc1dc3",
            "40ab2c00.bc1a94",
            "28058acc.1b50b6",
            "ae44b78e.260108",
            "8d5df216.abbac",
            "c5a589cd.b41668",
            "e995a8d.b370d58",
            "f4d4327f.dc351",
            "6d26826.a69e37c",
            "a43de525.2e9ca8",
            "e5e33181.c4e84"
        ],
        "x": 149,
        "y": 34,
        "w": 1027,
        "h": 1697
    },
    {
        "id": "cc872597.6f34a8",
        "type": "http in",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "GET /tvfavorites",
        "url": "/tvfavorites",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 280,
        "y": 1690,
        "wires": [
            [
                "133fc7a7.482d28"
            ]
        ]
    },
    {
        "id": "133fc7a7.482d28",
        "type": "function",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "get(\"tvFavorites\");",
        "func": "var tvFavorites = global.get(\"tvFavorites\");\nmsg.payload = {\"tvfavorites\": \"false\"};\nif(tvFavorites !== undefined){\n    msg.payload = JSON.stringify(tvFavorites);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 415,
        "y": 1690,
        "wires": [
            [
                "9092034e.efa21"
            ]
        ],
        "l": false
    },
    {
        "id": "a59764f4.ba3ac8",
        "type": "mqtt in",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "next",
        "topic": "hermes/intent/ProKNX:next",
        "qos": "2",
        "datatype": "auto",
        "broker": "b8fcf82.0729e08",
        "x": 246,
        "y": 1430,
        "wires": [
            [
                "b6ed37c4.1b8538"
            ]
        ]
    },
    {
        "id": "be460012.1faa7",
        "type": "mqtt in",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "previous",
        "topic": "hermes/intent/ProKNX:previous",
        "qos": "2",
        "datatype": "auto",
        "broker": "b8fcf82.0729e08",
        "x": 256,
        "y": 1470,
        "wires": [
            [
                "b6ed37c4.1b8538"
            ]
        ]
    },
    {
        "id": "4ec230aa.d7f0e",
        "type": "mqtt in",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "hotword off",
        "topic": "hermes/hotword/toggleOn",
        "qos": "2",
        "datatype": "auto",
        "broker": "b8fcf82.0729e08",
        "x": 250,
        "y": 490,
        "wires": [
            [
                "271fc4ad.d47d3c"
            ]
        ]
    },
    {
        "id": "19c615d3.6af45a",
        "type": "mqtt in",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "hotword on",
        "topic": "hermes/hotword/default/detected",
        "qos": "2",
        "datatype": "auto",
        "broker": "b8fcf82.0729e08",
        "x": 250,
        "y": 441,
        "wires": [
            [
                "2ea11d03.e63032"
            ]
        ]
    },
    {
        "id": "b6ed37c4.1b8538",
        "type": "function",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "Filter",
        "func": "// Sample code : control of TV set\n\nfunction findObjectByKey(array, key, value) {\n\titems = [];\n\tvar cpt = 0;\n\tfor (var i = 0; i < array.length; i++) {\n\t\tif (array[i][key] === value) {\n\t\t\titems[cpt] = array[i];\n\t\t\tcpt++;\n\t\t}\n\t}\n\tif (items[0] !== undefined) {\n\t\treturn items;\n\t} else {\n\t\treturn null;\n\t}\n}\n\nvar lang = global.get(\"msgLang\");\nvar defaultSpeaker = global.get(\"defaultSpeaker\");\nvar tvFavorites = global.get(\"tvFavorites\");\nvar siteIdTv = global.get(\"siteIdTv\");\nif(defaultSpeaker === undefined){\n    defaultSpeaker = \"speaker\";\n}\nmsg.cmd={};\nmsg.payload = JSON.parse(msg.payload);\nmsg.cmd.siteId = msg.payload.siteId.replace(/_\\d+$/, \"\").trim();\nvar doAllRooms = false;\nvar intent = msg.payload.intent.intentName;\nif (intent === undefined) \n    return null;\n\nif(msg.payload.input.toLowerCase().includes(\"snips\") === true){\n    //node.warn(\"send to snips: includes 'snips'\");\n    return null;   \n}\n\nvar rawRoom = findObjectByKey(msg.payload.slots, 'slotName', 'room');\nvar rawFavorite = findObjectByKey(msg.payload.slots, 'entity', 'FavoriteType');\nvar rawSpeaker = findObjectByKey(msg.payload.slots, 'entity', 'SpeakerType');\n\n//node.warn(msg.payload);\n//node.warn(\"rawRoom: \"+ JSON.stringify(rawRoom) );\nvar theRoom = msg.payload.siteId;\n\nif (rawRoom !== null) {\n\tmsg.cmd.room = [];\n\tfor (var i = 0; i < rawRoom.length; i++) {\n\t\tmsg.cmd.room[i] = rawRoom[i].value.value.toLowerCase();\n\t\t//node.warn(\"msg.cmd.room[i]: \"+msg.cmd.room[i] + \"   msg.payload.siteId: \"+msg.payload.siteId);\n\t\tif (msg.cmd.room[i] === \"here\" || msg.cmd.room[i] === \"hier\" || msg.cmd.room[i] === \"ici\") {\n\t\t\ttheRoom = msg.payload.siteId;\n\t\t} else {\n    \t\tif (msg.cmd.room[i] === \"all\" || msg.cmd.room[i] === \"everywhere\" || msg.cmd.room[i] === \"ueberall\" || msg.cmd.room[i] === \"partout\") {\n    \t\t    doAllRooms = true;\n    \t\t} else {\n    \t\t    theRoom = msg.cmd.room[i].replace(/ /g, \"_\");\n    \t\t}\n\t\t}\n\t}\n}\n\nif (rawSpeaker !== null) {\n    //node.warn(\"rawSpeaker: \"+JSON.stringify(rawSpeaker));\n    msg.payload.speaker = rawSpeaker[0].value.value.trim().toLowerCase();\n} else {\n    msg.payload.speaker = defaultSpeaker.trim().toLowerCase();\n}\n\nmsg.payload.siteId = theRoom;\n\nif(msg.payload.siteId.toLowerCase().replace(/_\\d+$/,\"\").replace(/_/g,\"\") !== siteIdTv.toLowerCase().replace(/_\\d+$/,\"\").replace(/ /g,\"\")){\n    return null;\n}\n\nif (rawFavorite !== null) {\n    //node.warn(\"rawFavorite: \"+JSON.stringify(rawFavorite));\n    msg.payload.favorite = rawFavorite[0].value.value.trim().toLowerCase();\n    node.warn(\"msg.payload.favorite: \"+msg.payload.favorite);\n}\n\n\n//node.warn(\"msg.payload.speaker: \"+msg.payload.speaker);\n    \nif (msg.payload.intent.confidenceScore < 0.6){\n    return null;\n}\n\n//node.warn(\"msg.payload.speaker = \" + msg.payload.speaker);\n\nif(msg.payload.speaker !== undefined){\n    if(msg.payload.speaker === \"tv\") {\n        \n        global.set(\"defaultSpeaker\", \"tv\");\n        //node.warn(\"intent \" + intent);\n        switch (intent) {\n            case \"ProKNX:next\": return [msg, null, null, null, null];\n            case \"ProKNX:previous\": return [null, msg, null, null, null];\n        }\n        \n        if (msg.payload.asrTokens[0].length <= 1){\n            return null;\n        }else{\n            switch(intent){\n            case \"ProKNX:increaseVolume\": return [null, null, msg, null, null];\n            case \"ProKNX:decreaseVolume\": return [null, null, null, msg, null];\n            case \"ProKNX:setVolume\": flow.set(\"rawLoudness\", findObjectByKey(msg.payload.slots, 'slotName', 'loudness')); flow.set(\"rawMin\", findObjectByKey(msg.payload.slots, 'slotName', 'min'));\n                                    flow.set(\"rawMax\", findObjectByKey(msg.payload.slots, 'slotName', 'max')); return [null, null, null, null, msg];\n            }\n        }\n    }\n}",
        "outputs": 5,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 394,
        "y": 1515,
        "wires": [
            [
                "c5a589cd.b41668"
            ],
            [
                "6d26826.a69e37c"
            ],
            [
                "875a786c.7265c8"
            ],
            [
                "78c36ec.827669"
            ],
            [
                "1ef782d4.76412d"
            ]
        ],
        "outputLabels": [
            "pause",
            "play",
            "next",
            "previous",
            "incvol"
        ]
    },
    {
        "id": "2ea11d03.e63032",
        "type": "json",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 365,
        "y": 441,
        "wires": [
            [
                "5fc32f8f.becf9"
            ]
        ],
        "l": false
    },
    {
        "id": "5fc32f8f.becf9",
        "type": "delay",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 414,
        "y": 441,
        "wires": [
            [
                "7ce145d7.ff44cc"
            ]
        ],
        "l": false
    },
    {
        "id": "271fc4ad.d47d3c",
        "type": "json",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 365,
        "y": 490,
        "wires": [
            [
                "8f15c1fb.886be"
            ]
        ],
        "l": false
    },
    {
        "id": "eb3ff927.db1cc8",
        "type": "comment",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "Info - readme",
        "info": "The following nodes let you implement custom media control for Sony Bravia TV,\n\nIMPORTANT: To avoid your custom code is removed on flow update it is recommended to copy paste the nodes below to a new Tab\n\nTo apply this function it to your tv, you need to change the ip address of the tv\n\nTo change, go to configurations nodes and find SONY BRAVIA TV node and double click it\nChange the host to your tv's ip address and type in the PSK and save\n",
        "x": 245,
        "y": 75,
        "wires": []
    },
    {
        "id": "c78bac17.9063b",
        "type": "inject",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "French favorites (samples)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "20",
        "topic": "",
        "payload": "[\"Canal un\",\"Canal deux\",\"Canal trois\",\"Canal quatre\",\"Canal cinq\",\"Channel six\",\"Canal sept\",\"Canal huit\",\"Canal neuf\",\"Play Store\",\"YouTube\",\"Youtube Music\",\"Recorded Title List\",\"Media Player\",\"TV\",\"Prime Video\",\"Apple TV\",\"Play Games\",\"Play Movies\",\"Netflix\",\"Bonus Offer\",\"Sony Select\",\"Timers\",\"Internet Browser\",\"Disney+\",\"Molotov\",\"ProKNX\"]",
        "payloadType": "json",
        "x": 320,
        "y": 250,
        "wires": [
            [
                "3225ec6b.044e24"
            ]
        ]
    },
    {
        "id": "c0b579d8.41bf88",
        "type": "inject",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "German favorites (samples)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "20",
        "topic": "",
        "payload": "[\"Kanal eins\",\"Kanal zwei\",\"Kanal drei\",\"Kanal vier\",\"Kanal fünf\",\"Kanal sechs\",\"Kanal sieben\",\"Kanal acht\",\"Kanal neun\",\"Play Store\",\"YouTube\",\"Youtube Music\",\"Recorded Title List\",\"Media Player\",\"TV\",\"Prime Video\",\"Apple TV\",\"Play Games\",\"Play Movies\",\"Netflix\",\"Bonus Offer\",\"Sony Select\",\"Timers\",\"Internet Browser\",\"Disney+\",\"Molotov\"]",
        "payloadType": "json",
        "x": 320,
        "y": 290,
        "wires": [
            [
                "d28cac40.65f4b"
            ]
        ]
    },
    {
        "id": "3225ec6b.044e24",
        "type": "function",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "lang?",
        "func": "var lang = global.get(\"msgLang\");\nif(lang.toLowerCase().includes(\"fr\")){\n    return msg;\n}\nelse {\n    //do nothing\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 560,
        "y": 250,
        "wires": [
            [
                "19640df4.811762"
            ]
        ]
    },
    {
        "id": "d28cac40.65f4b",
        "type": "function",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "lang?",
        "func": "var lang = global.get(\"msgLang\");\nif(lang.toLowerCase().includes(\"de\")){\n    return msg;\n}\nelse {\n    //do nothing\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 560,
        "y": 290,
        "wires": [
            [
                "19640df4.811762"
            ]
        ]
    },
    {
        "id": "19640df4.811762",
        "type": "change",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "Save",
        "rules": [
            {
                "t": "set",
                "p": "tvFavorites",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "useTvFavorites",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 290,
        "wires": [
            []
        ]
    },
    {
        "id": "8088a897.4050f8",
        "type": "inject",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "English favorites (samples)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "20",
        "topic": "",
        "payload": "[\"Channel one\",\"Channel two\",\"Channel three\",\"Channel four\",\"Channel five\",\"Channel six\",\"Channel seven\",\"Channel eight\",\"Channel nine\",\"Play Store\",\"YouTube\",\"Youtube Music\",\"Recorded Title List\",\"Media Player\",\"TV\",\"Prime Video\",\"Apple TV\",\"Play Games\",\"Play Movies\",\"Netflix\",\"Bonus Offer\",\"Sony Select\",\"Timers\",\"Internet Browser\",\"Disney Plus\",\"Molotov\"]",
        "payloadType": "json",
        "x": 320,
        "y": 330,
        "wires": [
            [
                "8d7bc5ca.01e9c8"
            ]
        ]
    },
    {
        "id": "8d7bc5ca.01e9c8",
        "type": "function",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "lang?",
        "func": "var lang = global.get(\"msgLang\");\nif(lang.toLowerCase().includes(\"en\")){\n    return msg;\n}\nelse {\n    //do nothing\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 560,
        "y": 330,
        "wires": [
            [
                "19640df4.811762"
            ]
        ]
    },
    {
        "id": "a56a9d6a.6f741",
        "type": "mqtt in",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "incVol",
        "topic": "hermes/intent/ProKNX:increaseVolume",
        "qos": "2",
        "datatype": "auto",
        "broker": "b8fcf82.0729e08",
        "x": 245,
        "y": 1515,
        "wires": [
            [
                "b6ed37c4.1b8538"
            ]
        ]
    },
    {
        "id": "3a14e224.d1485e",
        "type": "mqtt in",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "decVol",
        "topic": "hermes/intent/ProKNX:decreaseVolume",
        "qos": "2",
        "datatype": "auto",
        "broker": "b8fcf82.0729e08",
        "x": 245,
        "y": 1555,
        "wires": [
            [
                "b6ed37c4.1b8538"
            ]
        ]
    },
    {
        "id": "cd9192a6.11b32",
        "type": "mqtt in",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "setVol",
        "topic": "hermes/intent/ProKNX:setVolume",
        "qos": "2",
        "datatype": "auto",
        "broker": "b8fcf82.0729e08",
        "x": 245,
        "y": 1595,
        "wires": [
            [
                "b6ed37c4.1b8538"
            ]
        ]
    },
    {
        "id": "1d6269d6.b162d6",
        "type": "bravia-ircc",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "tv": "204aae5a.40fb72",
        "ircc": "Next",
        "name": "Next",
        "x": 690,
        "y": 1350,
        "wires": []
    },
    {
        "id": "652fdd6c.536ce4",
        "type": "bravia-ircc",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "tv": "204aae5a.40fb72",
        "ircc": "Prev",
        "name": "Previous",
        "x": 700,
        "y": 1430,
        "wires": []
    },
    {
        "id": "b156bf92.85176",
        "type": "mqtt in",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "play",
        "topic": "hermes/intent/ProKNX:play",
        "qos": "2",
        "datatype": "auto",
        "broker": "b8fcf82.0729e08",
        "x": 239,
        "y": 640,
        "wires": [
            [
                "c96b1c3a.5abe8"
            ]
        ]
    },
    {
        "id": "c96b1c3a.5abe8",
        "type": "function",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "Play",
        "func": "\nfunction findObjectByKey(array, key, value) {\n\titems = [];\n\tvar cpt = 0;\n\tfor (var i = 0; i < array.length; i++) {\n\t\tif (array[i][key] === value) {\n\t\t\titems[cpt] = array[i];\n\t\t\tcpt++;\n\t\t}\n\t}\n\tif (items[0] !== undefined) {\n\t\treturn items;\n\t} else {\n\t\treturn null;\n\t}\n}\n\nvar lang = global.get(\"msgLang\");\nvar defaultSpeaker = global.get(\"defaultSpeaker\");\nvar tvFavorites = global.get(\"tvFavorites\");\nvar siteIdTv = global.get(\"siteIdTv\");\nif(defaultSpeaker === undefined){\n    defaultSpeaker = \"speaker\";\n}\nmsg.cmd={};\nmsg.payload = JSON.parse(msg.payload);\nmsg.cmd.siteId = msg.payload.siteId.replace(/_\\d+$/, \"\").trim();\nvar doAllRooms = false;\nvar intent = msg.payload.intent.intentName;\nif (intent === undefined) \n    return null;\n\nvar rawRoom = findObjectByKey(msg.payload.slots, 'slotName', 'room');\nvar rawFavorite = findObjectByKey(msg.payload.slots, 'entity', 'FavoriteType');\nvar rawSpeaker = findObjectByKey(msg.payload.slots, 'entity', 'SpeakerType');\n\n//node.warn(msg.payload);\n//node.warn(\"rawRoom: \"+ JSON.stringify(rawRoom) );\nvar theRoom = msg.payload.siteId;\n\nif (rawRoom !== null) {\n\tmsg.cmd.room = [];\n\tfor (var i = 0; i < rawRoom.length; i++) {\n\t\tmsg.cmd.room[i] = rawRoom[i].value.value.toLowerCase();\n\t\t//node.warn(\"msg.cmd.room[i]: \"+msg.cmd.room[i] + \"   msg.payload.siteId: \"+msg.payload.siteId);\n\t\tif (msg.cmd.room[i] === \"here\" || msg.cmd.room[i] === \"hier\" || msg.cmd.room[i] === \"ici\") {\n\t\t\ttheRoom = msg.payload.siteId;\n\t\t} else {\n    \t\tif (msg.cmd.room[i] === \"all\" || msg.cmd.room[i] === \"everywhere\" || msg.cmd.room[i] === \"ueberall\" || msg.cmd.room[i] === \"partout\") {\n    \t\t    doAllRooms = true;\n    \t\t} else {\n    \t\t    theRoom = msg.cmd.room[i].replace(/ /g, \"_\");\n    \t\t}\n\t\t}\n\t}\n}\n\nif (rawSpeaker !== null) {\n    //node.warn(\"rawSpeaker: \"+JSON.stringify(rawSpeaker));\n    msg.payload.speaker = rawSpeaker[0].value.value.trim().toLowerCase();\n} else {\n    msg.payload.speaker = defaultSpeaker.trim().toLowerCase();\n}\n\nmsg.payload.siteId = theRoom;\n\nif(msg.payload.siteId.toLowerCase().replace(/_\\d+$/,\"\").replace(/_/g,\"\") !== siteIdTv.toLowerCase().replace(/_\\d+$/,\"\").replace(/ /g,\"\")){\n    return null;\n}\n\n//node.warn(\" Will use msg.payload.siteId: \"+msg.payload.siteId);\n//global.set(\"siteIdTv\", msg.payload.siteId);\n\nif (rawFavorite !== null) {\n    //node.warn(\"rawFavorite: \"+JSON.stringify(rawFavorite));\n    msg.payload.favorite = rawFavorite[0].value.value.trim().toLowerCase();\n\n    global.set(\"msg.payload.favorite\", msg.payload.favorite);\n    \n    var found = tvFavorites.find(\n            function(str) { return str.toLowerCase() == msg.payload.favorite.toLowerCase(); }\n        );\n        \n    \n    if (found !== undefined) {\n        \n        global.set(\"defaultSpeaker\", \"tv\");\n        return [null, msg];\n        \n    }\n}\n\n//var msgFavorite = msg;\nvar sonosPlaylists = global.get(\"sonosPlaylists\");\nvar sonosFavorites = global.get(\"sonosFavorites\");  \n\nif(msg.payload.favorite !== undefined){\n\n    var searchItem = msg.payload.favorite;\n    //node.warn(\"searchItem : \"+searchItem);\n    \n    var found1 = sonosPlaylists.find(\n        function(str) { return str.toLowerCase() == searchItem.toLowerCase(); }\n        );\n    \n    var found2 = sonosFavorites.find(\n            function(str) { return str.toLowerCase() == searchItem.toLowerCase(); }\n        );\n    \n    if(found1 !== undefined || found2 !== undefined){\n        return null;\n    }\n}\n\n//node.warn(\"msg.payload.speaker: \"+msg.payload.speaker);\n    \nif (msg.payload.intent.confidenceScore < 0.6 || msg.payload.asrTokens!== undefined && msg.payload.asrTokens[0].length <= 1){\n    return null;\n}\n\nif(msg.payload.speaker === \"tv\"){\n    \n    global.set(\"defaultSpeaker\", \"tv\");\n    return [msg, null];\n    \n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 369,
        "y": 640,
        "wires": [
            [
                "4f471823.53c328",
                "8334af69.4007c"
            ],
            [
                "4f471823.53c328",
                "43c000dc.c066e"
            ]
        ]
    },
    {
        "id": "96e7ee3.9e5441",
        "type": "mqtt in",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "pause",
        "topic": "hermes/intent/ProKNX:pause",
        "qos": "2",
        "datatype": "auto",
        "broker": "b8fcf82.0729e08",
        "x": 239,
        "y": 1223,
        "wires": [
            [
                "6d01f5f0.588ffc"
            ]
        ]
    },
    {
        "id": "938d0ea7.7c8be",
        "type": "mqtt in",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "hermes/asr/textCaptured",
        "topic": "hermes/asr/textCaptured",
        "qos": "2",
        "datatype": "auto",
        "broker": "b8fcf82.0729e08",
        "x": 299,
        "y": 1140,
        "wires": [
            [
                "5047bb5e.4636d4"
            ]
        ]
    },
    {
        "id": "6d01f5f0.588ffc",
        "type": "function",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "Pause",
        "func": "\nfunction findObjectByKey(array, key, value) {\n\titems = [];\n\tvar cpt = 0;\n\tfor (var i = 0; i < array.length; i++) {\n\t\tif (array[i][key] === value) {\n\t\t\titems[cpt] = array[i];\n\t\t\tcpt++;\n\t\t}\n\t}\n\tif (items[0] !== undefined) {\n\t\treturn items;\n\t} else {\n\t\treturn null;\n\t}\n}\n\nvar lang = global.get(\"msgLang\");\nvar defaultSpeaker = global.get(\"defaultSpeaker\");\nvar tvFavorites = global.get(\"tvFavorites\");\nvar siteIdTv = global.get(\"siteIdTv\");\nif(defaultSpeaker === undefined){\n    defaultSpeaker = \"speaker\";\n}\nmsg.cmd={};\nmsg.payload = JSON.parse(msg.payload);\nmsg.cmd.siteId = msg.payload.siteId.replace(/_\\d+$/, \"\").trim();\nvar doAllRooms = false;\nvar intent = msg.payload.intent.intentName;\nif (intent === undefined) \n    return null;\n\nvar rawRoom = findObjectByKey(msg.payload.slots, 'slotName', 'room');\nvar rawFavorite = findObjectByKey(msg.payload.slots, 'entity', 'FavoriteType');\nvar rawSpeaker = findObjectByKey(msg.payload.slots, 'entity', 'SpeakerType');\n\n//node.warn(msg.payload);\n//node.warn(\"rawRoom: \"+ JSON.stringify(rawRoom) );\nvar theRoom = msg.payload.siteId;\n\nif (rawRoom !== null) {\n\tmsg.cmd.room = [];\n\tfor (var i = 0; i < rawRoom.length; i++) {\n\t\tmsg.cmd.room[i] = rawRoom[i].value.value.toLowerCase();\n\t\t//node.warn(\"msg.cmd.room[i]: \"+msg.cmd.room[i] + \"   msg.payload.siteId: \"+msg.payload.siteId);\n\t\tif (msg.cmd.room[i] === \"here\" || msg.cmd.room[i] === \"hier\" || msg.cmd.room[i] === \"ici\") {\n\t\t\ttheRoom = msg.payload.siteId;\n\t\t} else {\n    \t\tif (msg.cmd.room[i] === \"all\" || msg.cmd.room[i] === \"everywhere\" || msg.cmd.room[i] === \"ueberall\" || msg.cmd.room[i] === \"partout\") {\n    \t\t    doAllRooms = true;\n    \t\t} else {\n    \t\t    theRoom = msg.cmd.room[i].replace(/ /g, \"_\");\n    \t\t}\n\t\t}\n\t}\n}\n\nif (rawSpeaker !== null) {\n    //node.warn(\"rawSpeaker: \"+JSON.stringify(rawSpeaker));\n    msg.payload.speaker = rawSpeaker[0].value.value.trim().toLowerCase();\n} else {\n    msg.payload.speaker = defaultSpeaker.trim().toLowerCase();\n}\n\nmsg.payload.siteId = theRoom;\n\nif(msg.payload.siteId.toLowerCase().replace(/_\\d+$/,\"\").replace(/_/g,\"\") !== siteIdTv.toLowerCase().replace(/_\\d+$/,\"\").replace(/ /g,\"\")){\n    return null;\n}\n\n//node.warn(\" Will use msg.payload.siteId: \"+msg.payload.siteId);\n//global.set(\"siteIdTv\", msg.payload.siteId);\n\nif (rawFavorite !== null) {\n    //node.warn(\"rawFavorite: \"+JSON.stringify(rawFavorite));\n    msg.payload.favorite = rawFavorite[0].value.value.trim().toLowerCase();\n}\n\n//var msgFavorite = msg;\nvar sonosPlaylists = global.get(\"sonosPlaylists\");\nvar sonosFavorites = global.get(\"sonosFavorites\");  \n\nif(msg.payload.favorite !== undefined){\n\n    var searchItem = msg.payload.favorite;\n    //node.warn(\"searchItem : \"+searchItem);\n    \n    var found1 = sonosPlaylists.find(\n        function(str) { return str.toLowerCase() == searchItem.toLowerCase(); }\n        );\n    \n    var found2 = sonosFavorites.find(\n            function(str) { return str.toLowerCase() == searchItem.toLowerCase(); }\n        );\n    \n    if(found1 !== undefined || found2 !== undefined){\n        return null;\n    }\n}\n\n//node.warn(\"msg.payload.speaker: \"+msg.payload.speaker);\n    \nif (msg.payload.intent.confidenceScore < 0.6 || msg.payload.asrTokens!== undefined && msg.payload.asrTokens[0].length <= 1){\n    return null;\n}\n\nvar messageTv = flow.get(\"messageTv\");\n\nif(msg.payload.speaker === \"tv\" ){\n    \n    global.set(\"defaultSpeaker\", \"tv\");\n    \n    if(messageTv === \"off\"){\n        return [null, msg];\n    }else{\n        return [msg, null];\n    }\n\n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 379,
        "y": 1223,
        "wires": [
            [
                "70b113e1.5d88fc"
            ],
            [
                "e94234b4.05c088"
            ]
        ]
    },
    {
        "id": "5047bb5e.4636d4",
        "type": "function",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "Filter",
        "func": "msg.payload = JSON.parse(msg.payload);\nmsg.cmd = {};\nmsg.cmd.lang = global.get(\"msgLang\");\n\nif(msg.cmd.lang === \"de\"){\n    \n    if(msg.payload.text.includes(\"pause\")){\n            \n        flow.set(\"messageTv\", \"off\");\n    }else{\n        flow.set(\"messageTv\", \"on\");\n    }\n    \n    if(msg.payload.text.includes(\"kanal\")){\n        \n        flow.set(\"setScreen\", \"channel\");\n        global.set(\"defaultSpeaker\", \"tv\");\n    }else{\n        flow.set(\"setScreen\", \"media\");\n    }\n    \n    \n        \n    \n} else if(msg.cmd.lang === \"fr\"){\n    \n    if(msg.payload.text.includes(\"pause\")){\n            \n            flow.set(\"messageTv\", \"off\");\n            \n    }else{\n        flow.set(\"messageTv\", \"on\");\n    }\n    \n    if(msg.payload.text.includes(\"canal\")){\n        \n        flow.set(\"setScreen\", \"channel\");\n        global.set(\"defaultSpeaker\", \"tv\");\n    }else{\n        flow.set(\"setScreen\", \"media\");\n    }\n    \n}else{\n    \n    if(msg.payload.text.includes(\"pause\")){\n            \n        flow.set(\"messageTv\", \"off\");\n            \n    }else{\n        flow.set(\"messageTv\", \"on\");\n    }\n    \n    if(msg.payload.text.includes(\"channel\")){\n        \n        flow.set(\"setScreen\", \"channel\");\n        global.set(\"defaultSpeaker\", \"tv\");\n    }else{\n        flow.set(\"setScreen\", \"media\");\n    }\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 490,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "fccd5183.1935b",
        "type": "bravia-api",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "tv": "204aae5a.40fb72",
        "method": "audio:1.2:setAudioVolume",
        "payload": "{\"target\":\"speaker\", \"volume\":\"+6\"}",
        "name": "Volume up",
        "x": 725,
        "y": 1495,
        "wires": [
            []
        ]
    },
    {
        "id": "1c7cc162.d07ebf",
        "type": "bravia-api",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "tv": "204aae5a.40fb72",
        "method": "audio:1.2:setAudioVolume",
        "payload": "{\"target\":\"speaker\", \"volume\":\"-6\"}",
        "name": "Volume down",
        "x": 715,
        "y": 1555,
        "wires": [
            []
        ]
    },
    {
        "id": "2b29eb98.04ec64",
        "type": "bravia-api",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "tv": "204aae5a.40fb72",
        "method": "system:1.0:setPowerStatus",
        "payload": "{\"status\":true}",
        "name": "Power on",
        "x": 760,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "8334af69.4007c",
        "type": "bravia-api",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "tv": "204aae5a.40fb72",
        "method": "system:1.0:getPowerStatus",
        "payload": "",
        "name": "TV status",
        "x": 555,
        "y": 600,
        "wires": [
            [
                "8ab36445.d235b8"
            ]
        ],
        "l": false
    },
    {
        "id": "8ab36445.d235b8",
        "type": "switch",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "Is TV On?",
        "property": "payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "standby",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "active",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 615,
        "y": 600,
        "wires": [
            [
                "2b29eb98.04ec64"
            ],
            [
                "6476fadc.7df324"
            ]
        ],
        "l": false
    },
    {
        "id": "6476fadc.7df324",
        "type": "bravia-ircc",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "tv": "204aae5a.40fb72",
        "ircc": "Confirm",
        "name": "Play",
        "x": 770,
        "y": 600,
        "wires": []
    },
    {
        "id": "dac7ce68.29874",
        "type": "bravia-api",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "tv": "204aae5a.40fb72",
        "method": "audio:1.0:setAudioMute",
        "payload": "{\"status\":true}",
        "name": "Mute",
        "x": 730,
        "y": 441,
        "wires": [
            []
        ]
    },
    {
        "id": "47b5b7f2.c20298",
        "type": "bravia-api",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "tv": "204aae5a.40fb72",
        "method": "audio:1.0:setAudioMute",
        "payload": "{\"status\":false}",
        "name": "Unmute",
        "x": 740,
        "y": 489,
        "wires": [
            []
        ]
    },
    {
        "id": "f51376d0.cd7048",
        "type": "bravia-api",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "tv": "204aae5a.40fb72",
        "method": "audio:1.2:setAudioVolume",
        "payload": "",
        "name": "Set volume",
        "x": 874,
        "y": 1615,
        "wires": [
            []
        ]
    },
    {
        "id": "875a786c.7265c8",
        "type": "bravia-api",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "tv": "204aae5a.40fb72",
        "method": "audio:1.0:setAudioMute",
        "payload": "{\"status\":false}",
        "name": "Unmute",
        "x": 545,
        "y": 1495.6000061035156,
        "wires": [
            [
                "fccd5183.1935b"
            ]
        ]
    },
    {
        "id": "78c36ec.827669",
        "type": "bravia-api",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "tv": "204aae5a.40fb72",
        "method": "audio:1.0:setAudioMute",
        "payload": "{\"status\":false}",
        "name": "Unmute",
        "x": 544,
        "y": 1555,
        "wires": [
            [
                "1c7cc162.d07ebf"
            ]
        ]
    },
    {
        "id": "70b113e1.5d88fc",
        "type": "bravia-api",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "tv": "204aae5a.40fb72",
        "method": "system:1.0:setPowerStatus",
        "payload": "{\"status\":false}",
        "name": "Power off",
        "x": 540,
        "y": 1203,
        "wires": [
            []
        ]
    },
    {
        "id": "1ef782d4.76412d",
        "type": "bravia-api",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "tv": "204aae5a.40fb72",
        "method": "audio:1.0:setAudioMute",
        "payload": "{\"status\":false}",
        "name": "Unmute",
        "x": 404,
        "y": 1615,
        "wires": [
            [
                "21dfd053.29284"
            ]
        ]
    },
    {
        "id": "160dd2f1.80dbed",
        "type": "function",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "Set volume",
        "func": "const minLoudness = msg.payload[0].minVolume;\nconst maxLoudness = msg.payload[0].maxVolume;\nvar rawLoudness = flow.get(\"rawLoudness\");\nvar rawMin = flow.get(\"rawMin\");\nvar rawMax = flow.get(\"rawMax\");\nvar loudness = 1;\nvar nbrLoudness = '1';\n\n\nif(rawLoudness!==null){\n    loudness = rawLoudness[0].value.value;\n    nbrLoudness = Number(loudness);\n    if(loudness === undefined || rawLoudness[0].value.kind !== 'Number' || isNaN(nbrLoudness) === true){\n        node.warn(\"Skipping invalid volume\");\n        return;\n    }\n}\nif(rawMax!==null){\n    loudness = maxLoudness;\n}\nif(rawMin!==null){\n    loudness = minLoudness;\n}\nif(nbrLoudness>Number(maxLoudness)){\n    loudness = maxLoudness;\n}\n\nif(nbrLoudness<Number(minLoudness)){\n    loudness = minLoudness;    \n}\n\nloudness = String(loudness);\n\nmsg.payload = {\"target\":\"speaker\",\"volume\":loudness};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 714,
        "y": 1615,
        "wires": [
            [
                "f51376d0.cd7048"
            ]
        ]
    },
    {
        "id": "21dfd053.29284",
        "type": "bravia-api",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "tv": "204aae5a.40fb72",
        "method": "audio:1.0:getVolumeInformation",
        "payload": "",
        "name": "Volume info",
        "x": 554,
        "y": 1615,
        "wires": [
            [
                "160dd2f1.80dbed"
            ]
        ]
    },
    {
        "id": "9092034e.efa21",
        "type": "http response",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 475,
        "y": 1690,
        "wires": [],
        "l": false
    },
    {
        "id": "8d9d727a.14565",
        "type": "function",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "ChannelTvFavorites",
        "func": "function findObjectByKey(array, key, value) {\n\titems = [];\n\tvar cpt = 0;\n\tfor (var i = 0; i < array.length; i++) {\n\t\tif (array[i][key] === value) {\n\t\t\titems[cpt] = array[i];\n\t\t\tcpt++;\n\t\t}\n\t}\n\tif (items[0] !== undefined) {\n\t\treturn items;\n\t} else {\n\t\treturn null;\n\t}\n}\n\nvar lang = global.get(\"msgLang\");\nvar defaultSpeaker = global.get(\"defaultSpeaker\");\nif(defaultSpeaker === undefined){\n    defaultSpeaker = \"speaker\";\n}\nmsg.cmd={};\nmsg.payload = JSON.parse(msg.payload);\nvar doAllRooms = false;\nvar intent = msg.payload.intent.intentName;\nif (intent === undefined) \n    return null;\n\nvar rawRoom = findObjectByKey(msg.payload.slots, 'slotName', 'room');\nvar rawFavorite = findObjectByKey(msg.payload.slots, 'entity', 'FavoriteType');\nvar rawSpeaker = findObjectByKey(msg.payload.slots, 'entity', 'SpeakerType');\n\n//node.warn(msg.payload);\n//node.warn(\"rawRoom: \"+ JSON.stringify(rawRoom) );\nvar theRoom = msg.payload.siteId;\n\nif (rawRoom !== null) {\n\tmsg.cmd.room = [];\n\tfor (var i = 0; i < rawRoom.length; i++) {\n\t\tmsg.cmd.room[i] = rawRoom[i].value.value.toLowerCase();\n\t\t//node.warn(\"msg.cmd.room[i]: \"+msg.cmd.room[i] + \"   msg.payload.siteId: \"+msg.payload.siteId);\n\t\tif (msg.cmd.room[i] === \"here\" || msg.cmd.room[i] === \"hier\" || msg.cmd.room[i] === \"ici\") {\n\t\t\ttheRoom = msg.payload.siteId;\n\t\t} else {\n    \t\tif (msg.cmd.room[i] === \"all\" || msg.cmd.room[i] === \"everywhere\" || msg.cmd.room[i] === \"ueberall\" || msg.cmd.room[i] === \"partout\") {\n    \t\t    doAllRooms = true;\n    \t\t} else {\n    \t\t    theRoom = msg.cmd.room[i].replace(/ /g, \"_\");\n    \t\t}\n\t\t}\n\t}\n} \nmsg.payload.siteId = theRoom;\n//node.warn(\" Will use msg.payload.siteId: \"+msg.payload.siteId);\n//global.set(\"siteIdTv\", msg.payload.siteId);\n\nif (rawFavorite !== null) {\n    //node.warn(\"rawFavorite: \"+JSON.stringify(rawFavorite));\n    msg.payload.favorite = rawFavorite[0].value.value.trim().toLowerCase();\n    //node.warn(\"msg.payload.favorite: \"+msg.payload.favorite);\n}\n\n\nif (rawSpeaker !== null) {\n    //node.warn(\"rawSpeaker: \"+JSON.stringify(rawSpeaker));\n    msg.payload.speaker = rawSpeaker[0].value.value.trim().toLowerCase();\n} else {\n    msg.payload.speaker = defaultSpeaker;\n}\n\n//node.warn(\"msg.payload.speaker: \"+msg.payload.speaker);\n\n\nvar msgFav = msg.payload.favorite;\nvar tvFavorites = global.get(\"tvFavorites\");\nvar out = [];\n\nif(msg.payload.favorite === undefined){\n    return ;\n    \n} else {\n\n    for(var i = 0; i<tvFavorites.length; i++){\n        if(msgFav.toLowerCase() == tvFavorites[i].toLowerCase()){\n            out.push([msg]);\n        }else{\n            out.push([]);\n        }\n    }\n    return out;\n}\n\n",
        "outputs": 9,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 580,
        "y": 900,
        "wires": [
            [
                "6bba9f17.c4897"
            ],
            [
                "56005e67.6f577"
            ],
            [
                "d439b3d3.329f2"
            ],
            [
                "5ad3c5d8.6be7cc"
            ],
            [
                "d0f2cd7.cc1dc3"
            ],
            [
                "40ab2c00.bc1a94"
            ],
            [
                "28058acc.1b50b6"
            ],
            [
                "ae44b78e.260108"
            ],
            [
                "8d5df216.abbac"
            ]
        ]
    },
    {
        "id": "791516c8.bbbd98",
        "type": "bravia-ircc",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "tv": "204aae5a.40fb72",
        "ircc": "Num1",
        "name": "Num 1",
        "x": 890,
        "y": 760,
        "wires": []
    },
    {
        "id": "c825d679.936b48",
        "type": "bravia-ircc",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "tv": "204aae5a.40fb72",
        "ircc": "Num2",
        "name": "Num 2",
        "x": 890,
        "y": 800,
        "wires": []
    },
    {
        "id": "5ad3c5d8.6be7cc",
        "type": "bravia-ircc",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "tv": "204aae5a.40fb72",
        "ircc": "Num4",
        "name": "Num 4",
        "x": 890,
        "y": 880,
        "wires": []
    },
    {
        "id": "61ab07e7.590f38",
        "type": "bravia-ircc",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "tv": "204aae5a.40fb72",
        "ircc": "Num3",
        "name": "Num 3",
        "x": 890,
        "y": 840,
        "wires": []
    },
    {
        "id": "5427dadf.69e2b4",
        "type": "bravia-api",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "tv": "204aae5a.40fb72",
        "method": "appControl:1.0:getApplicationList",
        "payload": "",
        "name": "App List",
        "x": 500,
        "y": 1020,
        "wires": [
            [
                "692c2c14.f98664"
            ]
        ]
    },
    {
        "id": "373a9e06.357932",
        "type": "inject",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 235,
        "y": 1040,
        "wires": [
            [
                "5427dadf.69e2b4",
                "3bc50d00.590ff4"
            ]
        ],
        "l": false
    },
    {
        "id": "692c2c14.f98664",
        "type": "file",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "AppList",
        "filename": "AppList",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 640,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "4f471823.53c328",
        "type": "json",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 435,
        "y": 540,
        "wires": [
            [
                "b485c5b.3bae338"
            ]
        ],
        "l": false
    },
    {
        "id": "b485c5b.3bae338",
        "type": "file",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "tvPlay",
        "filename": "tvPlay",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 536,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "3bc50d00.590ff4",
        "type": "bravia-api",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "tv": "204aae5a.40fb72",
        "method": "system:1.0:getRemoteControllerInfo",
        "payload": "",
        "name": "Remote Controller Info",
        "x": 460,
        "y": 1060,
        "wires": [
            [
                "dd3fc3db.87d6a"
            ]
        ]
    },
    {
        "id": "dd3fc3db.87d6a",
        "type": "file",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "RemoteInfo",
        "filename": "RemoteInfo",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 650,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "ea457e19.953f6",
        "type": "function",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "AppTvFavorites",
        "func": "function findObjectByKey(array, key, value) {\n\titems = [];\n\tvar cpt = 0;\n\tfor (var i = 0; i < array.length; i++) {\n\t\tif (array[i][key].toLowerCase() === value.toLowerCase()) {\n\t\t\titems[cpt] = array[i];\n\t\t\tcpt++;\n\t\t}\n\t}\n\tif (items[0] !== undefined) {\n\t\treturn items;\n\t} else {\n\t\treturn null;\n\t}\n}\n\nmsg.cmd={};\nmsg.payload = JSON.parse(msg.payload);\nvar find = global.get(\"msg.payload.favorite\");\n\nif(find === \"disney plus\"){\n    find = \"Disney+\";\n}\n\nvar app = findObjectByKey(msg.payload, 'title', find);\n\n//node.warn(app);\n\nif(app === null){\n    \n    return [null, msg];\n    \n}else {\n    msg.payload = \"{\\\"uri\\\":\\\"\" + app[0].uri + \"\\\"}\";\n    return [msg, null];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 820,
        "wires": [
            [
                "7d54c2f1.ea0a5c"
            ],
            [
                "988024e7.082e38"
            ]
        ]
    },
    {
        "id": "efa211b1.c1cdd",
        "type": "file in",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "AppList",
        "filename": "AppList",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 235,
        "y": 820,
        "wires": [
            [
                "ea457e19.953f6"
            ]
        ],
        "l": false
    },
    {
        "id": "7d54c2f1.ea0a5c",
        "type": "bravia-api",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "tv": "204aae5a.40fb72",
        "method": "appControl:1.0:setActiveApp",
        "payload": "",
        "name": "setActiveApp",
        "x": 550,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "48a932d.f3877cc",
        "type": "file in",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "tvPlay",
        "filename": "tvPlay",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 435,
        "y": 900,
        "wires": [
            [
                "8d9d727a.14565"
            ]
        ],
        "l": false
    },
    {
        "id": "ef5a952d.1a9598",
        "type": "bravia-api",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "tv": "204aae5a.40fb72",
        "method": "system:1.0:setPowerStatus",
        "payload": "{\"status\":true}",
        "name": "Power on",
        "x": 675,
        "y": 640,
        "wires": [
            [
                "efa211b1.c1cdd"
            ]
        ],
        "l": false
    },
    {
        "id": "988024e7.082e38",
        "type": "bravia-api",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "tv": "204aae5a.40fb72",
        "method": "appControl:1.0:terminateApps",
        "payload": "",
        "name": "Terminate App",
        "x": 320,
        "y": 900,
        "wires": [
            [
                "48a932d.f3877cc"
            ]
        ]
    },
    {
        "id": "b5422185.7c14e",
        "type": "switch",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "Is TV On?",
        "property": "payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "standby",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "active",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 615,
        "y": 660,
        "wires": [
            [
                "ef5a952d.1a9598"
            ],
            [
                "efa211b1.c1cdd"
            ]
        ],
        "l": false
    },
    {
        "id": "43c000dc.c066e",
        "type": "bravia-api",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "tv": "204aae5a.40fb72",
        "method": "system:1.0:getPowerStatus",
        "payload": "",
        "name": "TV status",
        "x": 555,
        "y": 660,
        "wires": [
            [
                "b5422185.7c14e"
            ]
        ],
        "l": false
    },
    {
        "id": "992060df.ab554",
        "type": "function",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "",
        "func": "//set siteIdTv\n\nvar siteIdTv = msg.payload;\n\nString.prototype.sansAccent = function() {\n    var accent = [\n        /[\\300-\\306]/g, /[\\340-\\346]/g, // A, a\n        /[\\310-\\313]/g, /[\\350-\\353]/g, // E, e\n        /[\\314-\\317]/g, /[\\354-\\357]/g, // I, i\n        /[\\322-\\330]/g, /[\\362-\\370]/g, // O, o\n        /[\\331-\\334]/g, /[\\371-\\374]/g, // U, u\n        /[\\321]/g, /[\\361]/g, // N, n\n        /[\\307]/g, /[\\347]/g, // C, c\n    ];\n    var noaccent = ['A','a','E','e','I','i','O','o','U','u','N','n','C','c'];\n         \n    var str = this;\n    for(var i = 0; i < accent.length; i++){\n        str = str.replace(\"ä\", \"ae\");\n        str = str.replace(\"ü\", \"ue\");\n        str = str.replace(\"ö\", \"oe\");        \n        str = str.replace(accent[i], noaccent[i]);\n    }\n    return str;\n};\n\n\nglobal.set(\"siteIdTv\", siteIdTv.sansAccent()); \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 490,
        "y": 165,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "e7f7daa.3062728",
        "type": "inject",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "Set the TV room here !",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "Living room",
        "payloadType": "str",
        "x": 300,
        "y": 165,
        "wires": [
            [
                "992060df.ab554"
            ]
        ]
    },
    {
        "id": "7ce145d7.ff44cc",
        "type": "function",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "GET /siteIdTv ",
        "func": "var siteIdTv = global.get(\"siteIdTv\");\n\nif(msg.payload.siteId.toLowerCase().replace(/_\\d+$/,\"\").replace(/_/g,\"\") !== siteIdTv.toLowerCase().replace(/_\\d+$/,\"\").replace(/ /g,\"\")){\n    return null;\n}else{\n    return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 475,
        "y": 441,
        "wires": [
            [
                "116ef070.290f8"
            ]
        ],
        "l": false
    },
    {
        "id": "8f15c1fb.886be",
        "type": "function",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "GET /siteIdTv ",
        "func": "var siteIdTv = global.get(\"siteIdTv\");\n\nif(msg.payload.siteId.toLowerCase().replace(/_\\d+$/,\"\").replace(/_/g,\"\") !== siteIdTv.toLowerCase().replace(/_\\d+$/,\"\").replace(/ /g,\"\")){\n    return null;\n}else{\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 435,
        "y": 490,
        "wires": [
            [
                "7c54ae2.b7a755"
            ]
        ],
        "l": false
    },
    {
        "id": "4087eb67.a5a534",
        "type": "comment",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "IMPORTANT Manually set the siteIdTv  IMPORTANT ",
        "info": "It is strongly recommended to set a valid siteId for the TV (siteIdTv), the place where you place your TV. (eg: bedroom, office, living room)\n\nThe siteIdTv's must be an existing room from your installation see PRATGLAD or Aragon application. (e.g PRATGLAD's user interface -> Configure -> no. 3 -> Settings -> Rooms)",
        "x": 380,
        "y": 130,
        "wires": []
    },
    {
        "id": "66743754.667fe8",
        "type": "switch",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "Is TV On?",
        "property": "payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "standby",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "active",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 615,
        "y": 441,
        "wires": [
            [],
            [
                "dac7ce68.29874"
            ]
        ],
        "l": false
    },
    {
        "id": "116ef070.290f8",
        "type": "bravia-api",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "tv": "204aae5a.40fb72",
        "method": "system:1.0:getPowerStatus",
        "payload": "",
        "name": "TV status",
        "x": 555,
        "y": 441,
        "wires": [
            [
                "66743754.667fe8"
            ]
        ],
        "l": false
    },
    {
        "id": "7c54ae2.b7a755",
        "type": "bravia-api",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "tv": "204aae5a.40fb72",
        "method": "system:1.0:getPowerStatus",
        "payload": "",
        "name": "TV status",
        "x": 535,
        "y": 490,
        "wires": [
            [
                "b770a743.febc88"
            ]
        ],
        "l": false
    },
    {
        "id": "b770a743.febc88",
        "type": "switch",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "Is TV On?",
        "property": "payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "standby",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "active",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 615,
        "y": 490,
        "wires": [
            [],
            [
                "47b5b7f2.c20298"
            ]
        ],
        "l": false
    },
    {
        "id": "e94234b4.05c088",
        "type": "bravia-ircc",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "tv": "204aae5a.40fb72",
        "ircc": "Pause",
        "name": "Pause",
        "x": 530,
        "y": 1263,
        "wires": []
    },
    {
        "id": "e9a3d96f.392798",
        "type": "comment",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "IMPORTANT Define the TV Favorites here IMPORTANT ",
        "info": "",
        "x": 385,
        "y": 210,
        "wires": []
    },
    {
        "id": "fa0e57f5.e56668",
        "type": "debug",
        "z": "3ff699d2.ba1696",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 825,
        "y": 165,
        "wires": [],
        "l": false
    },
    {
        "id": "6de00efd.2d33",
        "type": "catch",
        "z": "3ff699d2.ba1696",
        "name": "",
        "scope": [
            "47a2cbc8.397b54",
            "3f355eac.3c4d62",
            "f132aee9.29ff58",
            "98df55b7.8846",
            "283824eb.6200f4",
            "eab2d7ab.ac4dd8",
            "6ad1ec67.33f874",
            "908e7fbd.62d008",
            "d154cb4b.a6e388",
            "2977b83.e482e48",
            "d5e99277.88637",
            "9549c556.6329f",
            "7be10ed0.2f4d7",
            "9b5ce168.60872",
            "ffab644e.b32bd",
            "f708a811.caa248",
            "efe7c9b7.b46d18",
            "c92dede.27dab1",
            "39f2aa12.6db8a6",
            "c166f5ae.b3d158",
            "261cf9fa.ea3cb6",
            "400b2a00.de02ec",
            "2921b1a.a98f34e",
            "ebfb48c9.b36338",
            "587ce7d8.0f8bb",
            "25b9d7cf.36579",
            "825f29e3.928a98",
            "c57220e2.8fe278"
        ],
        "uncaught": false,
        "x": 725,
        "y": 165,
        "wires": [
            [
                "fa0e57f5.e56668"
            ]
        ]
    },
    {
        "id": "5acad99a.eecc18",
        "type": "comment",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "DEBUG Sony Bravia",
        "info": "",
        "x": 755,
        "y": 130,
        "wires": []
    },
    {
        "id": "4686c67.80d8938",
        "type": "bravia-ircc",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "tv": "204aae5a.40fb72",
        "ircc": "Num5",
        "name": "Num 5",
        "x": 890,
        "y": 920,
        "wires": []
    },
    {
        "id": "a38b97fa.ae8f08",
        "type": "bravia-ircc",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "tv": "204aae5a.40fb72",
        "ircc": "Num6",
        "name": "Num 6",
        "x": 890,
        "y": 960,
        "wires": []
    },
    {
        "id": "f837ff73.f6394",
        "type": "bravia-ircc",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "tv": "204aae5a.40fb72",
        "ircc": "Num7",
        "name": "Num 7",
        "x": 890,
        "y": 1000,
        "wires": []
    },
    {
        "id": "eefa953f.dc3438",
        "type": "bravia-ircc",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "tv": "204aae5a.40fb72",
        "ircc": "Num8",
        "name": "Num 8",
        "x": 890,
        "y": 1040,
        "wires": []
    },
    {
        "id": "ed85831.1b99e8",
        "type": "bravia-ircc",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "tv": "204aae5a.40fb72",
        "ircc": "Num9",
        "name": "Num 9",
        "x": 890,
        "y": 1080,
        "wires": []
    },
    {
        "id": "6bba9f17.c4897",
        "type": "delay",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 795,
        "y": 760,
        "wires": [
            [
                "791516c8.bbbd98",
                "e5e33181.c4e84"
            ]
        ],
        "l": false
    },
    {
        "id": "56005e67.6f577",
        "type": "delay",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 795,
        "y": 800,
        "wires": [
            [
                "c825d679.936b48",
                "e5e33181.c4e84"
            ]
        ],
        "l": false
    },
    {
        "id": "d439b3d3.329f2",
        "type": "delay",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 795,
        "y": 840,
        "wires": [
            [
                "61ab07e7.590f38",
                "e5e33181.c4e84"
            ]
        ],
        "l": false
    },
    {
        "id": "b25a3a61.14d3b8",
        "type": "delay",
        "z": "3ff699d2.ba1696",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 795,
        "y": 880,
        "wires": [
            [
                "e5e33181.c4e84"
            ]
        ],
        "l": false
    },
    {
        "id": "d0f2cd7.cc1dc3",
        "type": "delay",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 795,
        "y": 920,
        "wires": [
            [
                "4686c67.80d8938",
                "e5e33181.c4e84"
            ]
        ],
        "l": false
    },
    {
        "id": "40ab2c00.bc1a94",
        "type": "delay",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 795,
        "y": 960,
        "wires": [
            [
                "a38b97fa.ae8f08",
                "e5e33181.c4e84"
            ]
        ],
        "l": false
    },
    {
        "id": "28058acc.1b50b6",
        "type": "delay",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 795,
        "y": 1000,
        "wires": [
            [
                "f837ff73.f6394",
                "e5e33181.c4e84"
            ]
        ],
        "l": false
    },
    {
        "id": "ae44b78e.260108",
        "type": "delay",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 795,
        "y": 1040,
        "wires": [
            [
                "eefa953f.dc3438",
                "e5e33181.c4e84"
            ]
        ],
        "l": false
    },
    {
        "id": "8d5df216.abbac",
        "type": "delay",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 795,
        "y": 1080,
        "wires": [
            [
                "ed85831.1b99e8",
                "e5e33181.c4e84"
            ]
        ],
        "l": false
    },
    {
        "id": "c5a589cd.b41668",
        "type": "function",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "Filter",
        "func": "// to filter which type of media ; channel or video?\n\nvar setScreen = flow.get(\"setScreen\");\n\n    if(setScreen === \"channel\"){\n        return [msg, null];\n    }else{\n        return [null, msg];\n    }",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 550,
        "y": 1330,
        "wires": [
            [
                "e995a8d.b370d58"
            ],
            [
                "1d6269d6.b162d6"
            ]
        ]
    },
    {
        "id": "e995a8d.b370d58",
        "type": "bravia-ircc",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "tv": "204aae5a.40fb72",
        "ircc": "ChannelUp",
        "name": "Channel Up",
        "x": 710,
        "y": 1310,
        "wires": []
    },
    {
        "id": "f4d4327f.dc351",
        "type": "bravia-ircc",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "tv": "204aae5a.40fb72",
        "ircc": "ChannelDown",
        "name": "Channel Down",
        "x": 720,
        "y": 1390,
        "wires": []
    },
    {
        "id": "6d26826.a69e37c",
        "type": "function",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "Filter",
        "func": "// to filter which type of media ; channel or video?\n\nvar setScreen = flow.get(\"setScreen\");\n\n    if(setScreen === \"channel\"){\n        return [msg, null];\n    }else{\n        return [null, msg];\n    }",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 550,
        "y": 1410,
        "wires": [
            [
                "f4d4327f.dc351"
            ],
            [
                "652fdd6c.536ce4"
            ]
        ]
    },
    {
        "id": "a43de525.2e9ca8",
        "type": "bravia-ircc",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "tv": "204aae5a.40fb72",
        "ircc": "Confirm",
        "name": "Confirm",
        "x": 1090,
        "y": 885,
        "wires": []
    },
    {
        "id": "e5e33181.c4e84",
        "type": "delay",
        "z": "3ff699d2.ba1696",
        "g": "c953472.cc5afb8",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 990,
        "y": 885,
        "wires": [
            [
                "a43de525.2e9ca8"
            ]
        ],
        "l": false
    },
    {
        "id": "b8fcf82.0729e08",
        "type": "mqtt-broker",
        "z": "3ff699d2.ba1696",
        "name": "-",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "info": "-"
    },
    {
        "id": "204aae5a.40fb72",
        "type": "bravia-tv",
        "name": "SONY BRAVIA TV",
        "host": "192.168.x.x",
        "port": "80",
        "psk": "xxxx",
        "timeout": "5000"
    }
]
