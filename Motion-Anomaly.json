[
    {
        "id": "9912ebf0.d31d98",
        "type": "tab",
        "label": "SHELLY MOTION-ANOMALY",
        "disabled": false,
        "info": ""
    },
    {
        "id": "16f01b3.1422a65",
        "type": "group",
        "z": "9912ebf0.d31d98",
        "name": "SHELLY - Motion Anomaly",
        "style": {
            "label": true
        },
        "nodes": [
            "1437cb5b.78bf85",
            "aa06a450.447a6",
            "436e24.3c7821dc",
            "7eb8a14e.f17878",
            "8f85d505.5e8a2",
            "f89004a6.d75d98",
            "4131c677.7cc378",
            "f759c2f9.92fe08",
            "96dc7ee1.c72178",
            "3cb041a.aee3d3e",
            "f891f86a.dd3188",
            "71c43afb.23109c",
            "4b714be7.8ee88c",
            "a6450ec0.94678",
            "44cc5004.ca59d8",
            "46501012.d5f7a",
            "3cc2d420.66eca4",
            "3e9ee410.08b9fc",
            "ef5602ed.bcb3c8",
            "6002d4ba.b54bf4",
            "b19a0760.30442",
            "29df3d4c.f046e2",
            "aa59cdb0.22552",
            "f0ea0aa4.ee7d6",
            "8877dd15.104c",
            "141024fd.2f984b",
            "2106b62b.2ae94a",
            "490a62f8.b270ac",
            "571f7c66.dd5aa4",
            "1ab7c2e4.5d0f95"
        ],
        "x": 14,
        "y": 39,
        "w": 1052,
        "h": 522
    },
    {
        "id": "5dd55bb8.47309c",
        "type": "group",
        "z": "9912ebf0.d31d98",
        "name": "SHELLY - Debugging",
        "style": {
            "label": true
        },
        "nodes": [
            "78082009.a37ae",
            "464255c4.19455c",
            "95bd7b8.118a408",
            "b8052dfb.95528"
        ],
        "x": 454,
        "y": 599,
        "w": 312,
        "h": 162
    },
    {
        "id": "75274208.8c0934",
        "type": "group",
        "z": "9912ebf0.d31d98",
        "name": "SHELLY - Battery Level",
        "style": {
            "label": true
        },
        "nodes": [
            "62312e15.231cf",
            "e3c96b97.fb93",
            "75d34062.2d707",
            "7e888a3c.0407ac",
            "979c6095.c4cdd",
            "f2adf906.6401a",
            "b57c5b02.0e0358"
        ],
        "x": 14,
        "y": 599,
        "w": 412,
        "h": 182
    },
    {
        "id": "1437cb5b.78bf85",
        "type": "mqtt out",
        "z": "9912ebf0.d31d98",
        "g": "16f01b3.1422a65",
        "name": "MA publisher",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "50a4494.81119b8",
        "x": 450,
        "y": 100,
        "wires": []
    },
    {
        "id": "aa06a450.447a6",
        "type": "function",
        "z": "9912ebf0.d31d98",
        "g": "16f01b3.1422a65",
        "name": "",
        "func": "var isOccupied = false;\nvar sensorname =\"\";\n\nif (msg.payload!==undefined && msg.payload.length>0){\n    msg.payload = JSON.parse(msg.payload);\n    if (msg.payload.motion==true){\n        \n        var language = global.get(\"msgLang\");\n        var siteId = global.get(\"msgServerSiteId\").replace(/_\\d+$/, \"\").trim();\n        var msgText = {payload:[]};\n        \n        //motion detected\n        node.warn(\"Motion sensor \" + msg.topic.split(\"/\")[1].split(\"-\")[1] +\" state is \" + msg.payload.motion);\n       sensorname= msg.topic.split(\"/\")[1].split(\"-\")[1];\n       global.set(\"sensorname\", sensorname); \n        var payload = {type:\"motion\", isOccupied:true};\n        msg.payload = JSON.stringify(payload);\n      //  msg.payload.id = msg.topic.split(\"/\")[1].split(\"-\")[1];\n        msg.topic= \"motion_anomaly/sensor/\"+ sensorname;\n        \n        /*if (language === \"de\") {\n         msgText.payload = {\n          text: \"Anwesenheit erkannt\",\n          siteId: siteId,\n          lang: \"de-DE\"\n            };\n        } else if (language === \"fr\") {\n         msgText.payload = {\n          text: \"Présence détectée\",\n          siteId: siteId,\n          lang: \"fr-FR\"\n            };\n        } else {\n         msgText.payload = {\n          text: \"Presence detected\",\n          siteId: siteId,\n          lang: \"en-UK\"\n            };\n        }*/\n        \n        return msg;\n    }\n    else{\n        \n        //no motion detected\n        node.warn(\"Motion sensor \" + msg.topic.split(\"/\")[1].split(\"-\")[1] +\" state is \" + msg.payload.motion);\n       sensorname= msg.topic.split(\"/\")[1].split(\"-\")[1];\n       global.set(\"sensorname\", sensorname); \n        var payload = {type:\"motion\", isOccupied:false};\n        msg.payload = JSON.stringify(payload);\n      //  msg.payload.id = msg.topic.split(\"/\")[1].split(\"-\")[1];\n        msg.topic= \"motion_anomaly/sensor/\"+ sensorname;\n        \n        return msg;\n    }\n    \n    \n    \n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 280,
        "y": 119,
        "wires": [
            [
                "1437cb5b.78bf85"
            ]
        ]
    },
    {
        "id": "436e24.3c7821dc",
        "type": "mqtt in",
        "z": "9912ebf0.d31d98",
        "g": "16f01b3.1422a65",
        "name": "Motion",
        "topic": "shellies/+/status",
        "qos": "2",
        "datatype": "auto",
        "broker": "50a4494.81119b8",
        "x": 130,
        "y": 119,
        "wires": [
            [
                "aa06a450.447a6",
                "2106b62b.2ae94a"
            ]
        ]
    },
    {
        "id": "7eb8a14e.f17878",
        "type": "mqtt in",
        "z": "9912ebf0.d31d98",
        "g": "16f01b3.1422a65",
        "name": "Sensor",
        "topic": "shellies/+/sensor/state",
        "qos": "2",
        "datatype": "auto",
        "broker": "50a4494.81119b8",
        "x": 130,
        "y": 200,
        "wires": [
            [
                "aa59cdb0.22552",
                "8f85d505.5e8a2",
                "2106b62b.2ae94a"
            ]
        ]
    },
    {
        "id": "8f85d505.5e8a2",
        "type": "function",
        "z": "9912ebf0.d31d98",
        "g": "16f01b3.1422a65",
        "name": "",
        "func": "var isOccupied = false;\n\nif (msg.payload!==undefined && msg.payload.length>0){\n   if (msg.payload == \"open\"){\n        //door open\n        //flow.set(\"type\",\"door\");\n        var language = global.get(\"msgLang\");\n        var siteId = global.get(\"msgServerSiteId\").replace(/_\\d+$/, \"\").trim();\n        var msgText = {payload:[]};\n        \n        if(msg.payload == \"open\"){\n            if (language === \"de\") {\n                msgText.payload = {\n                text: \"Die Tür ist offen\",\n                siteId: siteId,\n                lang: \"de-DE\"\n                };\n            } else if (language === \"fr\") {\n            msgText.payload = {\n              text: \"La porte est ouverte\",\n              siteId: siteId,\n              lang: \"fr-FR\"\n                };\n            } else {\n             msgText.payload = {\n              text: \"The door is open\",\n              siteId: siteId,\n              lang: \"en-UK\"\n                };\n            }\n        }\n        \n        var type=\"door\";\n        var payload = {type:\"door\"};\n        msg.payload = JSON.stringify(payload);\n        //msg.payload.id = msg.topic.split(\"/\")[1].split(\"-\")[1];\n        msg.topic= \"motion_anomaly/sensor/\"+ msg.topic.split(\"/\")[1].split(\"-\")[1];\n        \n        return [msg, msgText]; \n    }else if(msg.payload == \"close\"){\n        //door close\n        //flow.set(\"type\",\"door\");\n        var language = global.get(\"msgLang\");\n        var siteId = global.get(\"msgServerSiteId\").replace(/_\\d+$/, \"\").trim();\n        var msgText = {payload:[]};\n        \n        if(msg.payload == \"close\"){\n        if (language === \"de\") {\n             msgText.payload = {\n              text: \"Die Tür ist geschlossen\",\n              siteId: siteId,\n              lang: \"de-DE\"\n                };\n            } else if (language === \"fr\") {\n             msgText.payload = {\n              text: \"La porte est fermée\",\n              siteId: siteId,\n              lang: \"fr-FR\"\n                };\n            } else {\n             msgText.payload = {\n              text: \"The door is closed\",\n              siteId: siteId,\n              lang: \"en-UK\"\n                };\n            }\n        return [null,msgText];\n            \n        }\n    }\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 280,
        "y": 240,
        "wires": [
            [
                "f89004a6.d75d98"
            ],
            [
                "3e9ee410.08b9fc"
            ]
        ]
    },
    {
        "id": "f89004a6.d75d98",
        "type": "mqtt out",
        "z": "9912ebf0.d31d98",
        "g": "16f01b3.1422a65",
        "name": "MA publisher",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "50a4494.81119b8",
        "x": 450,
        "y": 240,
        "wires": []
    },
    {
        "id": "4131c677.7cc378",
        "type": "mqtt in",
        "z": "9912ebf0.d31d98",
        "g": "16f01b3.1422a65",
        "name": "MA subscriber",
        "topic": "motion_anomaly/info",
        "qos": "2",
        "datatype": "auto",
        "broker": "50a4494.81119b8",
        "x": 120,
        "y": 400,
        "wires": [
            [
                "96dc7ee1.c72178"
            ]
        ]
    },
    {
        "id": "f759c2f9.92fe08",
        "type": "function",
        "z": "9912ebf0.d31d98",
        "g": "16f01b3.1422a65",
        "name": "Test MA",
        "func": "if (msg.payload!==undefined && msg.payload.length>0){\n    msg.payload = JSON.parse(msg.payload);\n    if (msg.payload.type==\"motion\" || msg.payload.type==\"door\" ){\n        var sensorname = global.get(\"sensorname\");\n        //node.warn(\"Motion sensor \" + sensorname +\" state is \" + msg.payload.motion);\n        msg.payload= {\n                    \"training\": {\n                    },\n                        \"prediction\": {\n                             \"sensors\": {\n                                sensorname : {\n                                    \"home\": {\n                                         \"observedCount\": 30,\n                                         \"onePercentQuantile\": 10\n                                            }\n                                        }\n                                    }\n                                 }\n                    };   \n    return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 335,
        "y": 489,
        "wires": [
            [
                "96dc7ee1.c72178"
            ]
        ]
    },
    {
        "id": "96dc7ee1.c72178",
        "type": "function",
        "z": "9912ebf0.d31d98",
        "g": "16f01b3.1422a65",
        "name": "MA detected?",
        "func": "let anomalyCount = 0;\nlet strictlyViolated = false;\nmsg.payload = JSON.parse(msg.payload);\nfor (const [sensorName, sensorData] of Object.entries(\n         msg.payload.prediction.sensors)) {\n  if (sensorData.home.observedCount > sensorData.home.onePercentQuantile) {\n    continue;\n  }\n\n  strictlyViolated = strictlyViolated ||\n      sensorData.home.observedCount < sensorData.home.onePercentQuantile;\n  anomalyCount++;\n}\n\n//var length = Object.keys(msg.payload.prediction.sensors).length;\n//node.warn(length);\n\nmsg.payload =\n    (anomalyCount == Object.keys(msg.payload.prediction.sensors).length) &&\n    strictlyViolated;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 485,
        "y": 419,
        "wires": [
            [
                "f891f86a.dd3188",
                "3cc2d420.66eca4",
                "6002d4ba.b54bf4",
                "490a62f8.b270ac",
                "571f7c66.dd5aa4"
            ]
        ]
    },
    {
        "id": "3cb041a.aee3d3e",
        "type": "inject",
        "z": "9912ebf0.d31d98",
        "g": "16f01b3.1422a65",
        "name": "TEST - Motion sensor ",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"type\":\"motion\",\"isOccupied\":true}",
        "payloadType": "str",
        "x": 175,
        "y": 480,
        "wires": [
            [
                "f759c2f9.92fe08"
            ]
        ],
        "l": false
    },
    {
        "id": "f891f86a.dd3188",
        "type": "function",
        "z": "9912ebf0.d31d98",
        "g": "16f01b3.1422a65",
        "name": "save report",
        "func": "var d = new Date();\nvar t = d.toLocaleTimeString();\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\nvar reports = global.get(\"reports\", reports);\nif(reports !== undefined || reports !== null ){\n    reports = \"\";\n}\nif(reports.length>200){\n    reports = \"\";\n}\nvar lang = global.get(\"msgLang\");\nif(msg.payload === true){\n        var reports = \"\";\n        //var newReport = \"\";\n        if (lang === \"de\") {\n            newReport = \"Letzte Bewegungsstörung festgestellt bei \" + t + \" das \" + d.getUTCDate() + monthNames[d.getMonth()] + d.getUTCFullYear() ;\n        } else if (lang === \"fr\") {\n            newReport = \"Dernière anomalie de mouvement détectée à \" + t + \" le \" + d.getUTCDate() + monthNames[d.getMonth()] + d.getUTCFullYear() ;\n        } else {\n            newReport = \"Last Motion anomaly detected at \" + t + \"the\" + d.getUTCDate() + monthNames[d.getMonth()] + d.getUTCFullYear() ;\n        }\n        if(!reports.includes(newReport)){\n            reports += newReport;\n        }\n        global.set(\"reports\", reports);\n        msg.payload = reports; \n        return [msg];\n   \n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 530,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "71c43afb.23109c",
        "type": "comment",
        "z": "9912ebf0.d31d98",
        "g": "16f01b3.1422a65",
        "name": "Treatment of MA message",
        "info": "the message will be listen and treated here to determine if there's any motion anomaly",
        "x": 150,
        "y": 340,
        "wires": []
    },
    {
        "id": "4b714be7.8ee88c",
        "type": "inject",
        "z": "9912ebf0.d31d98",
        "g": "16f01b3.1422a65",
        "name": "TEST - Door sensor",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"type\":\"door\",\"isOccupied\":true}",
        "payloadType": "str",
        "x": 175,
        "y": 520,
        "wires": [
            [
                "f759c2f9.92fe08"
            ]
        ],
        "l": false
    },
    {
        "id": "a6450ec0.94678",
        "type": "pushbullet",
        "z": "9912ebf0.d31d98",
        "g": "16f01b3.1422a65",
        "config": "63f70bf7.32f2c4",
        "pushtype": "note",
        "title": "Notification MA",
        "chan": "",
        "name": "",
        "x": 920,
        "y": 480,
        "wires": []
    },
    {
        "id": "44cc5004.ca59d8",
        "type": "e-mail",
        "z": "9912ebf0.d31d98",
        "g": "16f01b3.1422a65",
        "server": "smtp.gmail.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "lilostitch171299@gmail.com",
        "dname": "mail",
        "x": 950,
        "y": 425,
        "wires": []
    },
    {
        "id": "46501012.d5f7a",
        "type": "function",
        "z": "9912ebf0.d31d98",
        "g": "16f01b3.1422a65",
        "name": "",
        "func": "msg = {\n    payload : \"Motion anomaly detected at \" + Date().toString(),\n    topic : \"Motion Anomaly!\"\n};\nnode.warn(\"email in\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 820,
        "y": 425,
        "wires": [
            [
                "44cc5004.ca59d8"
            ]
        ]
    },
    {
        "id": "3cc2d420.66eca4",
        "type": "switch",
        "z": "9912ebf0.d31d98",
        "g": "16f01b3.1422a65",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 750,
        "y": 480,
        "wires": [
            [
                "a6450ec0.94678",
                "46501012.d5f7a"
            ]
        ]
    },
    {
        "id": "3e9ee410.08b9fc",
        "type": "link out",
        "z": "9912ebf0.d31d98",
        "g": "16f01b3.1422a65",
        "name": "",
        "links": [],
        "x": 395,
        "y": 300,
        "wires": []
    },
    {
        "id": "f0ea0aa4.ee7d6",
        "type": "file",
        "z": "9912ebf0.d31d98",
        "d": true,
        "g": "16f01b3.1422a65",
        "name": "",
        "filename": "/opt/node-red/logs/test.logs",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 840,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "aa59cdb0.22552",
        "type": "function",
        "z": "9912ebf0.d31d98",
        "d": true,
        "g": "16f01b3.1422a65",
        "name": "log file",
        "func": "if (msg.payload !== undefined || msg.payload.length>0){\n    \n    var d=new Date();\n    var t= d.toLocaleTimeString();\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n     \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    var day= d.getUTCDate() + monthNames[d.getMonth()] + d.getUTCFullYear() ;\n    \n    if (msg.payload == true){\n\n        //for the log file\n        msg.payload ={type:\"door\", device:\"KNXdoor\", state:\"open\", Time:t, Day:day};\n    \n        return [msg,msg,null];\n    }\n    \n    if (msg.payload == false){\n\n        //for the log file\n        msg.payload ={type:\"door\", device:\"KNXdoor\", state:\"close\", Time:t, Day:day};\n    \n        return [msg,null,null];\n    }\n    \n    else if (msg.payload == \"open\"){\n       //for the log file\n        msg.payload ={type:\"door\", device:\"SHELLYdoor\", state:\"open\", Time:t, Day:day};\n        return [msg,null,msg];\n   }\n   \n   else if(msg.payload == \"close\"){\n       //for the log file\n        msg.payload ={type:\"door\", device:\"SHELLYdoor\", state:\"close\", Time:t, Day:day};\n        return [msg,null,null];\n   }\n   \n}",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 630,
        "y": 200,
        "wires": [
            [
                "f0ea0aa4.ee7d6"
            ],
            [
                "8877dd15.104c"
            ],
            [
                "141024fd.2f984b"
            ]
        ]
    },
    {
        "id": "8877dd15.104c",
        "type": "file",
        "z": "9912ebf0.d31d98",
        "d": true,
        "g": "16f01b3.1422a65",
        "name": "",
        "filename": "/opt/node-red/logs/knxdoor.logs",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 850,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "141024fd.2f984b",
        "type": "file",
        "z": "9912ebf0.d31d98",
        "d": true,
        "g": "16f01b3.1422a65",
        "name": "",
        "filename": "/opt/node-red/logs/shellydoor.logs",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 860,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "ef5602ed.bcb3c8",
        "type": "file",
        "z": "9912ebf0.d31d98",
        "g": "16f01b3.1422a65",
        "name": "",
        "filename": "/opt/node-red/logs/output",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 920,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "6002d4ba.b54bf4",
        "type": "function",
        "z": "9912ebf0.d31d98",
        "g": "16f01b3.1422a65",
        "name": "log file",
        "func": "if (msg.payload !== undefined || msg.payload.length>0){\n    \n    var d=new Date();\n    var t= d.toLocaleTimeString();\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n     \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    var day= d.getUTCDate() + monthNames[d.getMonth()] + d.getUTCFullYear() ;\n    \n    if (msg.payload == true || msg.payload == false){\n\n        //for the log file\n        msg.payload ={type:msg.payload,Time:t, Day:day};\n    \n        return msg;\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 710,
        "y": 366,
        "wires": [
            [
                "ef5602ed.bcb3c8"
            ]
        ]
    },
    {
        "id": "b19a0760.30442",
        "type": "file",
        "z": "9912ebf0.d31d98",
        "g": "16f01b3.1422a65",
        "name": "MA logs",
        "filename": "/opt/node-red/logs/MA_logs",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 320,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "29df3d4c.f046e2",
        "type": "comment",
        "z": "9912ebf0.d31d98",
        "g": "16f01b3.1422a65",
        "name": "Detection of events",
        "info": "The flow below publish the input events created by shelly motion and door sensors to motion_anomaly.",
        "x": 130,
        "y": 80,
        "wires": []
    },
    {
        "id": "62312e15.231cf",
        "type": "comment",
        "z": "9912ebf0.d31d98",
        "g": "75274208.8c0934",
        "name": "ReadME deviceInfo ",
        "info": "Link the Motion and Sensor node to have spoken feedback by the voice assistant when the battery level is low.",
        "x": 130,
        "y": 640,
        "wires": []
    },
    {
        "id": "e3c96b97.fb93",
        "type": "mqtt in",
        "z": "9912ebf0.d31d98",
        "g": "75274208.8c0934",
        "name": "Motion",
        "topic": "shellies/+/status",
        "qos": "2",
        "datatype": "auto",
        "broker": "50a4494.81119b8",
        "x": 90,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "75d34062.2d707",
        "type": "mqtt in",
        "z": "9912ebf0.d31d98",
        "g": "75274208.8c0934",
        "name": "Sensor",
        "topic": "shellies/+/sensor/battery",
        "qos": "2",
        "datatype": "auto",
        "broker": "50a4494.81119b8",
        "x": 90,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "7e888a3c.0407ac",
        "type": "function",
        "z": "9912ebf0.d31d98",
        "g": "75274208.8c0934",
        "name": "report",
        "func": "var reports = global.get(\"reports\", reports);\nif(reports === undefined || reports === null ){\n    reports = \"\";\n}\nif(reports.length>200){\n    reports = \"\";\n}\nvar lang = global.get(\"msgLang\");\nif(msg.payload.bat<50){\n    var newReport = \"\";\n    if (lang === \"de\") {\n        newReport = \"Der Batteriestand des \" + msg.topic.split(\"/\")[1].split(\"-\")[1].slice(7,12) + \" ist \" + msg.payload.bat + \" Prozent. \";\n    } else if (lang === \"fr\") {\n        newReport = \"Le niveau de batterie du \" + msg.topic.split(\"/\")[1].split(\"-\")[1].slice(7,12) + \" est du \" + msg.payload.bat + \" pour cent. \";\n    } else {\n        newReport = msg.topic.split(\"/\")[1].split(\"-\")[1].slice(7,12) + \" battery level is \" + msg.payload.bat + \" percent. \";\n    }\n    if(!reports.includes(newReport)){\n        reports += newReport;\n    }\n    global.set(\"reports\", reports);\n    msg.payload = reports; \n    return [msg];\n} else {\n    msg.payload = msg.topic.split(\"/\")[1].split(\"-\")[1].slice(7,12) + \": battery level is: \" + msg.payload.bat; \n    return [msg];\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 350,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "979c6095.c4cdd",
        "type": "json",
        "z": "9912ebf0.d31d98",
        "g": "75274208.8c0934",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 210,
        "y": 680,
        "wires": [
            [
                "7e888a3c.0407ac"
            ]
        ]
    },
    {
        "id": "f2adf906.6401a",
        "type": "json",
        "z": "9912ebf0.d31d98",
        "g": "75274208.8c0934",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 210,
        "y": 740,
        "wires": [
            [
                "b57c5b02.0e0358"
            ]
        ]
    },
    {
        "id": "b57c5b02.0e0358",
        "type": "function",
        "z": "9912ebf0.d31d98",
        "g": "75274208.8c0934",
        "name": "report",
        "func": "var reports = global.get(\"reports\", reports);\nif(reports === undefined || reports === null ){\n    reports = \"\";\n}\nif(reports.length>200){\n    reports = \"\";\n}\nvar lang = global.get(\"msgLang\");\nif(msg.payload<50){\n    var newReport = \"\";\n    if (lang === \"de\") {\n        newReport = \"Der Batteriestand des \" + msg.topic.split(\"/\")[1].split(\"-\")[1].slice(7,12) + \" ist \" + msg.payload + \" Prozent. \";\n    } else if (lang === \"fr\") {\n        newReport = \"Le niveau de batterie du \" + msg.topic.split(\"/\")[1].split(\"-\")[1].slice(7,12) + \" est du \" + msg.payload + \" pour cent. \";\n    } else {\n        newReport = msg.topic.split(\"/\")[1].split(\"-\")[1].slice(7,12) + \" battery level is \" + msg.payload + \" percent. \";\n    }\n    if(!reports.includes(newReport)){\n        reports += newReport;\n    }\n    global.set(\"reports\", reports);\n    msg.payload = reports; \n    return [msg];\n} else {\n    msg.payload = msg.topic.split(\"/\")[1].split(\"-\")[1].slice(7,12) + \": battery level is: \" + msg.payload; \n    return [msg];\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 350,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "464255c4.19455c",
        "type": "catch",
        "z": "9912ebf0.d31d98",
        "g": "5dd55bb8.47309c",
        "name": "",
        "scope": [
            "aa06a450.447a6",
            "8f85d505.5e8a2",
            "4131c677.7cc378",
            "f891f86a.dd3188",
            "9dbc46e.c8a6eb8",
            "aa59cdb0.22552",
            "7e888a3c.0407ac",
            "b57c5b02.0e0358",
            "96dc7ee1.c72178"
        ],
        "uncaught": false,
        "x": 530,
        "y": 680,
        "wires": [
            [
                "95bd7b8.118a408"
            ]
        ]
    },
    {
        "id": "95bd7b8.118a408",
        "type": "debug",
        "z": "9912ebf0.d31d98",
        "g": "5dd55bb8.47309c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 680,
        "wires": []
    },
    {
        "id": "78082009.a37ae",
        "type": "comment",
        "z": "9912ebf0.d31d98",
        "g": "5dd55bb8.47309c",
        "name": "Shelly Debugging",
        "info": "Activate the debug node to see the log and errors.",
        "x": 560,
        "y": 640,
        "wires": []
    },
    {
        "id": "b8052dfb.95528",
        "type": "link in",
        "z": "9912ebf0.d31d98",
        "g": "5dd55bb8.47309c",
        "name": "",
        "links": [
            "2106b62b.2ae94a",
            "490a62f8.b270ac"
        ],
        "x": 495,
        "y": 720,
        "wires": [
            [
                "95bd7b8.118a408"
            ]
        ]
    },
    {
        "id": "2106b62b.2ae94a",
        "type": "link out",
        "z": "9912ebf0.d31d98",
        "g": "16f01b3.1422a65",
        "name": "",
        "links": [
            "b8052dfb.95528",
            "5b3f7c0f.5349d4"
        ],
        "x": 215,
        "y": 160,
        "wires": []
    },
    {
        "id": "83ec7bbb.9901d",
        "type": "comment",
        "z": "9912ebf0.d31d98",
        "name": "Version 1:07-06-2021",
        "info": "What was changed :\n1. Adding of ReadME debugging and ReadME        deviceinfo\n2. proknx/alarm mqtt message to skyresponse",
        "x": 1120,
        "y": 20,
        "wires": []
    },
    {
        "id": "490a62f8.b270ac",
        "type": "link out",
        "z": "9912ebf0.d31d98",
        "g": "16f01b3.1422a65",
        "name": "",
        "links": [
            "b8052dfb.95528",
            "5b3f7c0f.5349d4"
        ],
        "x": 675,
        "y": 420,
        "wires": []
    },
    {
        "id": "571f7c66.dd5aa4",
        "type": "mqtt out",
        "z": "9912ebf0.d31d98",
        "g": "16f01b3.1422a65",
        "name": "",
        "topic": "proknx/alarm",
        "qos": "",
        "retain": "",
        "broker": "f96ab142.d8bab8",
        "x": 750,
        "y": 520,
        "wires": []
    },
    {
        "id": "1ab7c2e4.5d0f95",
        "type": "comment",
        "z": "9912ebf0.d31d98",
        "g": "16f01b3.1422a65",
        "name": "<-- ReadME debugging",
        "info": "To have a spoken feedback by the voice control when the door is open or close, the node in the left must be linked to the speaker :\n1. Double click the node on the left.\n2. Go to the FEEDBACKS.\n3. Check the SPEAKER IN (API).\n4. Click done and save node-red.",
        "x": 520,
        "y": 300,
        "wires": []
    },
    {
        "id": "50a4494.81119b8",
        "type": "mqtt-broker",
        "z": "9912ebf0.d31d98",
        "name": "localhost:1883",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "info": "-"
    },
    {
        "id": "63f70bf7.32f2c4",
        "type": "pushbullet-config",
        "name": "Ahda's"
    },
    {
        "id": "f96ab142.d8bab8",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    }
]
